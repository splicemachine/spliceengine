Welcome to the Splice Machine Private Beta Test Program.  This README file contains supplementary material
to the Getting Started Guide, found at http://doc.splicemachine.com

The Getting Started Guide currently presents instructions for setting up and testing the Splice Machine on
a single unclustered instance.  See the section below for instructions to deploy in a cluster.

Please visit http://support.splicemachine.com for any problems, questions, or comments, or to
report a bug.


=========================================================
Download URL - Single Unclustered Instance
=========================================================

To download the setup for the unclustered instance, use a web browser to navigate to the following (approx. 80 MB):
   http://d10sdxe2fhfs9c.cloudfront.net/splice_machine-0.5rc4-cloudera-cdh4.3.0_simple.tar.gz
   
   	If you use Linux without a web browser, you can use the "wget <file>" command to get the file:
	$ wget http://d10sdxe2fhfs9c.cloudfront.net/splice_machine-0.5rc4-cloudera-cdh4.3.0_simple.tar.gz
	

=====================================
Download URL - Sample Data
=====================================

Compressed, this is about 200MB of data.  The link to access this data is at:
	http://d10sdxe2fhfs9c.cloudfront.net/demodata.tar.gz


=====================================
Deploying on a Cluster
=====================================

The instructions for deploying to the cluster are very different (and more involved) than the instructions to test 
on a single instance.  See the Getting Started Guide for single instance installation instructions.

At this time the only supported configuration during the Private Beta Test Program is a Cloudera Manager-managed 
cluster based on Cloudera's CDH 4.3.0 on Ubuntu Linux (12.04 LTS) as its base starting point.

Step 1: Identify machines (and the IP addresses) that will be your cluster.
Step 2:  Install Cloudera Manager on a Linux machine.  This can be one of the machines in your cluster, but does
not have to be.  On a vanilla Ubuntu machine, Cloudera Manager can be installed as follows:

$ wget http://archive.cloudera.com/cm4/installer/latest/cloudera-manager-installer.bin
$ chmod +x cloudera-manager-installer.bin
$ sudo ./cloudera-manager-installer.bin

Answer prompts, etc., and let the installer finish.  You can test it by navigating to <host-address>:7180
with a web browser (where host-address is the ip address of the machine where Cloudera Manager was installed), 
then logging in with username = admin, password = admin

Step 3: Create your cluster through the Cloudera Manager interface.  Note: You must use the Classic Wizard.  This will put you through 
the following steps:

a.  Specify hosts for cluster: select and validate the IP addresses of the cluster nodes

b.  Select the Repository.  Under "Use Parcels", click "More Options" and paste the following into the Custom Repository:

http://d10sdxe2fhfs9c.cloudfront.net

IMPORTANT: Hit the "Add" button.  This will give an option for a new CDH parcel:

CDH-4.3.0-1.cdh4.3.0.splice0.5rc4.22

Choose None for Impala and Solr, and leave the default for Cloudera Manager Agent
(Matched release).  Click Continue.

c.  Provide security credentials as appropriate for your organization
d.  When prompted for the CDH4 services to install, select "Custom Services".  Afterward, select HDFS, Zookeeper, 
and HBase.  Click Continue.
e.  Database setup is for monitoring.  Click Test Connection, then Continue once the test is complete
f.  Review the "Review Configuration Changes page", then click Continue.  Services will now start up.
After you see "Completed 9 of 9 steps", click Continue.

You will now see a "Congratulations!" message - click Continue - but you are not done yet.  HBase is now up, 
but the Splice Machine isn't.  Continue with the following steps to complete the Splice setup:  

Step 4: Set Splice Machine-specific properties in HBase

While still in Cloudera Manager, we need to do some additional configurations in order for
Splice Machine's installation to be completed.

a.  Navigate to All Services (Services->All Services)
b.  To the right of your cluster's HBase configuration (it might be "hbase1"), select Actions->Stop.  Click Close
  once complete.
c.  Click on "Hbase" (or "hbase1") link on the Left.
d.  Navigate to Configuration->View and Edit->Service-Wide->Advanced and paste in the following into the 
"HBase Service Configuration Safety Valve for hbase-site.xml" (then click "Save Changes"):

<property> 
<name>hbase.coprocessor.region.classes</name> 
<value>com.splicemachine.derby.hbase.SpliceOperationRegionObserver,com.splicemachine.derby.hbase.SpliceIndexObserver,
com.splicemachine.derby.hbase.SpliceDerbyCoprocessor,com.splicemachine.derby.hbase.SpliceIndexManagementEndpoint,
com.splicemachine.derby.hbase.SpliceIndexEndpoint,com.splicemachine.derby.impl.job.coprocessor.CoprocessorTaskScheduler,
com.splicemachine.si.coprocessors.SIObserver</value> 
<description>These are the coprocessors used to run the Splice Machine.</description> 
</property> 
<property> 
<name>hbase.coprocessor.master.classes</name> 
<value>com.splicemachine.derby.hbase.SpliceMasterObserver</value> 
<description>Master coprocessors for the Splice Machine.</description> 
</property> 
<property> 
<name>splice.compression</name> <value>snappy</value> 
</property> 
<property> <name>hbase.htable.threads.max</name> <value>20</value> 
</property> 
<property> <name>splice.task.maxWorkers</name> <value>20</value> 
</property> 
<property> <name>splice.ring.bufferSize</name> <value>100000</value> 
</property> 
<property> <name>hbase.master.loadbalance.bytable</name> 
<value>true</value> 
</property> 
<property> 
<name>hbase.balancer.period</name> 
<value>60000</value> 
</property> 
<property> 
<name>hbase.regions.slop</name> 
<value>0.01</value> 
</property> 
<property> <name>zookeeper.session.timeout</name> 
<value>1200000</value> 
</property> 
<property> 
<name>hbase.zookeeper.property.tickTime</name> 
<value>6000</value> 
</property> 
<property> 
<name>splice.marshal.kryoPoolSize</name> 
<value>1100</value> 
</property> 
<property>   
<name>splice.table.pool.coresize</name>     
<value>100</value> 
</property> 
<property> 
<name>hbase.hregion.memstore.block.multiplier</name> 
<value>4</value> 
</property> 
<property> <name>hbase.hstore.blockingStoreFiles</name> <value>200</value> 
</property>

e. Additional HBase Changes, Service-Wide:

  Maximum HBase Client Retries 40
  HBase Client Scanner Caching 1000

  (be sure to hit Save Changes before continuing)

f. Additional HBase Changes, RegionServer:
  (Note that you may have more than one "Region Server" heading on the left.  If so, 
   change them all)

   HBase RegionServer Handler Count 200
   Resource Management -> Heap Size 8GB.

   (be sure to hit Save Changes before continuing)

Step 5: Make the following HDFS setting changes:

 Namenode -> Resource Management -> Java Heap Size=2GB
 Namenode -> Performance -> NameNode Handler Count=60
 Namenode -> Performance -> NameNode Service Handler Count=60
 
 Datanode -> Resource Management -> Java Heap Size=2GB
 Datanode -> Performance -> Handler Count=20

Step 6: Make the following Zookeeper setting changes:

 Server -> Maximum Client Connections = 0 
 Server -> Maximum Session Timeout = 60000

 
Step 7: Stop and Restart Zookeeper and HDFS (but not HBase yet), and Delete existing /hbase directory:

From a command line:
$ sudo -su hdfs hadoop fs -rmr /hbase

Step 8: Create a new /hbase directory:

In Cloudera Manager, from the HBase window:  Actions->Create Root Directory

Step 9: Restart HBase

from HBase: Actions/Start

Step 10: Connect to the Splice Database

Start by using the splice.sh script provided:

$ ./splice.sh


=========================================
Cluster Operations
=========================================

You can use Cloudera Manager to perform most cluster operations once your Splice Machine 
is completely configured. 
 
There are however some commands that will require shell script commands:

1.  Dropping and recreating the database <instructions coming in RC5>

2.  Checking that the database is running <instructions coming in RC5>


=========================================
Connect with JDBC/ODBC Tools
=========================================

Business Intelligence and Query Visualization tools (such as Tableau and DbVisualizer) can
also be connected to the Splice Machine.  This is achieved through the use of our embedded JDBC driver 
or through the use of a third-party Apache Derby ODBC Driver.

a.  JDBC Connectivity Example

DbVisualizer (http://www.dbvis.com) is a simple example of a database visualization tool that connects
to Splice Machine via JDBC.  Once you have downloaded DbVisualizer (there is a free version):

1. Use Tools->Connection Wizard to start the process
2. Give the connection a name (e.g. Splice Machine Connection)
3. Under Select Database Driver, select "JavaDB/Derby Server"
4. Enter "app" for userid and password
5. For database server, leave as localhost if Splice Machine is running locally, otherwise enter the IP address
 of the machine that Splice is running on
6. For database enter splicedb
7. Do not check "Create Database"
8. Hit "Finish"

You will now see your connection listed in the left panel under Connections, and can explore the database
schema, enter queries, etc.

b.  ODBC Connectivity Example

Tableau (www.tableausoftware.com) is a reporting/BI tool that runs on Windows and connects vis ODBC.  You will first need
an Apache Derby ODBC Driver or ODBC/JDBC bridge.  These can be downloaded for evaluation or purchased at
Easysoft (www.easysoft.com).  Once this Driver or bridge is installed, you create a DSN:


  From Start menu - find CMD - right click on CMD - choose "Run as administrator"
  Run: %windir%\syswow64\odbcad32.exe
  
  Now specify a DSN name, description, leave User Name and Password blank.  Driver Class is org.apache.derby.jdbc.ClientDriver.
  Copy the derbyclient.jar to the client machine, and include its path in the Class Path.
  
  The URL should be "jdbc:splice://<hostname>:1527/splicedb" - where hostname is a server where SpliceMachine is running.
  
Now from Tableau, connect using "Connect to data->Other Databases (ODBC)".  Select the DSN created.  After you have finish the 
Connection setup, Tableau will be interacting with Splice Machine.


=========================================
A list of known bugs and other issues
=========================================

- IMPORTANT NOTE FOR CLUSTER USERS: If you import data like the examples shown with the sample data, you must FIRST
copy your sample data into HDFS (using copyFromLocal, etc), then change the paths to the HDFS path specified.


- IMPORTANT NOTE FOR LAPTOP USERS: If you are running the database on a laptop, you will need to stop and 
restart the database after closing and reopening the laptop.

- The scripts used to start and stop the Splice database do NOT handle directories with spaces in them. 
Please be sure to create directories without spaces or other special characters.

- Certain features are not available as part of the 0.5 release but are expected to follow soon.  These include:
  - Users/roles/security
  - Cursors
  - Foreign key constraints
  - Triggers
  - Temporary tables
  - Materialized views

- If you create a long-running query that you want to kill, typing Control-C at the prompt won't kill the query.
If necessary you can stop and restart the database, or just start another query interface session in another
terminal window using ./bin/sqlshell.sh.

- Certain DDL actions are not fully complete and/or do not maintain full transactional integrity.  It is best to 
execute DDL statements separately from DML statements for now.

- Complex nested joins (select * from d join (a left outer join (b join c on b1=c1) on a1 = a2) on d3 = b3)
  can fail.

- You currently cannot create an index on more than 16 columns.

- Restarting the database sometimes takes a couple of attempts.  The start and stop scripts will retry if needed.  If restarting
does not occur, check the splice.log.  If you see an exception but no "ready to accept connections", please retry the command.  
You are ready to go when you see the "ready to accept connections" message.

To report a bug, and for more hints, tips, and a Splice Developer Forum, please visit http://support.splicemachine.com




