<?xml version="1.0" encoding="UTF-8"?>
<project xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns="http://maven.apache.org/POM/4.0.0"
		 xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<artifactId>splice_machine</artifactId>
	<packaging>jar</packaging>
	<name>splice_machine</name>
	<description>Splice Machine</description>
	<parent>
		<artifactId>spliceengine</artifactId>
		<groupId>com.splicemachine</groupId>
		<version>FUJI.0-SNAPSHOT</version>
	</parent>
	<dependencies>
        <dependency>
            <groupId>org.hbase</groupId>
            <artifactId>asynchbase</artifactId>
            <version>${asynchbase.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-log4j12</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>log4j-over-slf4j</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.google.protobuf</groupId>
                    <artifactId>protobuf-java</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.stumbleupon</groupId>
                    <artifactId>async</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.zookeeper</groupId>
                    <artifactId>zookeeper</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.stumbleupon</groupId>
            <artifactId>async</artifactId>
            <version>${stumbleasync.version}</version>
        </dependency>
        <dependency>
            <groupId>com.google.protobuf</groupId>
            <artifactId>protobuf-java</artifactId>
            <version>${protobuf.version}</version>
        </dependency>
		<dependency>
			<groupId>org.roaringbitmap</groupId>
			<artifactId>RoaringBitmap</artifactId>
			<version>0.1.3</version>
		</dependency>
		<dependency>
			<groupId>org.apache.derby</groupId>
			<artifactId>derby</artifactId>
			<version>${derby.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.derby</groupId>
			<artifactId>derbyTesting</artifactId>
			<version>${derby.version}</version>
            <scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.apache.derby</groupId>
			<artifactId>derbynet</artifactId>
			<version>${derby.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.derby</groupId>
			<artifactId>derbyclient</artifactId>
			<version>${derby.version}</version>
		</dependency>
		<dependency>
			<groupId>org.datanucleus</groupId>
			<artifactId>datanucleus-core</artifactId>
			<version>2.0.3</version>
		</dependency>
		<dependency>
			<groupId>org.apache.derby</groupId>
			<artifactId>derbytools</artifactId>
			<version>${derby.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.derby</groupId>
			<artifactId>derbyrun</artifactId>
			<version>${derby.version}</version>
		</dependency>
		<dependency>
			<groupId>com.splicemachine</groupId>
			<artifactId>structured_si</artifactId>
			<version>FUJI.0-SNAPSHOT</version>
			<classifier>${envClassifier}${obfuscate.si}</classifier>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
			<version>${gson.version}</version>
			<type>jar</type>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-all</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>net.sf.opencsv</groupId>
			<artifactId>opencsv</artifactId>
			<version>2.3</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-api</artifactId>
			<version>1.7.1</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>slf4j-log4j12</artifactId>
			<version>1.7.1</version>
		</dependency>
		<dependency>
			<groupId>commons-dbutils</groupId>
			<artifactId>commons-dbutils</artifactId>
			<version>1.5</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>net.sf.ehcache</groupId>
			<artifactId>ehcache-core</artifactId>
			<version>2.6.6</version>
		</dependency>
		<dependency>
			<groupId>org.uncommons.watchmaker</groupId>
			<artifactId>watchmaker-framework</artifactId>
			<version>0.7.1</version>
			<exclusions>
				<exclusion>
					<artifactId>google-collections</artifactId>
					<groupId>com.google.collections</groupId>
				</exclusion>
			</exclusions>
		</dependency>
		<dependency>
			<groupId>org.apache.mrunit</groupId>
			<artifactId>mrunit</artifactId>
			<version>1.0.0</version>
			<classifier>hadoop2</classifier>
		</dependency>
		<!--      <dependency>
				<groupId>joda-time</groupId>
				<artifactId>joda-time</artifactId>
				<version>2.3</version>
			</dependency>
			-->
		<dependency>
			<groupId>com.carrotsearch</groupId>
			<artifactId>java-sizeof</artifactId>
			<version>0.0.4</version>
			<exclusions>
				<exclusion>
					<groupId>com.carrotsearch</groupId>
					<artifactId>junit-benchmarks</artifactId>
				</exclusion>
				<exclusion>
					<groupId>junit</groupId>
					<artifactId>junit</artifactId>
				</exclusion>
			</exclusions>
      </dependency>
      <dependency>
         <groupId>org.codehaus.jsr166-mirror</groupId>
         <artifactId>jsr166y</artifactId>
         <version>1.7.0</version>
      </dependency>
   </dependencies>
	<build>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<filtering>true</filtering>
			</resource>
		</resources>
		<testResources>
			<testResource>
				<directory>src/test/resources</directory>
				<filtering>true</filtering>
			</testResource>
		</testResources>
		<!-- Some plugins (javadoc for example) can be used in the normal build-
		  and the site phase. These plugins inherit their options from the <reporting>
		  section below. These settings can be overwritten here. -->
		<plugins>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>buildnumber-maven-plugin</artifactId>
				<version>1.2</version>
				<executions>
					<execution>
						<phase>validate</phase>
						<goals>
							<goal>create</goal>
						</goals>
					</execution>
				</executions>
				<configuration>
					<shortRevisionLength>10</shortRevisionLength>
					<doCheck>false</doCheck>
					<doUpdate>false</doUpdate>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<profiles>
		<profile>
			<id>assemble</id>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-assembly-plugin</artifactId>
						<version>2.4</version>
						<configuration>
							<source>6</source>
							<archive>
								<manifestEntries>
									<Implementation-Version>${buildNumber}</Implementation-Version>
									<Release>${project.version}</Release>
									<Build-Time>${maven.build.timestamp}</Build-Time>
									<URL>http://www.splicemachine.com</URL>
								</manifestEntries>
							</archive>
							<descriptors>
								<descriptor>${project.basedir}/src/main/assembly/assembly.xml</descriptor>
								<descriptor>${project.basedir}/src/main/assembly/simple_assembly.xml</descriptor>
							</descriptors>
						</configuration>
						<executions>
							<execution>
								<phase>package</phase>
								<id>simple</id>
								<goals>
									<goal>single</goal>
								</goals>
							</execution>
						</executions>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>ITs</id>
			<properties>
				<!-- enable failsafe integration tests -->
				<skip.integration.tests>false</skip.integration.tests>
				<!-- skip server start/stop if server already running -->
				<server.start.skip>skipServerStart</server.start.skip>
				<!-- ant task start/stop server args -->
				<run.command>/bin/bash</run.command>
				<splice.start.script>start-splice-dev.sh</splice.start.script>
				<splice.stop.script>stop-splice-dev.sh</splice.stop.script>
			</properties>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-antrun-plugin</artifactId>
						<version>1.6</version>
						<executions>
							<execution>
								<id>############## start-splice ################</id>
								<phase>pre-integration-test</phase>
								<configuration>
									<target name="StartSpliceServer" unless="${server.start.skip}">
										<taskdef resource="net/sf/antcontrib/antcontrib.properties"
												 classpathref="maven.plugin.classpath"/>
										<if>
											<istrue value="${failTasksRandomly}"/>
											<!-- run with chaos monkey (default) -->
											<then>
												<exec executable="${run.command}" dir="${basedir}" spawn="false">
													<arg value="${basedir}/../${splice.start.script}"/>
													<arg value="-c"/>
													<arg value="-p ${envClassifier}${obfuscate.si}"/>
													<arg value="-b ${build.tag}"/>
												</exec>
											</then>
											<else>
												<!-- chaos monkey overridden: -DfailTasksRandomly=false -->
												<exec executable="${run.command}" dir="${basedir}" spawn="false">
													<arg value="${basedir}/../${splice.start.script}"/>
													<arg value="-p ${envClassifier}${obfuscate.si}"/>
													<arg value="-b ${build.tag}"/>
												</exec>
											</else>
										</if>
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
							<execution>
								<id>############## stop-splice ################</id>
								<phase>post-integration-test</phase>
								<configuration>
									<target name="StopSpliceServer" unless="${server.start.skip}">
										<exec executable="${run.command}" dir="${basedir}" spawn="false">
											<arg value="${basedir}/../${splice.stop.script}"/>
											<arg value="-n ${build.number}"/>
										</exec>
									</target>
								</configuration>
								<goals>
									<goal>run</goal>
								</goals>
							</execution>
						</executions>
						<dependencies>
							<dependency>
								<groupId>ant-contrib</groupId>
								<artifactId>ant-contrib</artifactId>
								<version>1.0b3</version>
								<exclusions>
									<exclusion>
										<groupId>ant</groupId>
										<artifactId>ant</artifactId>
									</exclusion>
								</exclusions>
							</dependency>
							<dependency>
								<groupId>org.apache.ant</groupId>
								<artifactId>ant-nodeps</artifactId>
								<version>1.8.1</version>
							</dependency>
						</dependencies>
					</plugin>
                                        <plugin>
        					<groupId>com.btmatthews.maven.plugins</groupId>
        					<artifactId>ldap-maven-plugin</artifactId>
        					<version>1.2.0</version>
        					<configuration>
          						<monitorPort>11389</monitorPort>
          						<monitorKey>ldap</monitorKey>
          						<daemon>true</daemon>
          						<rootDn>dc=splicemachine,dc=com</rootDn>
          						<authDn>uid=splice,ou=People</authDn>
          						<passwd>admin</passwd>
          						<ldapPort>10389</ldapPort>
          						<ldifFile>sec.ldif</ldifFile>
        					</configuration>
        					<executions>
              						<execution>
            							<id>start-server</id>
            							<phase>pre-integration-test</phase>
            							<goals>
              								<goal>run</goal>
            							</goals>
          						</execution>
          						<execution>
            							<id>stop-server</id>
            							<phase>post-integration-test</phase>
            							<goals>
              								<goal>stop</goal>
           					        	</goals>
          						</execution>
						</executions>
      </plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>splice</id>
			<activation>
				<property>
					<name>splice</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.2.1</version>
						<executions>
							<execution>
								<goals>
									<goal>exec</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<classpathScope>compile</classpathScope>
							<executable>java</executable>
							<arguments>
								<argument>-cp</argument>
								<classpath>${maven.runtime.classpath}</classpath>
								<argument>-Xdebug</argument>
								<argument>-Djava.awt.headless=true</argument>
								<argument>-Djava.net.preferIPv4Stack=true</argument>
								<argument>-Dlog4j.configuration=file:${basedir}/src/main/resources/trace-log4j.properties</argument>
                <argument>-Xmx2g</argument>
                <argument>-Xms1g</argument>
                <argument>-XX:MaxPermSize=256M</argument>
                <argument>-XX:+CMSClassUnloadingEnabled</argument>
								<argument>-enableassertions</argument>
								<argument>-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=4000</argument>
								<argument>-Dderby.debug.true=DumpClassFile,DumpParseTree,DumpBindTree,DumpOptimizedTree,ByteCodeGenInstr</argument>
								<argument>-Dderby.language.logQueryPlan=true</argument>
								<argument>-Dderby.language.logStatementText=true</argument>
								<argument>-Dderby.language.useStatistics=true</argument>
								<argument>com.splicemachine.test.SpliceTestPlatform</argument>
								<argument>${project.build.directory}/zookeeper</argument>
								<argument>file://${project.build.directory}/hbase</argument>
								<argument>${failTasksRandomly}</argument>
							</arguments>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>spliceClusterMember</id>
			<activation>
				<property>
					<name>spliceClusterMember</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.2.1</version>
						<executions>
							<execution>
								<goals>
									<goal>exec</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<classpathScope>compile</classpathScope>
							<executable>java</executable>
							<arguments>
								<argument>-cp</argument>
								<classpath>${maven.runtime.classpath}</classpath>
								<argument>-Xdebug</argument>
								<argument>-Djava.awt.headless=true</argument>
								<argument>-Djava.net.preferIPv4Stack=true</argument>
								<argument>-Dlog4j.configuration=file:${basedir}/src/main/resources/trace-log4j.properties</argument>
								<argument>-Xmx2g</argument>
								<argument>-Xms1g</argument>
                <argument>-XX:MaxPermSize=256M</argument>
                <argument>-XX:+CMSClassUnloadingEnabled</argument>
								<argument>-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=4001</argument>
								<argument>com.splicemachine.test.SpliceTestClusterParticipant</argument>
								<argument>${project.build.directory}/hbase</argument>
								<argument>60021</argument>
								<argument>60031</argument>
							</arguments>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>spliceZoo</id>
			<activation>
				<property>
					<name>zoo</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<artifactId>maven-clean-plugin</artifactId>
						<version>2.5</version>
						<executions>
							<execution>
								<goals>
									<goal>clean</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<excludeDefaultDirectories>true</excludeDefaultDirectories>
							<filesets>
								<fileset>
									<directory>${project.build.directory}/hbase</directory>
									<includes>
										<include>**/*</include>
									</includes>
								</fileset>
								<fileset>
									<directory>${project.build.directory}/zookeeper</directory>
									<includes>
										<include>**/*</include>
									</includes>
								</fileset>
							</filesets>
						</configuration>
					</plugin>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.2.1</version>
						<executions>
							<execution>
								<goals>
									<goal>exec</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<classpathScope>compile</classpathScope>
							<executable>java</executable>
							<arguments>
								<argument>-cp</argument>
								<classpath>${maven.runtime.classpath}</classpath>
								<argument>-Djava.awt.headless=true</argument>
								<argument>-Dlog4j.configuration=file:${basedir}/src/main/resources/info-log4j.properties</argument>
								<argument>-Djava.net.preferIPv4Stack=true</argument>
								<argument>-Dzookeeper.sasl.client=false</argument>
								<argument>-Xmx2g</argument>
								<argument>-Xms1g</argument>
                <argument>-XX:MaxPermSize=256M</argument>
                <argument>-XX:+CMSClassUnloadingEnabled</argument>
								<argument>-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=4002</argument>
								<argument>org.apache.zookeeper.server.ZooKeeperServerMain</argument>
								<argument>2181</argument>
								<argument>${project.build.directory}/zookeeper</argument>
								<argument>10</argument>
								<argument>0</argument>
							</arguments>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>spliceCI</id>
			<activation>
				<property>
					<name>spliceCI</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.2.1</version>
						<executions>
							<execution>
								<goals>
									<goal>exec</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<classpathScope>compile</classpathScope>
							<executable>java</executable>
							<workingDirectory>${basedir}</workingDirectory>
							<arguments>
								<argument>-cp</argument>
								<classpath>${maven.runtime.classpath}</classpath>
								<argument>-Xdebug</argument>
								<argument>-Dcom.sun.management.jmxremote.ssl=false</argument>
								<argument>-Dcom.sun.management.jmxremote.authenticate=false</argument>
								<argument>-Dcom.sun.management.jmxremote.port=10102</argument>
								<argument>-Djava.awt.headless=true</argument>
								<argument>-Dlog4j.configuration=file:${basedir}/src/main/resources/hbase-log4j.properties</argument>
								<argument>-Djava.net.preferIPv4Stack=true</argument>
								<argument>-Xmx3g</argument>
								<argument>-Xms1g</argument>
                <argument>-XX:MaxPermSize=256M</argument>
                <argument>-XX:+CMSClassUnloadingEnabled</argument>
								<argument>-enableassertions</argument>
								<argument>com.splicemachine.test.SpliceTestPlatform</argument>
								<argument>${project.build.directory}/zookeeper</argument>
								<argument>file://${project.build.directory}/hbase</argument>
								<argument>60021</argument>
								<argument>60022</argument>
								<argument>60023</argument>
								<argument>60024</argument>
								<argument>${failTasksRandomly}</argument>
							</arguments>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>spliceClusterMemberFast</id>
			<activation>
				<property>
					<name>spliceClusterMemberFast</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.2.1</version>
						<executions>
							<execution>
								<goals>
									<goal>exec</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<classpathScope>compile</classpathScope>
							<executable>java</executable>
							<arguments>
								<argument>-cp</argument>
								<classpath>${maven.runtime.classpath}</classpath>
								<argument>-Djava.awt.headless=true</argument>
								<argument>-Dlog4j.configuration=file:${basedir}/src/main/resources/info-log4j.properties</argument>
								<argument>-Djava.net.preferIPv4Stack=true</argument>
								<argument>-Xmx2g</argument>
								<argument>-Xms1g</argument>
                <argument>-XX:MaxPermSize=256M</argument>
                <argument>-XX:+CMSClassUnloadingEnabled</argument>
								<argument>-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=4001</argument>
								<argument>com.splicemachine.test.SpliceTestClusterParticipant</argument>
								<argument>${project.build.directory}/hbase</argument>
								<argument>60021</argument>
								<argument>60031</argument>
							</arguments>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>splice-java</id>
			<activation>
				<property>
					<name>splice-java</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.2.1</version>
						<executions>
							<execution>
								<goals>
									<goal>java</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<mainClass>com.splicemachine.test.SpliceTestPlatform</mainClass>
							<executable>maven</executable>
							<arguments>
								<argument>${project.build.directory}/zookeeper</argument>
								<argument>file://${project.build.directory}/hbase</argument>
								<argument>${failTasksRandomly}</argument>
							</arguments>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>spliceFast</id>
			<activation>
				<property>
					<name>spliceFast</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.2.1</version>
						<executions>
							<execution>
								<goals>
									<goal>exec</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<classpathScope>compile</classpathScope>
							<executable>java</executable>
							<arguments>
								<argument>-cp</argument>
								<classpath>${maven.runtime.classpath}</classpath>
								<argument>-Xdebug</argument>
								<argument>-XX:+UseConcMarkSweepGC</argument>
								<argument>-Dlog4j.configuration=${log4j.config.uri}</argument>
								<argument>-Djava.net.preferIPv4Stack=true</argument>
								<argument>-Djava.awt.headless=true</argument>
								<argument>-Dzookeeper.sasl.client=false</argument>
								<argument>-Dcom.sun.management.jmxremote.ssl=false</argument>
								<argument>-Dcom.sun.management.jmxremote.authenticate=false</argument>
								<argument>-Dcom.sun.management.jmxremote.port=10102</argument>
								<argument>-Xmx8g</argument>
								<argument>-Xms1g</argument>
                <argument>-XX:MaxPermSize=256M</argument>
                <argument>-XX:+CMSClassUnloadingEnabled</argument>
								<argument>-XX:MaxDirectMemorySize=1g</argument>
								<argument>-enableassertions</argument>
								<argument>-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=4000</argument>
								<!-- Setting the updateSystemProcs option to true causes all of the system stored procedures to be re-created on server startup. -->
								<argument>-Dderby.language.updateSystemProcs=false</argument>
								<!-- Setting the logStatementText option to true enables logging of all statements. -->
								<argument>-Dderby.language.logStatementText=false</argument>
								<argument>com.splicemachine.test.SpliceTestPlatform</argument>
								<argument>${project.build.directory}/zookeeper</argument>
								<argument>file://${project.build.directory}/hbase</argument>
								<argument>${failTasksRandomly}</argument>
							</arguments>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>ij</id>
			<activation>
				<property>
					<name>ij</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.2.1</version>
						<executions>
							<execution>
								<goals>
									<goal>java</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<systemProperties>
								<systemProperty>
									<key>ij.connection.splice</key>
									<value>jdbc:splice://localhost:1527/splicedb;user=splice;password=admin</value>
								</systemProperty>
							</systemProperties>
							<mainClass>org.apache.derby.tools.ij</mainClass>
							<includeProjectDependencies>true</includeProjectDependencies>
							<executable>maven</executable>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
		<profile>
			<id>info</id>
			<activation>
				<property>
					<name>info</name>
				</property>
			</activation>
			<properties>
				<log4j.location>${basedir}/src/main/resources/info-log4j.properties</log4j.location>
			</properties>
		</profile>
		<profile>
			<id>trace</id>
			<activation>
				<activeByDefault>true</activeByDefault>
			</activation>
			<properties>
				<log4j.location>${basedir}/src/main/resources/trace-log4j.properties</log4j.location>
			</properties>
		</profile>
		<profile>
			<id>harness</id>
			<activation>
				<property>
					<name>harness</name>
				</property>
			</activation>
			<build>
				<plugins>
					<plugin>
						<groupId>org.codehaus.mojo</groupId>
						<artifactId>exec-maven-plugin</artifactId>
						<version>1.2.1</version>
						<executions>
							<execution>
								<goals>
									<goal>exec</goal>
								</goals>
							</execution>
						</executions>
						<configuration>
							<includeProjectDependencies>true</includeProjectDependencies>
							<classpathScope>compile</classpathScope>
							<executable>java</executable>
							<arguments>
								<argument>-cp</argument>
								<classpath>${maven.runtime.classpath}</classpath>
								<argument>org.apache.derbyTesting.functionTests.harness.RunTest</argument>
								<argument>${test}</argument>
							</arguments>
						</configuration>
					</plugin>
				</plugins>
			</build>
		</profile>
	</profiles>
</project>
