<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2012 - 2017 Splice Machine, Inc.
  ~
  ~ This file is part of Splice Machine.
  ~ Splice Machine is free software: you can redistribute it and/or modify it under the terms of the
  ~ GNU Affero General Public License as published by the Free Software Foundation, either
  ~ version 3, or (at your option) any later version.
  ~ Splice Machine is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
  ~ without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  ~ See the GNU Affero General Public License for more details.
  ~ You should have received a copy of the GNU Affero General Public License along with Splice Machine.
  ~ If not, see <http://www.gnu.org/licenses/>.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <artifactId>hbase_sql-${envClassifier}</artifactId>
    <description>SQL engine based on HBase</description>
    <parent>
        <artifactId>spliceengine-parent</artifactId>
        <groupId>com.splicemachine</groupId>
        <version>2.5.0.1809-SNAPSHOT</version>
    </parent>
    <properties>
        <!--Skip server startup-->
        <server.skip.start>skipServerStart</server.skip.start>
        <!--Ant task to run shell scripts-->
        <shell.command>/bin/bash</shell.command>
        <start.script>${project.basedir}/src/test/bin/start-splice-its</start.script>
        <stop.script>${project.basedir}/src/test/bin/stop-splice-its</stop.script>
        <ee_out/>
        <skipTests>${maven.skip.tests}</skipTests>
        <skip.dep.copy>${skipSparkPrepare}</skip.dep.copy>
    </properties>
    <dependencies>
        <!--
        -sf- For some absurd reason, we have an annoying dependency conflict between hbase and
        spark dependencies, which results in YARN not being able to boot if we allow the normal dependency
        chain. To avoid this (and therefore to allow YARN to boot), we have to explicitely state this jersey
        dependency here. When we figure out how to avoid that, then we can remove this, since we don't
        actually depend on jersey anywhere.
        -->
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-core</artifactId>
            <version>1.9</version>
        </dependency>
        <dependency>
            <groupId>com.typesafe.akka</groupId>
            <artifactId>akka-remote_${scala.binary.version}</artifactId>
            <version>2.4.8</version>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-hive_${scala.binary.version}</artifactId>
            <version>${spark.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-hive_${scala.binary.version}</artifactId>
            <version>${spark.version}</version>
            <exclusions>
                <exclusion>
                    <artifactId>httpclient</artifactId>
                    <groupId>org.apache.httpcomponents</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-network-yarn_${scala.binary.version}</artifactId>
            <version>${spark.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-yarn_${scala.binary.version}</artifactId>
            <version>${spark.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.apache.hadoop</groupId>
                    <artifactId>hadoop-yarn-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.hadoop</groupId>
                    <artifactId>hadoop-yarn-server-web-proxy</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.hadoop</groupId>
                    <artifactId>hadoop-client</artifactId>
                </exclusion>
            </exclusions>


        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-mllib_${scala.binary.version}</artifactId>
            <version>${spark.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-core_${scala.binary.version}</artifactId>
            <version>${spark.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.scala-lang</groupId>
                    <artifactId>scala-reflect</artifactId>
                </exclusion>
                <exclusion>
                    <artifactId>hadoop-client</artifactId>
                    <groupId>org.apache.hadoop</groupId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-streaming_${scala.binary.version}</artifactId>
            <version>${spark.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-streaming-kafka-0-10_${scala.binary.version}</artifactId>
            <version>${spark.version}</version>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>splice_machine</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.hbase</groupId>
            <artifactId>hbase-server</artifactId>
            <version>${hbase.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.jboss.netty</groupId>
                    <artifactId>netty</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.slf4j</groupId>
                    <artifactId>slf4j-log4j12</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.hadoop</groupId>
                    <artifactId>hadoop-core</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.hadoop</groupId>
                    <artifactId>hadoop-common</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.mortbay.jetty</groupId>
                    <artifactId>jetty</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.mortbay.jetty</groupId>
                    <artifactId>jetty-util</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.mortbay.jetty</groupId>
                    <artifactId>jetty-sslengine</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.mortbay.jetty</groupId>
                    <artifactId>servlet-api-2.5</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.mortbay.jetty</groupId>
                    <artifactId>jsp-2.1</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.mortbay.jetty</groupId>
                    <artifactId>jsp-api-2.1</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>tomcat</groupId>
                    <artifactId>jasper-compiler</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>tomcat</groupId>
                    <artifactId>jasper-runtime</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.hbase</groupId>
                    <artifactId>hbase-prefix-tree</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.sun.jersey</groupId>
                    <artifactId>jersey-core</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.sun.jersey</groupId>
                    <artifactId>jersey-server</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.sun.jersey</groupId>
                    <artifactId>jersey-json</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>io.netty</groupId>
                    <artifactId>netty-all</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>hbase_storage-${envClassifier}</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>hbase_pipeline-${envClassifier}</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-network-common_${scala.binary.version}</artifactId>
            <version>${spark.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.scalatest</groupId>
                    <artifactId>scalatest_${scala.binary.version}</artifactId>
                </exclusion>
            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.apache.hbase</groupId>
            <artifactId>hbase-client</artifactId>
            <version>${hbase.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.jboss.netty</groupId>
                    <artifactId>netty</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>io.netty</groupId>
                    <artifactId>netty-all</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.hadoop</groupId>
                    <artifactId>hadoop-common</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.hadoop</groupId>
                    <artifactId>hadoop-core</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka_${scala.binary.version}</artifactId>
            <version>${kafka.version}</version>
            <classifier>test</classifier>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka_${scala.binary.version}</artifactId>
            <version>${kafka.version}</version>
        </dependency>

        <!--Test dependencies -->
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>pipeline_api</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>splice_si_api</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>hbase_storage-${envClassifier}</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.hbase</groupId>
            <artifactId>hbase-testing-util</artifactId>
            <version>${hbase.version}</version>
            <!--intentionally compile scope,we use this dependency at app compile and runtime-->
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.mortbay.jetty</groupId>
                    <artifactId>jsp-2.1</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.mortbay.jetty</groupId>
                    <artifactId>jsp-api-2.1</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>tomcat</groupId>
                    <artifactId>jasper-compiler</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>tomcat</groupId>
                    <artifactId>jasper-runtime</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.hadoop</groupId>
                    <artifactId>hadoop-core</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.mortbay.jetty</groupId>
                    <artifactId>servlet-api</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-common</artifactId>
            <version>${hadoop.version}</version>
	    <exclusions>
		    <exclusion>
			    <groupId>asm</groupId>
			    <artifactId>asm</artifactId>
		    </exclusion>
            <exclusion>
                <groupId>asm</groupId>
                <artifactId>asm</artifactId>
            </exclusion>
            <exclusion>
                <artifactId>hive-common</artifactId>
                <groupId>org.apache.hive</groupId>
             </exclusion>
	    </exclusions>

        </dependency>
	<dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-distcp</artifactId>
            <version>${hadoop.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-common</artifactId>
            <version>${hadoop.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>javax.servlet</groupId>
                    <artifactId>servlet-api</artifactId>
                </exclusion>

            </exclusions>
        </dependency>

        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-aws</artifactId>
            <version>${hadoop.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>asm</groupId>
                    <artifactId>asm</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.fasterxml.jackson.core</groupId>
                    <artifactId>jackson-core</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>joda-time</groupId>
                    <artifactId>joda-time</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.fasterxml.jackson.core</groupId>
                    <artifactId>jackson-annotations</artifactId>
                </exclusion>

                <exclusion>
                    <groupId>com.fasterxml.jackson.core</groupId>
                    <artifactId>jackson-databind</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>javax.servlet</groupId>
                    <artifactId>servlet-api</artifactId>
                </exclusion>
                <exclusion>
                    <artifactId>hive-common</artifactId>
                    <groupId>org.apache.hive</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.hive</groupId>
            <artifactId>hive-beeline</artifactId>
            <version>${hive.version}</version>
            <scope>provided</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.hive</groupId>
            <artifactId>hive-cli</artifactId>
            <version>${hive.version}</version>
            <scope>provided</scope>
            <exclusions>
                <exclusion>
                    <artifactId>guava</artifactId>
                    <groupId>com.google.guava</groupId>
                </exclusion>
                <exclusion>
                    <artifactId>hive-exec</artifactId>
                    <groupId>org.apache.hive</groupId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.hive</groupId>
            <artifactId>hive-contrib</artifactId>
            <scope>provided</scope>
            <version>${hive.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.apache.hive</groupId>
                    <artifactId>hive-exec</artifactId>
                </exclusion>

            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.hive</groupId>
            <artifactId>hive-hbase-handler</artifactId>
            <scope>provided</scope>
            <version>${hive.version}</version>
            <exclusions>
                <exclusion>
                    <groupId>org.apache.hive</groupId>
                    <artifactId>hive-exec</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.hive</groupId>
            <artifactId>hive-hwi</artifactId>
            <scope>provided</scope>
            <version>${hive.version}</version>
	    <exclusions>
		    <exclusion>
			    <groupId>asm</groupId>
			    <artifactId>asm</artifactId>
		    </exclusion>
            <exclusion>
                <groupId>org.apache.hive</groupId>
                <artifactId>hive-exec</artifactId>
            </exclusion>
	    </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.hive</groupId>
            <artifactId>hive-jdbc</artifactId>
            <scope>provided</scope>
            <version>${hive.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.hive</groupId>
            <artifactId>hive-service</artifactId>
            <scope>provided</scope>
            <version>${hive.version}</version>
	    <exclusions>
		    <exclusion>
			    <groupId>asm</groupId>
			    <artifactId>asm</artifactId>
		    </exclusion>
            <exclusion>
                <groupId>org.apache.hive</groupId>
                <artifactId>hive-exec</artifactId>
            </exclusion>
	    </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-yarn-common</artifactId>
            <version>${hadoop.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-yarn-client</artifactId>
            <version>${hadoop.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>splice_machine</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-yarn-server-common</artifactId>
            <version>${hadoop.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-yarn-server-nodemanager</artifactId>
            <version>${hadoop.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-yarn-server-resourcemanager</artifactId>
            <version>${hadoop.version}</version>
        </dependency>
        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-yarn-server-tests</artifactId>
            <version>${hadoop.version}</version>
            <classifier>tests</classifier>
        </dependency>
        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-mapreduce-client-shuffle</artifactId>
            <version>${hadoop.version}</version>
        </dependency>
        <dependency>
            <groupId>commons-dbutils</groupId>
            <artifactId>commons-dbutils</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
        </dependency>
        <dependency>
            <groupId>com.splicemachine</groupId>
            <artifactId>hbase_storage-${envClassifier}</artifactId>
            <version>${project.version}</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <build>
        <extensions>
            <extension>
                <groupId>kr.motd.maven</groupId>
                <artifactId>os-maven-plugin</artifactId>
                <version>1.5.0.Final</version>
            </extension>
        </extensions>

        <plugins>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <configuration>
                    <excludes>
                        <exclude>**/com/splicemachine/backup/*</exclude>
                        <exclude>**/core-site.xml</exclude>
                        <exclude>**/yarn-site.xml</exclude>
                        <exclude>**/*log4j.properties</exclude>
                    </excludes>
                </configuration>
                <executions>
                    <execution>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <!--This used to be confinded to the spark-prepare profile, but is now done always by default
                 To disable, use skipSparkPrepare on the command line
                 -->
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>2.10</version>
                <dependencies>
                    <dependency>
                        <groupId>org.splicetest.txn</groupId>
                        <artifactId>txn-it-procs</artifactId>
                        <version>2.5.0.1809-SNAPSHOT</version>
                    </dependency>
                    <dependency>
                        <groupId>org.splicetest.sqlj</groupId>
                        <artifactId>sqlj-it-procs</artifactId>
                        <version>2.5.0.1809-SNAPSHOT</version>
                    </dependency>
                </dependencies>
                <executions>
                    <execution>
                        <id>copy</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <skip>${skip.dep.copy}</skip>
                            <excludeScope>provided</excludeScope>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-procs</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>org.splicetest.txn</groupId>
                                    <artifactId>txn-it-procs</artifactId>
                                    <version>2.5.0.1809-SNAPSHOT</version>
                                    <type>jar</type>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${project.build.directory}/txn-it</outputDirectory>
                                    <destFileName>txn-it.jar</destFileName>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>org.splicetest.sqlj</groupId>
                                    <artifactId>sqlj-it-procs</artifactId>
                                    <version>2.5.0.1809-SNAPSHOT</version>
                                    <type>jar</type>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${project.build.directory}/sql-it</outputDirectory>
                                    <destFileName>sql-it.jar</destFileName>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <executions>
                    <!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = Integration tests: SERIAL -->
                    <execution>
                        <id>integration-tests-serial</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <groups>com.splicemachine.test.SerialTest</groups>
                            <excludedGroups>${excluded.categories}</excludedGroups>
                            <argLine>-Xmx3g</argLine>
                            <redirectTestOutputToFile>true</redirectTestOutputToFile>
                            <dependenciesToScan>
                                <dependency>com.splicemachine:splice_machine</dependency>
                            </dependenciesToScan>
                            <includes>
                                <include>**/*IT.java</include>
                            </includes>
                            <excludes>
                                <exclude>com/splicemachine/derby/impl/sql/execute/operations/window/test/framework/**
                                </exclude>
                            </excludes>
                            <runOrder>alphabetical</runOrder>
                        </configuration>
                    </execution>
                    <execution>
                        <id>integration-tests-parallel</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <excludedGroups>com.splicemachine.test.SerialTest, com.splicemachine.test.RestoreTest, ${excluded.categories}</excludedGroups>
                            <parallel>classes</parallel>
                            <threadCount>1</threadCount>
                            <!-- -sf- single-threaded for now -->
                            <perCoreThreadCount>false</perCoreThreadCount>
                            <argLine>-Xmx5g</argLine>
                            <redirectTestOutputToFile>true</redirectTestOutputToFile>
                            <dependenciesToScan>
                                <dependency>com.splicemachine:splice_machine</dependency>
                            </dependenciesToScan>
                            <includes>
                                <include>**/*IT.java</include>
                            </includes>
                            <excludes>
                                <!-- Skip all unit tests -->
                                <exclude>**/*Test.java</exclude>
                            </excludes>
                            <runOrder>alphabetical</runOrder>
                        </configuration>
                    </execution>
		    <!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = Integration tests: BACKUP -->
                    <execution>
                        <id>integration-tests-backup</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <groups>com.splicemachine.test.RestoreTest</groups>
                            <argLine>-Xmx3g</argLine>
                            <redirectTestOutputToFile>true</redirectTestOutputToFile>
                            <includes>
                                <include>**/*RestoreIT.java</include>
                            </includes>
                            <excludes>
                                <!-- Skip all unit tests -->
                                <exclude>**/*Test.java</exclude>
                            </excludes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>############### start-splice-its ###############</id>
                        <phase>pre-integration-test</phase>
                        <configuration>
                            <skip>${skipTests}</skip>
                            <target name="StartSpliceServer" unless="${server.skip.start}">
                                <taskdef resource="net/sf/antcontrib/antcontrib.properties" classpathref="maven.plugin.classpath"/>
                                <if>
                                    <istrue value="${failTasksRandomly}"/>
                                    <!-- run with chaos monkey (default) -->
                                    <then>
                                        <exec executable="${shell.command}" dir="${basedir}" spawn="false">
                                            <arg value="${start.script}"/>
                                            <arg value="-c"/>
                                            <arg value="-p ${envClassifier},${envHbase}${ee_out}"/>
                                        </exec>
                                    </then>
                                    <else>
                                        <!-- chaos monkey overridden: -DfailTasksRandomly=false -->
                                        <exec executable="${shell.command}" dir="${basedir}" spawn="false">
                                            <arg value="${start.script}"/>
                                            <arg value="-p ${envClassifier},${envHbase}${ee_out}"/>
                                        </exec>
                                    </else>
                                </if>
                                <property name="classpath.test" refid="maven.test.classpath"/>
                                <!--suppress MavenModelInspection -->
                                <java classname="com.splicemachine.test.SpliceTestPlatformWait" classpath="${classpath.test}" spawn="false">
                                    <arg value="localhost"/>
                                    <arg value="1527"/>
                                </java>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>############### stop-splice-its ###############</id>
                        <phase>post-integration-test</phase>
                        <configuration>
                            <skip>${skipTests}</skip>
                            <target name="StopSpliceServer" unless="${server.skip.start}">
                                <exec executable="${shell.command}" dir="${basedir}" spawn="false">
                                    <arg value="${stop.script}"/>
                                </exec>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>clean stop-splice-its</id>
                        <phase>pre-clean</phase>
                        <configuration>
                            <skip>${skipTests}</skip>
                            <target name="StopSpliceServer" unless="${server.skip.start}">
                                <exec executable="${shell.command}" dir="${basedir}" spawn="false">
                                    <arg value="${stop.script}"/>
                                </exec>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>ant-contrib</groupId>
                        <artifactId>ant-contrib</artifactId>
                        <version>1.0b3</version>
                        <exclusions>
                            <exclusion>
                                <groupId>ant</groupId>
                                <artifactId>ant</artifactId>
                            </exclusion>
                        </exclusions>
                    </dependency>
                    <dependency>
                        <groupId>org.apache.ant</groupId>
                        <artifactId>ant-nodeps</artifactId>
                        <version>1.8.1</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>1.9.1</version>
                <executions>
                    <execution>
                        <id>add-platform-source</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${envHbase}/src/main/java</source>
                            </sources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>add-platform-test-source</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-test-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>${envHbase}/src/test/java</source>
                                <source>spark${spark.version}/src/test/java</source>
                            </sources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>add-platform-test-resource</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-test-resource</goal>
                        </goals>
                        <configuration>
                            <resources>
                                <resource>
                                    <directory>${envHbase}/src/test/resources</directory>
                                </resource>
                                <resource>
                                    <directory>spark${spark.version}/src/test/resources</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>

                </executions>
            </plugin>
        </plugins>
        <resources>
            <resource>
                <directory>${envHbase}/src/main/resources</directory>
            </resource>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
        </resources>
    </build>
    <profiles>
        <!-- Test Environment execution profiles-->
        <profile>
            <!-- Kafka-->
            <id>spliceKafka</id>
            <activation>
                <property>
                    <name>kafka</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-clean-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>clean</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <excludeDefaultDirectories>true</excludeDefaultDirectories>
                            <filesets>
                                <fileset>
                                    <directory>${project.build.directory}/hbase</directory>
                                    <includes>
                                        <include>**/*</include>
                                    </includes>
                                </fileset>
                                <fileset>
                                    <directory>${project.build.directory}/zookeeper</directory>
                                    <includes>
                                        <include>**/*</include>
                                    </includes>
                                </fileset>
                            </filesets>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <classpathScope>test</classpathScope>
                            <executable>java</executable>
                            <arguments>
                                <argument>-classpath</argument>
                                <classpath/>
                                <argument>-Djava.awt.headless=true</argument>
                                <argument>
                                    -Dlog4j.configuration=file:${basedir}/src/main/resources/info-log4j.properties
                                </argument>
                                <argument>-Djava.net.preferIPv4Stack=true</argument>
                                <argument>-Dzookeeper.sasl.client=false</argument>
                                <argument>-Xmx1g</argument>
                                <argument>-Xms1g</argument>
                                <argument>-XX:+CMSClassUnloadingEnabled</argument>
                                <argument>com.splicemachine.kafka.TestKafkaCluster</argument>
                                <argument>localhost:2181</argument>
                            </arguments>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <!-- ZooKeeper-->
            <id>spliceZoo</id>
            <activation>
                <property>
                    <name>zoo</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-clean-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>clean</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <excludeDefaultDirectories>true</excludeDefaultDirectories>
                            <filesets>
                                <fileset>
                                    <directory>${project.build.directory}/hbase</directory>
                                    <includes>
                                        <include>**/*</include>
                                    </includes>
                                </fileset>
                                <fileset>
                                    <directory>${project.build.directory}/zookeeper</directory>
                                    <includes>
                                        <include>**/*</include>
                                    </includes>
                                </fileset>
                            </filesets>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <classpathScope>test</classpathScope>
                            <executable>java</executable>
                            <arguments>
                                <argument>-classpath</argument>
                                <classpath/>
                                <argument>-Djava.awt.headless=true</argument>
                                <argument>
                                    -Dlog4j.configuration=file:${basedir}/src/main/resources/info-log4j.properties
                                </argument>
                                <argument>-Djava.net.preferIPv4Stack=true</argument>
                                <argument>-Dzookeeper.sasl.client=false</argument>
                                <argument>-Xmx1g</argument>
                                <argument>-Xms1g</argument>
                                <argument>-XX:+CMSClassUnloadingEnabled</argument>
                                <argument>-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=4002</argument>
                                <argument>org.apache.zookeeper.server.ZooKeeperServerMain</argument>
                                <argument>2181</argument>
                                <argument>${project.build.directory}/zookeeper</argument>
                                <argument>10</argument>
                                <argument>0</argument>
                            </arguments>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>spliceYarn</id>
            <activation>
                <property>
                    <name>spliceYarn</name>
                </property>
            </activation>
            <properties>
                <nodeCount>1</nodeCount>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <version>1.4.0</version>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>java</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <!-- exec:java required so that these 2 dependency properties are available (they aren't with exec:exec -->
                            <classpathScope>test</classpathScope>
                            <!--<includeProjectDependencies>false</includeProjectDependencies>-->
                            <!--<includePluginDependencies>true</includePluginDependencies>-->
                            <mainClass>com.splicemachine.test.SpliceTestYarnPlatform</mainClass>
                            <arguments>
                                <!-- Root of the serve classpath. Yarn config file (yarn-site.xml) will be written here. -->
                                <argument>${project.build.directory}/classes</argument>
                                <argument>${nodeCount}</argument>
                            </arguments>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>spliceFast</id>
            <activation>
                <property>
                    <name>spliceFast</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <classpathScope>test</classpathScope>
                            <executable>java</executable>
                            <arguments>
                                <!-- <argument>-verbose:gc</argument> -->
                                <argument>-classpath</argument>
                                <classpath/>
                                <argument>-Xdebug</argument>
                                <!-- <argument>-XX:+UnlockCommercialFeatures</argument>
                                <argument>-XX:+FlightRecorder</argument> -->
                                <argument>-Dlog4j.configuration=${log4j.config.uri}</argument>
                                <argument>-Djava.net.preferIPv4Stack=true</argument>
                                <argument>-Djava.awt.headless=true</argument>
                                <argument>-Dzookeeper.sasl.client=false</argument>
                                <argument>-Dcom.sun.management.jmxremote.ssl=false</argument>
                                <argument>-Dcom.sun.management.jmxremote.authenticate=false</argument>
                                <argument>-Dcom.sun.management.jmxremote.port=10102</argument>
                                <argument>-Dcom.sun.management.jmxremote.port=10102</argument>
                                <argument>-Dsplice.authentication=NATIVE</argument>
                                <argument>-Dcom.splicemachine.enableLegacyAsserts=true</argument>
				<argument>-Djava.library.path=${project.build.directory}/../../assembly/${envClassifier}/native/${os.detected.classifier}:/usr/local/lib/</argument>
                                <argument>-Xmx4g</argument>
                                <argument>-Xms1g</argument>
                                <!-- Spark Sys props -->
                                <argument>-Dsplice.spark.app.name=SpliceMachine</argument>
				<argument>-Dsplice.spark.eventLog.enabled=true</argument>
				<argument>-Dsplice.spark.eventLog.dir=${project.build.directory}/SpliceTestYarnPlatform/</argument>
                                <argument>-Dsplice.spark.sql.warehouse.dir=${project.build.directory}/spark-warehouse</argument>
                                <!--                                <argument>-Dsplice.spark.broadcast.factory=org.apache.spark.broadcast.HttpBroadcastFactory</argument> -->
                                <argument>-Dsplice.spark.driver.host=localhost</argument>
                                <argument>-Dsplice.spark.driver.cores=1</argument>
                                <argument>
                                    -Dsplice.spark.driver.extraClassPath=${project.build.directory}/classes:${project.build.directory}/dependency/*
                                </argument>
                                <argument>-Dsplice.spark.driver.maxResultSize=1g</argument>
                                <argument>-Dsplice.spark.driver.memory=1g</argument>
                                <argument>-Dsplice.spark.enabled=true</argument>
                                <argument>-Dsplice.spark.executor.cores=3</argument>
                                <argument>
                                    -Dsplice.spark.executor.extraClassPath=${project.build.directory}/classes:${project.build.directory}/dependency/*
                                </argument>
                                <argument>-Dspark.executor.extraLibraryPath=${project.build.directory}/../../assembly/${envClassifier}/native/${os.detected.classifier}</argument>
                                <argument>
                                    -Dspark.yarn.jars=${project.build.directory}/classes,${project.build.directory}/dependency/*
                                </argument>

				<argument>-Djava.library.path=${project.build.directory}/../../assembly/${envClassifier}/native/${os.detected.classifier}:/usr/local/lib/</argument>

                                <argument>-Dsplice.spark.executor.instances=1</argument>
                                <argument>-Dsplice.spark.executor.memory=2000M</argument>
                                <argument>-Dsplice.spark.io.compression.lz4.blockSize=32k</argument>

                                <argument>-Dspark.broadcast.compress=true</argument>

                                <argument>-Dsplice.spark.kryo.referenceTracking=false</argument>
                                <argument>
                                    -Dsplice.spark.kryo.registrator=com.splicemachine.derby.impl.SpliceSparkKryoRegistrator
                                </argument>
                                <argument>-Dsplice.spark.kryoserializer.buffer.max=512m</argument>
                                <argument>-Dsplice.spark.kryoserializer.buffer=4m</argument>
                                <argument>-Dsplice.spark.locality.wait=60s</argument>
                                <argument>-Dsplice.spark.logConf=true</argument>
                                <argument>-Dsplice.spark.master=yarn-client</argument>
                                <argument>
                                    -Dsplice.spark.scheduler.allocation.file=${project.basedir}/src/main/resources/fairscheduler.xml
                                </argument>
                                <argument>-Dsplice.spark.scheduler.mode=FAIR</argument>
                                <argument>-Dsplice.spark.serializer=com.splicemachine.serializer.SpliceKryoSerializer</argument>
                                <argument>-Dsplice.spark.shuffle.compress=false</argument>
                                <argument>-Dsplice.spark.driver.extraJavaOptions=
                                    -Dhbase.rootdir=${project.build.directory}/hbase
                                    -Dhdp.version=2.6.3
                                    -enableassertions
                                </argument>
                                <argument>-Dsplice.spark.yarn.am.extraJavaOptions=
                                    -Dhdp.version=2.6.3
                                </argument>
                                <argument>-Dsplice.spark.executor.extraJavaOptions=
                                    -Dhbase.rootdir=${project.build.directory}/hbase
                                    -Dhdp.version=2.6.3
                                    -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=4020
                                    -enableassertions
                                </argument>
				<argument>-Dsplice.spark.yarn.user=${user.name}</argument>
				<argument>-Dsplice.olapServer.classpath=${project.build.directory}/dependency/javax.servlet-api-3.1.0.jar:${project.build.directory}/classes</argument>
                                <argument>-Dsplice.olapServer.extraJavaOptions=
					-Djava.library.path=${project.build.directory}/../../assembly/${envClassifier}/native/${os.detected.classifier}:/usr/local/lib/
                                    -Dhbase.rootdir=${project.build.directory}/hbase
                                    -Dlog4j.configuration=${log4j.config.uri}
                                    -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=4025
                                    -enableassertions
                                    -Djava.net.preferIPv4Stack=true
                                </argument>
                                <argument>-Dsplice.spark.shuffle.file.buffer=128k</argument>
                                <argument>-Dsplice.spark.shuffle.memoryFraction=0.7</argument>
                                <argument>-Dsplice.spark.shuffle.service.enabled=true</argument>
                                <argument>-Dsplice.spark.storage.memoryFraction=0.1</argument>
                                <argument>-Dsplice.spark.yarn.am.waitTime=10s</argument>
                                <!-- CMS Garbage Collection -->
                                <argument>-Xmn128m</argument>
                                <argument>-XX:+UseConcMarkSweepGC</argument>
                                <argument>-XX:+UseParNewGC</argument>
                                <argument>-XX:NewSize=128m</argument>
                                <argument>-XX:MaxNewSize=128m</argument>
                                <argument>-XX:CMSInitiatingOccupancyFraction=70</argument>
                                <argument>-XX:+UseCMSInitiatingOccupancyOnly</argument>
                                <argument>-XX:MaxGCPauseMillis=100</argument>
                                <argument>-XX:+CMSClassUnloadingEnabled</argument>
                                <argument>-XX:MaxDirectMemorySize=1g</argument>
                                <argument>-enableassertions</argument>
                                <argument>-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=4000</argument>
                                <!-- Setting the updateSystemProcs option to true causes all of the system stored procedures to be re-created on server startup. -->
                                <argument>-Dderby.language.updateSystemProcs=false</argument>
                                <!-- Setting the logStatementText option to true enables logging of all statements. -->
                                <argument>-Dderby.language.logStatementText=false</argument>
                                <argument>-Dderby.infolog.append=true</argument>
                                <argument>com.splicemachine.test.SpliceTestPlatform</argument>
                                <argument>file://${project.build.directory}/hbase</argument>
                                <argument>60000</argument>
                                <argument>60010</argument>
                                <argument>60020</argument>
                                <argument>60030</argument>
                                <argument>1527</argument>
                                <argument>${failTasksRandomly}</argument>
                            </arguments>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>spliceClusterMember</id>
            <activation>
                <property>
                    <name>spliceClusterMember</name>
                </property>
            </activation>
            <properties>
                <memberNumber>1</memberNumber>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <classpathScope>test</classpathScope>
                            <executable>java</executable>
                            <arguments>
                                <argument>-classpath</argument>
                                <classpath/>
                                <argument>-Djava.awt.headless=true</argument>
                                <argument>-Dlog4j.configuration=${log4j.config.uri}</argument>
                                <argument>-Djava.net.preferIPv4Stack=true</argument>
				<argument>-Djava.library.path=${project.build.directory}/../../assembly/${envClassifier}/native/${os.detected.classifier}:/usr/local/lib/</argument>
                                <argument>-Xmx4g</argument>
                                <argument>-Xmn128m</argument>
                                <argument>-XX:+UseConcMarkSweepGC</argument>
                                <argument>-XX:+UseParNewGC</argument>
                                <argument>-XX:NewSize=128m</argument>
                                <argument>-XX:MaxNewSize=128m</argument>
                                <argument>-XX:CMSInitiatingOccupancyFraction=70</argument>
                                <argument>-XX:+UseCMSInitiatingOccupancyOnly</argument>
                                <argument>-XX:MaxGCPauseMillis=100</argument>
                                <argument>-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=4001</argument>
                                <argument>-XX:+CMSClassUnloadingEnabled</argument>
                                <argument>-XX:MaxDirectMemorySize=1g</argument>
                                <argument>com.splicemachine.test.SpliceTestClusterParticipant</argument>
                                <argument>${project.build.directory}/hbase</argument>
                                <argument>${memberNumber}</argument>
                            </arguments>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>ee</id>
            <activation>
                <property>
                    <name>ee</name>
                    <value>enterprise</value>
                </property>
            </activation>
            <properties>
                <ee_out>,ee</ee_out>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>build-helper-maven-plugin</artifactId>
                        <version>1.9.1</version>
                        <executions>
                            <execution>
                                <id>add-ee-source</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>add-source</goal>
                                </goals>
                                <configuration>
                                    <sources>
                                        <source>../../spliceengine-ee/splice_backup/src/main/java</source>
                                        <source>../../spliceengine-ee/splice_auth/src/main/java</source>
                                        <source>../../spliceengine-ee/splice_colperms/src/main/java</source>
                                        <source>../../spliceengine-ee/splice_encryption/src/main/java</source>
                                        <source>../../spliceengine-ee/splice_ee/src/main/java</source>
                                    </sources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>add-ee-resource</id>
                                <phase>generate-resources</phase>
                                <goals>
                                    <goal>add-resource</goal>
                                </goals>
                                <configuration>
                                    <resources>
                                        <resource>
                                            <directory>../../spliceengine-ee/splice_ee/src/main/resources</directory>
                                        </resource>
                                    </resources>
                                </configuration>
                            </execution>
                            <execution>
                                <id>add-ee-test-source</id>
                                <phase>generate-sources</phase>
                                <goals>
                                    <goal>add-test-source</goal>
                                </goals>
                                <configuration>
                                    <sources>
                                        <source>../../spliceengine-ee/splice_backup/src/test/java</source>
                                        <source>../../spliceengine-ee/enterprise_it/src/test/java</source>
                                    </sources>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>sparkHistory</id>
            <activation>
                <property>
                    <name>sparkHistory</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <classpathScope>test</classpathScope>
                            <executable>java</executable>
                            <arguments>
                                <!-- <argument>-verbose:gc</argument> -->
                                <argument>-classpath</argument>
                                <classpath/>
                                <argument>-Xdebug</argument>
                                <argument>-Dlog4j.configuration=${log4j.config.uri}</argument>
                                <argument>-Djava.net.preferIPv4Stack=true</argument>
                                <argument>-Djava.awt.headless=true</argument>
                                <argument>-Dzookeeper.sasl.client=false</argument>
                                <argument>-Dcom.sun.management.jmxremote.ssl=false</argument>
                                <argument>-Dcom.sun.management.jmxremote.authenticate=false</argument>
                                <argument>-Djava.library.path=${project.build.directory}/../../assembly/${envClassifier}/native/${os.detected.classifier}:/usr/local/lib/</argument>
				<argument>org.apache.spark.deploy.history.HistoryServer</argument>
				<argument>${project.build.directory}/SpliceTestYarnPlatform/</argument>
                            </arguments>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>jmeter</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.lazerycode.jmeter</groupId>
                        <artifactId>jmeter-maven-plugin</artifactId>
                        <version>1.10.1</version>
                        <executions>
                            <execution>
                                <id>jmeter-tests</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>jmeter</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <testResultsTimestamp>false</testResultsTimestamp>
                            <overrideRootLogLevel>DEBUG</overrideRootLogLevel>
                            <suppressJMeterOutput>false</suppressJMeterOutput>
                            <ignoreResultFailures>true</ignoreResultFailures>
                            <testFilesIncluded>
                                <!-- jMeterTestFile>tpch-micro-suite.jmx</jMeterTestFile -->
                                <jMeterTestFile>tpch1.jmx</jMeterTestFile>
                            </testFilesIncluded>
                            <propertiesUser>
                                <clusterRegionserver>localhost</clusterRegionserver>
                            </propertiesUser>
                            <jMeterProcessJVMSettings>
                                <xms>1024</xms>
                                <xmx>4096</xmx>
                                <!--
                                <arguments>
                                    <argument>-Xprof</argument>
                                    <argument>-Xfuture</argument>
                                </arguments>
                                -->
                            </jMeterProcessJVMSettings>
                        </configuration>
                        <dependencies>
                            <dependency>
                                <groupId>com.splicemachine</groupId>
                                <artifactId>db-client</artifactId>
                                <version>${project.version}</version>
                            </dependency>
                            <dependency>
                                <groupId>kg.apc</groupId>
                                <artifactId>jmeter-plugins</artifactId>
                                <version>1.0.0</version>
                                <exclusions>
                                    <exclusion>
                                        <groupId>kg.apc</groupId>
                                        <artifactId>perfmon</artifactId>
                                    </exclusion>
                                    <exclusion>
                                        <groupId>org.apache.jmeter</groupId>
                                        <artifactId>jorphan</artifactId>
                                    </exclusion>
                                    <exclusion>
                                        <groupId>org.apache.hbase</groupId>
                                        <artifactId>hbase</artifactId>
                                    </exclusion>
                                </exclusions>
                            </dependency>
                            <dependency>
                                <groupId>net.sourceforge.saxon</groupId>
                                <artifactId>saxon</artifactId>
                                <version>9.1.0.8</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
