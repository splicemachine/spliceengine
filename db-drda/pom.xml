<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Apache Derby is a subproject of the Apache DB project, and is licensed under
  ~ the Apache License, Version 2.0 (the "License"); you may not use these files
  ~ except in compliance with the License. You may obtain a copy of the License at:
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software distributed
  ~ under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
  ~ CONDITIONS OF ANY KIND, either express or implied. See the License for the
  ~ specific language governing permissions and limitations under the License.
  ~
  ~ Splice Machine, Inc. has modified this file.
  ~
  ~ All Splice Machine modifications are Copyright 2012 - 2016 Splice Machine, Inc.,
  ~ and are licensed to you under the License; you may not use this file except in
  ~ compliance with the License.
  ~
  ~ Unless required by applicable law or agreed to in writing, software distributed
  ~ under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
  ~ CONDITIONS OF ANY KIND, either express or implied. See the License for the
  ~ specific language governing permissions and limitations under the License.
  ~
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>spliceengine-parent</artifactId>
        <groupId>com.splicemachine</groupId>
        <version>2.5.0.1703-SNAPSHOT</version>
    </parent>
    <modelVersion>4.0.0</modelVersion>
    <artifactId>db-drda</artifactId>
    <dependencies>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>db-engine</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>db-tools-i18n</artifactId>
            <version>${project.version}</version>
        </dependency>
        <dependency>
            <groupId>org.xerial.snappy</groupId>
            <artifactId>snappy-java</artifactId>
            <version>1.1.2.4</version>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <version>1.4.0</version>
                <executions>
                    <!-- Generate ODBC-compliant metadata statements from JDBC metadata       -->
                    <!-- 1. Get a fresh copy of the metadata.properties file (from the source -->
                    <!--    dir, since that one hasn't been modified by the ODBC generation   -->
                    <!--    code), to be safe.                                                -->
                    <!-- 2. Run the ODBC metadata generator program, which reads the metadata -->
                    <!--    file from step 1 and creates an output file that has all of the   -->
                    <!--    queries from metadata.properties PLUS any ODBC versions of those  -->
                    <!--    queries that are required for ODBC compliance.                    -->
                    <execution>
                        <id>message-builder</id>
                        <phase>generate-resources</phase>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <configuration>
                            <includePluginDependencies>true</includePluginDependencies>
                            <mainClass>com.splicemachine.derbyBuild.ODBCMetadataGenerator</mainClass>
                            <arguments>
                                <argument>${basedir}/src/main/properties/metadata.properties</argument>
                                <argument>
                                    ${project.build.outputDirectory}/com/splicemachine/db/impl/jdbc/metadata.properties
                                </argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <!-- ================================================================================================
                    Message Vetter
                    ===================================================================================================== -->
                    <execution>
                        <id>message-vetter</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <configuration>
                            <mainClass>com.splicemachine.derbyBuild.MessageVetter</mainClass>
                            <includePluginDependencies>true</includePluginDependencies>
                            <arguments>
                                <argument>${project.build.outputDirectory}/com/splicemachine/db/loc/drda</argument>
                            </arguments>
                        </configuration>
                    </execution>
                    <!-- ================================================================================================
                    Message Bundle Test
                    ===================================================================================================== -->
                    <execution>
                        <id>message-bundle-test</id>
                        <phase>prepare-package</phase>
                        <goals>
                            <goal>java</goal>
                        </goals>
                        <configuration>
                            <mainClass>com.splicemachine.derbyBuild.messages.MessageBundleTest</mainClass>
                            <includePluginDependencies>true</includePluginDependencies>
                        </configuration>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>${project.groupId}</groupId>
                        <artifactId>db-build</artifactId>
                        <version>${project.version}</version>
                    </dependency>
                </dependencies>
            </plugin>
        </plugins>
    </build>
</project>
