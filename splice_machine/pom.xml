<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright 2012 - 2016 Splice Machine, Inc.
  ~
  ~ Licensed under the Apache License, Version 2.0 (the "License"); you may not use
  ~ this file except in compliance with the License. You may obtain a copy of the
  ~ License at
  ~
  ~ http://www.apache.org/licenses/LICENSE-2.0
  ~
  ~ Unless required by applicable law or agreed to in writing, software distributed
  ~ under the License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR
  ~ CONDITIONS OF ANY KIND, either express or implied. See the License for the
  ~ specific language governing permissions and limitations under the License.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <artifactId>splice_machine</artifactId>
    <description>Splice Access API</description>
    <parent>
        <artifactId>spliceengine-parent</artifactId>
        <groupId>com.splicemachine</groupId>
        <version>2.0.1.20-SNAPSHOT</version>
    </parent>
    <dependencies>
        <dependency>
            <groupId>com.splicemachine</groupId>
            <artifactId>pipeline_api</artifactId>
            <version>2.0.1.20-SNAPSHOT</version>
        </dependency>
        <dependency>
            <groupId>com.splicemachine</groupId>
            <artifactId>db-drda</artifactId>
        </dependency>
        <dependency>
            <groupId>com.splicemachine</groupId>
            <artifactId>db-engine</artifactId>
        </dependency>
        <dependency>
            <groupId>com.splicemachine</groupId>
            <artifactId>db-client</artifactId>
        </dependency>
        <!-- for Ij access-->
        <dependency>
            <groupId>com.splicemachine</groupId>
            <artifactId>db-tools-ij</artifactId>
        </dependency>
        <dependency>
            <groupId>net.sf.supercsv</groupId>
            <artifactId>super-csv</artifactId>
        </dependency>
        <dependency>
            <groupId>org.scala-lang</groupId>
            <artifactId>scala-library</artifactId>
            <version>2.10.4</version>
        </dependency>
        <dependency>
            <groupId>commons-codec</groupId>
            <artifactId>commons-codec</artifactId>
            <version>1.10</version>
        </dependency>
        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>2.5</version>
        </dependency>
        <dependency>
            <groupId>de.javakaffee</groupId>
            <artifactId>kryo-serializers</artifactId>
        </dependency>
        <dependency>
            <groupId>com.yammer.metrics</groupId>
            <artifactId>metrics-core</artifactId>
        </dependency>
        <!-- Test dependencies-->
        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>commons-cli</groupId>
            <artifactId>commons-cli</artifactId>
        </dependency>
        <dependency>
            <groupId>commons-dbutils</groupId>
            <artifactId>commons-dbutils</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>splice_si_api</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>pipeline_api</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.splicetest.sqlj</groupId>
            <artifactId>sqlj-it-procs</artifactId>
            <version>2.0.1.20-SNAPSHOT</version>
            <type>jar</type>
            <scope>test</scope>
        </dependency>
    </dependencies>
    <build>
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <executions>
                    <execution>
                        <goals>
                            <goal>test-jar</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>exec-maven-plugin</artifactId>
                <executions>
                    <execution>
                        <id>ij</id>
                        <goals>
                            <goal>java</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <systemProperties>
                        <systemProperty>
                            <key>ij.connection.splice</key>
                            <value>jdbc:splice://localhost:${ij.connection.port}/splicedb;user=splice;password=admin
                            </value>
                        </systemProperty>
                    </systemProperties>
                    <mainClass>com.splicemachine.db.tools.ij</mainClass>
                    <includeProjectDependencies>true</includeProjectDependencies>
                    <executable>maven</executable>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.19.1</version>
                <!--
                    -sf- We skip the tests in this module because all of our tests require an architecture
                    to run, and those architectures are contained further down the line. The poms for
                    those architectures should include a mechanism for running these tests there (using the
                    dependenciesToScan feature of the surefire plugin), rather than expecting tests
                    to run here.

                    To add these tests to your architecture, add the following to the pom for your storage module:
        <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-surefire-plugin</artifactId>
            <version>${Your Surefire Version}</version>
            <configuration>
                <dependenciesToScan>
                    <dependency>com.splicemachine:splice_si_api</dependency>
                </dependenciesToScan>
                <excludesGroup>com.splicemachine.si.testenv.ArchitectureIndependent</excludesGroup>
            </configuration>
        </plugin>

                -->
                <configuration>
                    <excludedGroups>com.splicemachine.si.testenv.ArchitectureSpecific</excludedGroups>
                </configuration>
            </plugin>
        </plugins>
    </build>
</project>
