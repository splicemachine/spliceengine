/*
 * Copyright (c) 2012 - 2020 Splice Machine, Inc.
 *
 * This file is part of Splice Machine.
 * Splice Machine is free software: you can redistribute it and/or modify it under the terms of the
 * GNU Affero General Public License as published by the Free Software Foundation, either
 * version 3, or (at your option) any later version.
 * Splice Machine is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Affero General Public License for more details.
 * You should have received a copy of the GNU Affero General Public License along with Splice Machine.
 * If not, see <http://www.gnu.org/licenses/>.
 */

package com.splicemachine.pipeline;

import com.splicemachine.access.api.CallTimeoutException;
import com.splicemachine.access.api.NotServingPartitionException;
import com.splicemachine.access.api.OperationCancelledException;
import com.splicemachine.access.api.WrongPartitionException;
import com.splicemachine.db.iapi.error.StandardException;
import com.splicemachine.pipeline.api.PipelineTooBusy;
import com.splicemachine.pipeline.client.WriteFailedException;
import com.splicemachine.pipeline.constraint.ConstraintContext;
import com.splicemachine.pipeline.constraint.ForeignKeyViolation;
import com.splicemachine.pipeline.constraint.UniqueConstraintViolation;
import com.splicemachine.si.api.data.ReadOnlyModificationException;
import com.splicemachine.si.api.server.FailedServerException;
import com.splicemachine.si.api.txn.WriteConflict;
import com.splicemachine.si.api.txn.lifecycle.CannotCommitException;
import com.splicemachine.si.impl.SavePointNotFoundException;
import com.splicemachine.timestamp.api.TimestampIOException;

import java.io.FileNotFoundException;
import java.io.IOException;
import java.net.ConnectException;
import java.net.SocketException;
import java.net.SocketTimeoutException;
import java.nio.file.NoSuchFileException;
import java.util.concurrent.CancellationException;
import java.util.regex.Matcher;
import java.util.regex.Pattern;

/**
 * @author Scott Fines
 *         Created on: 8/16/13
 */
public enum ErrorState{
    SERVICE_STARTUP_EXCEPTION("XBM01.D"),
    SERVICE_MISSING_IMPLEMENTATION("XBM02.D"),
    MISSING_PRODUCT_VERSION("XBM05.D"),
    SERVICE_WRONG_BOOT_PASSWORD("XBM06.D"),
    SERVICE_PROPERTIES_MISSING("XBM0A.D"),
    SERVICE_PROPERTIES_EDIT_FAILED("XBM0B.D"),
    MISSING_FILE_PRIVILEGE("XBM0C.D"),
    SERVICE_BOOT_PASSWORD_TOO_SHORT("XBM07.D"),
    MISSING_ENCRYPTION_PROVIDER("XBM0G.D"),
    SERVICE_DIRECTORY_CREATE_ERROR("XBM0H.D"),
    SERVICE_DIRECTORY_REMOVE_ERROR("XBM0I.D"),
    SERVICE_DIRECTORY_EXISTS_ERROR("XBM0J.D"),
    PROTOCOL_UNKNOWN("XBM0K.D"),

    // these were originally ModuleStartupExceptions
    AUTHENTICATION_NOT_IMPLEMENTED("XBM0L.D"),
    AUTHENTICATION_SCHEME_ERROR("XBM0M.D"),
    JDBC_DRIVER_REGISTER("XBM0N.D"),
    READ_ONLY_SERVICE("XBM0P.D"),
    UNABLE_TO_RENAME_FILE("XBM0S.D"),
    AMBIGIOUS_PROTOCOL("XBM0T.D"),

    REGISTERED_CLASS_NONE("XBM0U.S"),
    REGISTERED_CLASS_LINAKGE_ERROR("XBM0V.S"),
    REGISTERED_CLASS_INSTANCE_ERROR("XBM0W.S"),
    INVALID_LOCALE_DESCRIPTION("XBM0X.D"),
    INVALID_COLLATION("XBM03.D"),
    COLLATOR_NOT_FOUND_FOR_LOCALE("XBM04.D"),
    SERVICE_DIRECTORY_NOT_IN_BACKUP("XBM0Y.D"),
    UNABLE_TO_COPY_FILE_FROM_BACKUP("XBM0Z.D"),
    PROPERTY_FILE_NOT_FOUND_IN_BACKUP("XBM0Q.D"),
    UNABLE_TO_DELETE_FILE("XBM0R.D"),
    INSTANTIATE_STORAGE_FACTORY_ERROR("XBM08.D"),

    /*
    ** Upgrade
    */
    UPGRADE_UNSUPPORTED("XCW00.D"),
    // Note: UPGRADE_SPSRECOMPILEFAILED is now in the warnings section.

    /*
    ** ContextService
    */
    CONN_INTERRUPT("08000"),


    /*
    ** ClassManager
    */
    GENERATED_CLASS_LINKAGE_ERROR("XBCM1.S"),
    GENERATED_CLASS_INSTANCE_ERROR("XBCM2.S"),
    GENERATED_CLASS_NO_SUCH_METHOD("XBCM3.S"),
    GENERATED_CLASS_LIMIT_EXCEEDED("XBCM4.S"),

    /*
    ** Cryptography
    */
    CRYPTO_EXCEPTION("XBCX0.S"),
    ILLEGAL_CIPHER_MODE("XBCX1.S"),
    ILLEGAL_BP_LENGTH("XBCX2.S"),
    NULL_BOOT_PASSWORD("XBCX5.S"),
    NON_STRING_BP("XBCX6.S"),
    WRONG_PASSWORD_CHANGE_FORMAT("XBCX7.S"),
    DATABASE_NOT_ENCRYPTED("XBCX8.S"),
    DATABASE_READ_ONLY("XBCX9.S"),
    WRONG_BOOT_PASSWORD("XBCXA.S"),
    ENCRYPTION_BAD_PADDING("XBCXB.S"),
    ENCRYPTION_NOSUCH_ALGORITHM("XBCXC.S"),
    ENCRYPTION_NOCHANGE_ALGORITHM("XBCXD.S"),
    ENCRYPTION_NOCHANGE_PROVIDER("XBCXE.S"),
    ENCRYPTION_NO_PROVIDER_CLASS("XBCXF.S"),
    ENCRYPTION_BAD_PROVIDER("XBCXG.S"),
    ENCRYPTION_BAD_ALG_FORMAT("XBCXH.S"),
    ENCRYPTION_BAD_FEEDBACKMODE("XBCXI.S"),
    ENCRYPTION_BAD_JCE("XBCXJ.S"),
    ENCRYPTION_BAD_EXTERNAL_KEY("XBCXK.S"),
    ENCRYPTION_UNABLE_KEY_VERIFICATION("XBCXL.S"),
    ENCRYPTION_INVALID_EXKEY_LENGTH("XBCXM.S"),
    ENCRYPTION_ILLEGAL_EXKEY_CHARS("XBCXN.S"),
    ENCRYPTION_PREPARED_XACT_EXIST("XBCXO.S"),
    REENCRYPTION_PREPARED_XACT_EXIST("XBCXP.S"),
    CANNOT_ENCRYPT_READONLY_DATABASE("XBCXQ.S"),
    CANNOT_REENCRYPT_READONLY_DATABASE("XBCXR.S"),
    CANNOT_ENCRYPT_LOG_ARCHIVED_DATABASE("XBCXS.S"),
    CANNOT_REENCRYPT_LOG_ARCHIVED_DATABASE("XBCXT.S"),
    DATABASE_ENCRYPTION_FAILED("XBCXU.S"),
    DATABASE_REENCRYPTION_FAILED("XBCXV.S"),
    DIGEST_NO_SUCH_ALGORITHM("XBCXW.S"),

    /*
    ** Cache Service
    */
    OBJECT_EXISTS_IN_CACHE("XBCA0.S"),

    /*
    ** Properties
    */
    PROPERTY_INVALID_VALUE("XCY00.S"),
    PROPERTY_UNSUPPORTED_CHANGE("XCY02.S"),
    PROPERTY_MISSING("XCY03.S"),
    PROPERTY_SYNTAX_INVALID("XCY04.S"),
    PROPERTY_CANT_UNDO_NATIVE("XCY05.S.2"),
    PROPERTY_DBO_LACKS_CREDENTIALS("XCY05.S.3"),

    /*
    ** LockManager
    */
    DEADLOCK("40001"),
    LOCK_TIMEOUT("40XL1"),
    LOCK_TIMEOUT_LOG("40XL1.T.1"),

    /*
    ** Store - access.protocol.Interface statement exceptions
    */
    STORE_CONGLOMERATE_DOES_NOT_EXIST("XSAI2.S"),
    STORE_FEATURE_NOT_IMPLEMENTED("XSAI3.S"),

    /*
    ** Store - access.protocol.Interface RunTimeStatistics property names
    ** and values.
    */
    STORE_RTS_SCAN_TYPE("XSAJ0.U"),
    STORE_RTS_NUM_PAGES_VISITED("XSAJ1.U"),
    STORE_RTS_NUM_ROWS_VISITED("XSAJ2.U"),
    STORE_RTS_NUM_DELETED_ROWS_VISITED("XSAJ3.U"),
    STORE_RTS_NUM_ROWS_QUALIFIED("XSAJ4.U"),
    STORE_RTS_NUM_COLUMNS_FETCHED("XSAJ5.U"),
    STORE_RTS_COLUMNS_FETCHED_BIT_SET("XSAJ6.U"),
    STORE_RTS_TREE_HEIGHT("XSAJ7.U"),
    STORE_RTS_SORT_TYPE("XSAJ8.U"),
    STORE_RTS_NUM_ROWS_INPUT("XSAJA.U"),
    STORE_RTS_NUM_ROWS_OUTPUT("XSAJB.U"),
    STORE_RTS_NUM_MERGE_RUNS("XSAJC.U"),
    STORE_RTS_MERGE_RUNS_SIZE("XSAJD.U"),
    STORE_RTS_ALL("XSAJE.U"),
    STORE_RTS_BTREE("XSAJF.U"),
    STORE_RTS_HEAP("XSAJG.U"),
    STORE_RTS_SORT("XSAJH.U"),
    STORE_RTS_EXTERNAL("XSAJI.U"),
    STORE_RTS_INTERNAL("XSAJJ.U"),

    /*
    ** Store - access.protocol.XA statement exceptions
    */
    STORE_XA_PROTOCOL_VIOLATION("XSAX0.S"),
    // STORE_XA_PROTOCOL_VIOLATION_SQLSTATE has no associated message it is
    // just a constant used by the code so that an exception can be caught
    // and programatically determined to be a STORE_XA_PROTOCOL_VIOLATION.
    STORE_XA_PROTOCOL_VIOLATION_SQLSTATE("XSAX0"),
    STORE_XA_XAER_DUPID("XSAX1.S"),
    // STORE_XA_XAER_DUPID_SQLSTATE has no associated message it is
    // just a constant used by the code so that an exception can be caught
    // and programatically determined to be a STORE_XA_XAER_DUPID.
    STORE_XA_XAER_DUPID_SQLSTATE("XSAX1"),

    /*
    ** Store - Conglomerate
    */
    CONGLOMERATE_TEMPLATE_CREATE_ERROR("XSCG0.S"),

    /*
    ** Store - AccessManager
    */
    AM_NO_FACTORY_FOR_IMPLEMENTATION("XSAM0.S"),
    AM_NO_SUCH_CONGLOMERATE_DROP("XSAM2.S"),
    AM_NO_SUCH_CONGLOMERATE_TYPE("XSAM3.S"),
    AM_NO_SUCH_SORT("XSAM4.S"),
    AM_SCAN_NOT_POSITIONED("XSAM5.S"),
    AM_RECORD_NOT_FOUND("XSAM6.S"),


    /*
    ** Store - Heap
    */
    HEAP_CANT_CREATE_CONTAINER("XSCH0.S"),
    HEAP_CONTAINER_NOT_FOUND("XSCH1.S"),
    HEAP_COULD_NOT_CREATE_CONGLOMERATE("XSCH4.S"),
    HEAP_TEMPLATE_MISMATCH("XSCH5.S"),
    HEAP_IS_CLOSED("XSCH6.S"),
    HEAP_SCAN_NOT_POSITIONED("XSCH7.S"),
    HEAP_UNIMPLEMENTED_FEATURE("XSCH8.S"),

    /*
    ** Store - BTree
    */
    BTREE_CANT_CREATE_CONTAINER("XSCB0.S"),
    BTREE_CONTAINER_NOT_FOUND("XSCB1.S"),
    BTREE_PROPERTY_NOT_FOUND("XSCB2.S"),
    BTREE_UNIMPLEMENTED_FEATURE("XSCB3.S"),
    BTREE_SCAN_NOT_POSITIONED("XSCB4.S"),
    BTREE_ROW_NOT_FOUND_DURING_UNDO("XSCB5.S"),
    BTREE_NO_SPACE_FOR_KEY("XSCB6.S"),
    BTREE_SCAN_INTERNAL_ERROR("XSCB7.S"),
    BTREE_IS_CLOSED("XSCB8.S"),
    BTREE_ABORT_THROUGH_TRACE("XSCB9.S"),

    /*
    ** Store - Sort
    */
    SORT_IMPROPER_SCAN_METHOD("XSAS0.S"),
    SORT_SCAN_NOT_POSITIONED("XSAS1.S"),


    SORT_TYPE_MISMATCH("XSAS3.S"),
    SORT_COULD_NOT_INIT("XSAS6.S"),

	/*
    ** RawStore
	*/

    /*
    ** RawStore - protocol.Interface statement exceptions
    */
    RAWSTORE_NESTED_FREEZE("XSRS0.S"),
    RAWSTORE_CANNOT_BACKUP_TO_NONDIRECTORY("XSRS1.S"),
    RAWSTORE_ERROR_RENAMING_FILE("XSRS4.S"),
    RAWSTORE_ERROR_COPYING_FILE("XSRS5.S"),
    RAWSTORE_CANNOT_CREATE_BACKUP_DIRECTORY("XSRS6.S"),
    RAWSTORE_UNEXPECTED_EXCEPTION("XSRS7.S"),
    RAWSTORE_CANNOT_CHANGE_LOGDEVICE("XSRS8.S"),
    RAWSTORE_RECORD_VANISHED("XSRS9.S"),
    BACKUP_BLOCKING_OPERATIONS_IN_PROGRESS("XSRSA.S"),
    BACKUP_OPERATIONS_NOT_ALLOWED("XSRSB.S"),
    RAWSTORE_CANNOT_BACKUP_INTO_DATABASE_DIRECTORY("XSRSC.S"),

    /*
    ** RawStore - Log.Generic statement exceptions
    */
    LOG_WRITE_LOG_RECORD("XSLB1.S"),
    LOG_BUFFER_FULL("XSLB2.S"),
    LOG_TRUNC_LWM_NULL("XSLB4.S"),
    LOG_TRUNC_LWM_ILLEGAL("XSLB5.S"),
    LOG_ZERO_LENGTH_LOG_RECORD("XSLB6.S"),
    LOG_RESET_BEYOND_SCAN_LIMIT("XSLB8.S"),
    LOG_FACTORY_STOPPED("XSLB9.S"),

    /*
    ** RawStore - Log.Generic database exceptions
    */
    LOG_CANNOT_FLUSH("XSLA0.D"),
    LOG_DO_ME_FAIL("XSLA1.D"),
    LOG_IO_ERROR("XSLA2.D"),
    LOG_CORRUPTED("XSLA3.D"),
    LOG_FULL("XSLA4.D"),
    LOG_READ_LOG_FOR_UNDO("XSLA5.D"),
    LOG_RECOVERY_FAILED("XSLA6.D"),
    LOG_REDO_FAILED("XSLA7.D"),
    LOG_UNDO_FAILED("XSLA8.D"),
    LOG_STORE_CORRUPT("XSLAA.D"),
    LOG_FILE_NOT_FOUND("XSLAB.D"),
    LOG_INCOMPATIBLE_FORMAT("XSLAC.D"),
    LOG_RECORD_CORRUPTED("XSLAD.D"),
    LOG_CONTROL_FILE("XSLAE.D"),
    LOG_READ_ONLY_DB_NEEDS_UNDO("XSLAF.D"),
    LOG_READ_ONLY_DB_UPDATE("XSLAH.D"),
    LOG_CANNOT_LOG_CHECKPOINT("XSLAI.D"),
    LOG_NULL("XSLAJ.D"),
    LOG_EXCEED_MAX_LOG_FILE_NUMBER("XSLAK.D"),
    LOG_EXCEED_MAX_LOG_FILE_SIZE("XSLAL.D"),
    LOG_CANNOT_VERIFY_LOG_FORMAT("XSLAM.D"),
    LOG_INCOMPATIBLE_VERSION("XSLAN.D"),
    LOG_UNEXPECTED_RECOVERY_PROBLEM("XSLAO.D"),
    LOG_CANNOT_UPGRADE_BETA("XSLAP.D"),
    LOG_SEGMENT_NOT_EXIST("XSLAQ.D"),
    UNABLE_TO_COPY_LOG_FILE("XSLAR.D"),
    LOG_DIRECTORY_NOT_FOUND_IN_BACKUP("XSLAS.D"),
    LOG_SEGMENT_EXIST("XSLAT.D"),


    /*
    ** RawStore - Transactions.Basic statement exceptions
    */
    XACT_MAX_SAVEPOINT_LEVEL_REACHED("3B002.S"),
    //Bug 4466 - changed sqlstate for following two to match DB2 sqlstates.
    XACT_SAVEPOINT_EXISTS("3B501.S"),
    XACT_SAVEPOINT_NOT_FOUND("3B001.S") {
        @Override
        public StandardException newException(Throwable rootCause) {
            if (rootCause instanceof SavePointNotFoundException)
                return super.newException(((SavePointNotFoundException)rootCause).getName());
            return super.newException(rootCause);
        }

        @Override
        public boolean accepts(Throwable t) {
            return t instanceof SavePointNotFoundException;
        }
    },
    //Bug 4468 - release/rollback of savepoint failed because it doesn't exist
    XACT_SAVEPOINT_RELEASE_ROLLBACK_FAIL("3B502.S"),
    XACT_TRANSACTION_ACTIVE("XSTA2.S"),

    /*
    ** RawStore - Transactions.Basic transaction exceptions
    */
    TRANSACTION_PREFIX("40"),

    XACT_PROTOCOL_VIOLATION("40XT0"),
    XACT_COMMIT_EXCEPTION("40XT1"),
    XACT_ROLLBACK_EXCEPTION("40XT2"),
    XACT_TRANSACTION_NOT_IDLE("40XT4"),
    XACT_INTERNAL_TRANSACTION_EXCEPTION("40XT5"),
    XACT_CANNOT_ACTIVATE_TRANSACTION("40XT6"),
    XACT_NOT_SUPPORTED_IN_INTERNAL_XACT("40XT7"),

    /*
    ** RawStore - Transactions.Basic system exceptions
    */
    XACT_ABORT_EXCEPTION("XSTB0.M"),
    XACT_CANNOT_LOG_CHANGE("XSTB2.M"),
    XACT_CANNOT_ABORT_NULL_LOGGER("XSTB3.M"),
    XACT_CREATE_NO_LOG("XSTB5.M"),
    XACT_TRANSACTION_TABLE_IN_USE("XSTB6.M"),


    /*
    ** RawStore - Data.Generic statement exceptions
    */
    DATA_SLOT_NOT_ON_PAGE("XSDA1.S"),
    DATA_UPDATE_DELETED_RECORD("XSDA2.S"),
    DATA_NO_SPACE_FOR_RECORD("XSDA3.S"),
    DATA_UNEXPECTED_EXCEPTION("XSDA4.S"),
    DATA_UNDELETE_RECORD("XSDA5.S"),
    DATA_NULL_STORABLE_COLUMN("XSDA6.S"),
    DATA_STORABLE_READ_MISMATCH("XSDA7.S"),
    DATA_STORABLE_READ_EXCEPTION("XSDA8.S"),
    DATA_STORABLE_READ_MISSING_CLASS("XSDA9.S"),
    DATA_TIME_STAMP_ILLEGAL("XSDAA.S"),
    DATA_TIME_STAMP_NULL("XSDAB.S"),
    DATA_DIFFERENT_CONTAINER("XSDAC.S"),
    DATA_NO_ROW_COPIED("XSDAD.S"),
    DATA_CANNOT_MAKE_RECORD_HANDLE("XSDAE.S"),
    DATA_INVALID_RECORD_HANDLE("XSDAF.S"),
    DATA_ALLOC_NTT_CANT_OPEN("XSDAG.S"),
    DATA_CANNOT_GET_DEALLOC_LOCK("XSDAI.S"),
    DATA_STORABLE_WRITE_EXCEPTION("XSDAJ.S"),
    DATA_WRONG_PAGE_FOR_HANDLE("XSDAK.S"),
    DATA_UNEXPECTED_OVERFLOW_PAGE("XSDAL.S"),
    DATA_SQLDATA_READ_INSTANTIATION_EXCEPTION("XSDAM.S"),
    DATA_SQLDATA_READ_ILLEGAL_ACCESS_EXCEPTION("XSDAN.S"),
    DATA_DOUBLE_LATCH_INTERNAL_ERROR("XSDAO.S"),

    /*
    ** RawStore - Data.Generic transaction exceptions
    */
    DATA_CORRUPT_PAGE("XSDB0.D"),
    DATA_UNKNOWN_PAGE_FORMAT("XSDB1.D"),
    DATA_UNKNOWN_CONTAINER_FORMAT("XSDB2.D"),
    DATA_CHANGING_CONTAINER_INFO("XSDB3.D"),
    DATA_MISSING_LOG("XSDB4.D"),
    DATA_MISSING_PAGE("XSDB5.D"),
    DATA_MULTIPLE_JBMS_ON_DB("XSDB6.D"),
    DATA_MULTIPLE_JBMS_WARNING("XSDB7.D"),
    DATA_MULTIPLE_JBMS_FORCE_LOCK("XSDB8.D"),
    DATA_CORRUPT_STREAM_CONTAINER("XSDB9.D"),
    DATA_OBJECT_ALLOCATION_FAILED("XSDBA.D"),
    DATA_UNKNOWN_PAGE_FORMAT_2("XSDBB.D"),
    DATA_BAD_CONTAINERINFO_WRITE("XSDBC.D"),

    /*
    ** RawStore - Data.Filesystem statement exceptions
    */
    FILE_EXISTS("XSDF0.S"),
    FILE_CREATE("XSDF1.S"),
    FILE_CREATE_NO_CLEANUP("XSDF2.S"),
    FILE_CANNOT_CREATE_SEGMENT("XSDF3.S"),
    FILE_CANNOT_REMOVE_FILE("XSDF4.S"),
    FILE_NO_ALLOC_PAGE("XSDF6.S"),
    FILE_NEW_PAGE_NOT_LATCHED("XSDF7.S"),
    FILE_REUSE_PAGE_NOT_FOUND("XSDF8.S"),
    FILE_READ_ONLY("XSDFB.S"),
    FILE_IO_GARBLED("XSDFD.S"),
    FILE_UNEXPECTED_EXCEPTION("XSDFF.S"),
    BACKUP_FILE_IO_ERROR("XSDFH.S"),
    FILE_NEW_PAGE_DURING_RECOVERY("XSDFI.S"),

	/*
	** RawStore - Data.FSLDemo transaction exceptions
	*/

    /*
    ** RawStore - Data.Filesystem database exceptions
    */
    FILE_READ_PAGE_EXCEPTION("XSDG0.D"),
    FILE_WRITE_PAGE_EXCEPTION("XSDG1.D"),
    FILE_BAD_CHECKSUM("XSDG2.D"),
    FILE_CONTAINER_EXCEPTION("XSDG3.D"),
    FILE_DATABASE_NOT_IN_CREATE("XSDG5.D"),
    DATA_DIRECTORY_NOT_FOUND_IN_BACKUP("XSDG6.D"),
    UNABLE_TO_REMOVE_DATA_DIRECTORY("XSDG7.D"),
    UNABLE_TO_COPY_DATA_DIRECTORY("XSDG8.D"),
    FILE_IO_INTERRUPTED("XSDG9.D"),


    /*
    ** InternalUtil - Id Parsing
    ** Note that the code catches ID parsing errors.
    **(Range XCXA0-XCXAZ)
    */
    ID_PARSE_ERROR("XCXA0.S"),

    /*
    ** InternalUtil - Database Class Path Parsing
    ** Note that the code catches database class path parsing errors.
    **(Range XCXB0-XCXBZ)
    */
    DB_CLASS_PATH_PARSE_ERROR("XCXB0.S"),

    /*
    ** InternalUtil - Id List Parsing
    ** Note that the code catches id list parsing errors.
    **(Range XCXC0-XCXCZ)
    */
    ID_LIST_PARSE_ERROR("XCXC0.S"),

	/*
	** InternalUtil - IO Errors
	**(Range XCXD0-XCXDZ)
	*/

    /*
    ** InternalUtil - LocaleFinder interface
    */
    NO_LOCALE("XCXE0.S"),

    DATA_CONTAINER_CLOSED("40XD0"),
    DATA_CONTAINER_READ_ONLY("40XD1"),
    DATA_CONTAINER_VANISHED("40XD2"),

    /*
    ** Connectivity - Connection Exceptions: 08XXX
    */
    CONNECTIVITY_PREFIX("08"),


    /*
	** Language
	*/

    /*
    ** Language Statement Exception
    */
    LSE_COMPILATION_PREFIX("42"),

	/*
	** Language
	**
	** The entries in this file are sorted into groups.  Add your entry
	** to the appropriate group. Language errors are divided into 3 groups:
	** A group for standard SQLExceptions.
	**
	** 2200J-00R - For SQL/XML errors(based on SQL/XML[2006]).
	** 4250x - access rule violations
	** 428?? - adding some DB2 compatible errors
	** 42X00-42Zxx for compilation errors
	** 46000  for SQLJ errors(for now, leave this range empty)
	** 38000  SQL3 ranges
	** 39001  SQL3
	** X0X00-X0Xxx for implementation-defined execution errors.
	**
	** NOTE: If an error can occur during both compilation and execution, then
	** you need 2 different errors.
	**
	** In addition to the above groups, this file also contains SQLStates
	** for language transaction severity errors. These are in the range
	**
	**	40XC0 - 40XCZ
	**
	** implementation-defined range reserved for class 23 is L01-LZZ
	**
	**
	** Errors that have standard SQLStates
	**
	** Implementation-defined subclasses must begin with a digit from 5 through 9,
	** or a letter from I through Z(capitals only).
	**
 	*/

	/*
	**
	** SQL-J ERRORS -- see jamie for further info
	**
	** DDL
	**	46001 - invalid URL
	**	46002 - invalid JAR name
	**	46003 - invalid class deletion
	**	46004 - invalid JAR name
	** 	46005 - invalid replacement
	** 	46006 - invalid grantee
	** 	46007 - invalid signature
	** 	46008 - invalid method specification
	** 	46009 - invalid REVOKE
	**
	** Execution
	** 	46102 - invalid jar name in path
	** 	46103 - unresolved class name
	** 	0100E - too many result sets
	**	39001 - invalid SQLSTATE
	**	39004 - invalid null value
	**	38000 - uncaught java exception
	**	38mmm - user defined error numbers
	** to be used in the future
	** InvalidNullValue.sqlstate(39004
	*/

    // WARNINGS(start with 01)
    LANG_CONSTRAINT_DROPPED("01500"),
    LANG_VIEW_DROPPED("01501"),
    LANG_TRIGGER_DROPPED("01502"),
    LANG_COL_NOT_NULL("01503"),
    LANG_INDEX_DUPLICATE("01504"),
    LANG_VALUE_TRUNCATED("01505"),
    LANG_SYNONYM_UNDEFINED("01522"),
    LANG_NULL_ELIMINATED_IN_SET_FUNCTION("01003"),
    LANG_PRIVILEGE_NOT_REVOKED("01006"),
    LANG_ROLE_NOT_REVOKED("01007"),
    LANG_WITH_ADMIN_OPTION_NOT_REVOKED("01008"),
    LANG_GEN_COL_DROPPED("01009"),
    IMPORT_GZIP_TO_LARGE("01010"),

    LANG_NO_ROW_FOUND("02000"),

    LANG_TOO_MANY_DYNAMIC_RESULTS_RETURNED("0100E"),

    // State used by java.sql.DataTruncation for truncation in read operations.
    DATA_TRUNCATION_READ("01004"),

    //File size very large and will take some time to import
    DATA_FILESIZE_HUGE("01007"),

    // Invalid role specification: standard says class 0P, no subclass.
    ROLE_INVALID_SPECIFICATION("0P000"),
    ROLE_INVALID_SPECIFICATION_NOT_GRANTED("0P000.S.1"),

    // TRANSACTION severity language errors. These are in the range:
    // 40XC0 - 40XCZ
    LANG_DEAD_STATEMENT("40XC0"),

    /*
    ** SQL Data exceptions
    */
    SQL_DATA_PREFIX("22"),

    LANG_MISSING_PARMS("07000"),
    LANG_SCALAR_SUBQUERY_CARDINALITY_VIOLATION("21000"),
    LANG_STRING_TRUNCATION("22001"),
    LANG_OPERATION_NOT_SUPPORTED_IN_READ_ONLY_MODE("51045") {
        @Override
        public boolean accepts(Throwable t) {
            return super.accepts(t) || t instanceof ReadOnlyModificationException;
        }
    },
    LANG_CONCAT_STRING_OVERFLOW("54006"),
    /*
     * Throw when an attempted insert it outside the range for the given datatype
     * (e.g. Integer.MAX_VALUE +1 into an integer field
     */
    LANG_OUTSIDE_RANGE_FOR_DATATYPE("22003"),
    YEAR_EXCEEDS_MAXIMUM("22003.S.1"),
    DECIMAL_TOO_MANY_DIGITS("22003.S.2"),
    NUMERIC_OVERFLOW("22003.S.3"),
    CLIENT_LENGTH_OUTSIDE_RANGE_FOR_DATATYPE("22003.S.4"),

    LANG_DATA_TYPE_GET_MISMATCH("22005"), // same 22005 error
    UNSUPPORTED_ENCODING("22005.S.1"),
    CHARACTER_CONVERTER_NOT_AVAILABLE("22005.S.2"),
    CANT_CONVERT_UNICODE_TO_EBCDIC("22005.S.3"),
    NET_UNRECOGNIZED_JDBC_TYPE("22005.S.4"),
    NET_INVALID_JDBC_TYPE_FOR_PARAM("22005.S.5"),
    UNRECOGNIZED_JAVA_SQL_TYPE("22005.S.6"),
    CANT_CONVERT_UNICODE_TO_UTF8("22005.S.7"),

    LANG_DATE_RANGE_EXCEPTION("22007.S.180"),
    LANG_DATE_SYNTAX_EXCEPTION("22007.S.181"),
    LANG_INVALID_FUNCTION_ARGUMENT("22008.S"),
    LANG_INVALID_VALUE_RANGE("22008.S.1"),
    LANG_SEQUENCE_GENERATOR_EXHAUSTED("2200H.S"),
    LANG_SUBSTR_START_OR_LEN_OUT_OF_RANGE("22011"),
    LANG_SUBSTR_START_ADDING_LEN_OUT_OF_RANGE("22011.S.1"),
    LANG_DIVIDE_BY_ZERO("22012"),
    LANG_SQRT_OF_NEG_NUMBER("22013"),
    LANG_INVALID_PARAMETER_FOR_SEARCH_POSITION("22014"),
    LANG_INVALID_TYPE_FOR_LOCATE_FUNCTION("22015"),
    LANG_FORMAT_EXCEPTION("22018"){
        @Override
        public boolean accepts(Throwable t){
            return super.accepts(t);
//            return t instanceof Exceptions.LangFormatException;
        }
    },
    LANG_INVALID_ESCAPE_CHARACTER("22019"),
    LANG_INVALID_TRIM_CHARACTER("22020"),
    LANG_INVALID_CHARACTER_ENCODING("22021"),
    LANG_INVALID_ESCAPE_SEQUENCE("22025"),
    LANG_INVALID_TRIM_SET("22027"),
    LANG_STRING_TOO_LONG("22028"),
    LANG_INVALID_TIME_SPAN_OPERATION("2202F"),
    LANG_ESCAPE_IS_NULL("22501"),
    LANG_INVALID_ROW_COUNT_FIRST("2201W"),
    LANG_INVALID_ROW_COUNT_OFFSET("2201X"),
    LANG_ROW_COUNT_OFFSET_FIRST_IS_NULL("2201Z"),

    /*
    ** Integrity violations.
    */
    INTEGRITY_VIOLATION_PREFIX("23"),

    /*Attempting to insert a null value into a column with a non-null constraint */
    LANG_NULL_INTO_NON_NULL("23502"),

    LANG_DUPLICATE_KEY_CONSTRAINT("23505"){
        @Override
        public boolean accepts(Throwable t){
            return super.accepts(t) ||
                    t instanceof UniqueConstraintViolation;
        }

        @Override
        public StandardException newException(Throwable rootCause){
            if(!(rootCause instanceof UniqueConstraintViolation))
                return super.newException(rootCause);
            else{
                UniqueConstraintViolation ucv=(UniqueConstraintViolation)rootCause;
                ConstraintContext context=ucv.getContext();
                return StandardException.newException(getSqlState(),context.getMessages());
            }
        }
    },
    LANG_FK_VIOLATION("23503"){
        @Override
        public boolean accepts(Throwable t){
            return super.accepts(t) || t instanceof ForeignKeyViolation;
        }

        @Override
        public StandardException newException(Throwable rootCause){
            if(!(rootCause instanceof ForeignKeyViolation))
                return super.newException(rootCause);
            ForeignKeyViolation fkV=(ForeignKeyViolation)rootCause;
            ConstraintContext context=fkV.getContext();
            return StandardException.newException(getSqlState(),context.getMessages());
        }
    },
    LANG_CHECK_CONSTRAINT_VIOLATED("23513"),

    // From SQL/XML[2006] spec), there are others, but
    // these are the ones we actually use with our
    // current XML support.
    LANG_XML_QUERY_ERROR("10000"),
    LANG_NOT_AN_XML_DOCUMENT("2200L"),
    LANG_INVALID_XML_DOCUMENT("2200M"),
    LANG_INVALID_XML_CONTEXT_ITEM("2200V"),
    LANG_XQUERY_SERIALIZATION_ERROR("2200W"),

    CANNOT_CLOSE_ACTIVE_CONNECTION("25001"),
    INVALID_TRANSACTION_STATE_ACTIVE_CONNECTION("25001.S.1"),


    LANG_UNEXPECTED_USER_EXCEPTION("38000"),
    EXTERNAL_ROUTINE_NO_SQL("38001"),
    EXTERNAL_ROUTINE_NO_MODIFIES_SQL("38002"),
    EXTERNAL_ROUTINE_NO_READS_SQL("38004"),

    LANG_NULL_TO_PRIMITIVE_PARAMETER("39004"),
    LANG_SYNTAX_OR_ACCESS_VIOLATION("42000"),

    // Fix for Derby-1828 - access rule violations should use SQL state 42
    AUTH_NO_TABLE_PERMISSION("42500"),
    AUTH_NO_TABLE_PERMISSION_FOR_GRANT("42501"),
    AUTH_NO_COLUMN_PERMISSION("42502"),
    AUTH_NO_COLUMN_PERMISSION_FOR_GRANT("42503"),
    AUTH_NO_GENERIC_PERMISSION("42504"),
    AUTH_NO_GENERIC_PERMISSION_FOR_GRANT("42505"),
    AUTH_NOT_OWNER("42506"),
    AUTH_NO_ACCESS_NOT_OWNER("42507"),
    AUTH_NOT_DATABASE_OWNER("42508"),
    AUTH_GRANT_REVOKE_NOT_ALLOWED("42509"),
    AUTH_NO_OBJECT_PERMISSION("4250A"),
    AUTH_INVALID_AUTHORIZATION_PROPERTY("4250B"),
    AUTH_USER_IN_READ_AND_WRITE_LISTS("4250C"),
    AUTH_DUPLICATE_USERS("4250D"),
    AUTH_INTERNAL_BAD_UUID("4250E"),
    AUTH_ROLE_DBO_ONLY("4251A"),
    AUTH_PUBLIC_ILLEGAL_AUTHORIZATION_ID("4251B"),
    AUTH_ROLE_GRANT_CIRCULARITY("4251C"),
    DBO_ONLY("4251D"),
    HIDDEN_COLUMN("4251E"),
    CANT_DROP_DBO("4251F"),
    WEAK_AUTHENTICATION("4251G"),
    BAD_NATIVE_AUTH_SPEC("4251H"),
    MISSING_CREDENTIALS_DB("4251I"),
    BAD_PASSWORD_LIFETIME("4251J"),
    DBO_FIRST("4251K"),
    BAD_CREDENTIALS_DB_NAME("4251L"),

    LANG_DB2_NOT_NULL_COLUMN_INVALID_DEFAULT("42601"),
    LANG_DB2_INVALID_HEXADECIMAL_CONSTANT("42606"),
    LANG_DB2_STRING_CONSTANT_TOO_LONG("54002"),
    LANG_DB2_NUMBER_OF_ARGS_INVALID("42605"),
    LANG_DB2_COALESCE_FUNCTION_ALL_PARAMS("42610"),
    LANG_DB2_LENGTH_PRECISION_SCALE_VIOLATION("42611"),
    LANG_DB2_MULTIPLE_ELEMENTS("42613"),
    LANG_DB2_INVALID_CHECK_CONSTRAINT("42621"),
    LANG_DB2_DUPLICATE_NAMES("42734"),
    LANG_DB2_INVALID_COLS_SPECIFIED("42802"),
    LANG_DB2_INVALID_SELECT_COL_FOR_HAVING("42803"),
    LANG_DB2_ADD_UNIQUE_OR_PRIMARY_KEY_ON_NULL_COLS("42831"),
    LANG_ADD_PRIMARY_KEY_ON_NULL_COLS("42831.S.1"),
    LANG_DB2_REPLACEMENT_ERROR("42815.S.713"),
    LANG_DB2_COALESCE_DATATYPE_MISMATCH("42815.S.171"),
    LANG_DB2_TOO_LONG_FLOATING_POINT_LITERAL("42820"),
    LANG_DB2_LIKE_SYNTAX_ERROR("42824"),
    LANG_INVALID_FK_COL_FOR_SETNULL("42834"),
    LANG_INVALID_ALTER_TABLE_ATTRIBUTES("42837"),
    LANG_DB2_FUNCTION_INCOMPATIBLE("42884"),


    LANG_DB2_PARAMETER_NEEDS_MARKER("42886"),
    LANG_DB2_INVALID_DEFAULT_VALUE("42894"),

    LANG_NO_AGGREGATES_IN_WHERE_CLAUSE("42903"),
    LANG_DB2_VIEW_REQUIRES_COLUMN_NAMES("42908"),
    LANG_TABLE_REQUIRES_COLUMN_NAMES("42909"),
    LANG_DELETE_RULE_VIOLATION("42915"),
    LANG_SYNONYM_CIRCULAR("42916"),
    LANG_SYNTAX_ERROR("42X01"),
    LANG_LEXICAL_ERROR("42X02"),
    LANG_AMBIGUOUS_COLUMN_NAME("42X03"),
    LANG_COLUMN_NOT_FOUND("42X04"),
    LANG_TABLE_NOT_FOUND("42X05"){
        @Override
        public StandardException newException(Throwable rootCause){
            return StandardException.newException(getSqlState(),rootCause.getMessage());
        }
    },
    LANG_TOO_MANY_RESULT_COLUMNS("42X06"),
    LANG_NULL_IN_VALUES_CLAUSE("42X07"),
    LANG_DOES_NOT_IMPLEMENT("42X08"),
    LANG_FROM_LIST_DUPLICATE_TABLE_NAME("42X09"),
    LANG_EXPOSED_NAME_NOT_FOUND("42X10"),
    LANG_IDENTIFIER_TOO_LONG("42622"),
    LANG_DUPLICATE_COLUMN_NAME_CREATE("42X12"),
    LANG_TOO_MANY_COLUMNS_IN_TABLE_OR_VIEW("54011"),
    LANG_TOO_MANY_INDEXES_ON_TABLE("42Z9F"),
    LANG_DUPLICATE_COLUMN_NAME_INSERT("42X13"),
    LANG_COLUMN_NOT_FOUND_IN_TABLE("42X14"),
    LANG_ILLEGAL_COLUMN_REFERENCE("42X15"),
    LANG_DUPLICATE_COLUMN_NAME_UPDATE("42X16"),
    LANG_INVALID_JOIN_ORDER_SPEC("42X17"),
    LANG_NOT_COMPARABLE("42818"),
    LANG_NON_BOOLEAN_WHERE_CLAUSE("42X19"),
    LANG_INTEGER_LITERAL_EXPECTED("42X20"),
    LANG_CURSOR_NOT_UPDATABLE("42X23"),
    LANG_INVALID_COL_HAVING_CLAUSE("42X24"),
    LANG_UNARY_FUNCTION_BAD_TYPE("42X25"),
    LANG_TYPE_DOESNT_EXIST("42X26"),
    LANG_CURSOR_DELETE_MISMATCH("42X28"),
    LANG_CURSOR_UPDATE_MISMATCH("42X29"),
    LANG_CURSOR_NOT_FOUND("42X30"),
    LANG_COLUMN_NOT_UPDATABLE_IN_CURSOR("42X31"),
    LANG_CORRELATION_NAME_FOR_UPDATABLE_COLUMN_DISALLOWED_IN_CURSOR("42X42"),
    LANG_DERIVED_COLUMN_LIST_MISMATCH("42X32"),
    LANG_DUPLICATE_COLUMN_NAME_DERIVED("42X33"),
    LANG_PARAM_IN_SELECT_LIST("42X34"),
    LANG_BINARY_OPERANDS_BOTH_PARMS("42X35"),
    LANG_UNARY_OPERAND_PARM("42X36"),
    LANG_UNARY_ARITHMETIC_BAD_TYPE("42X37"),
    LANG_CANT_SELECT_STAR_SUBQUERY("42X38"),
    LANG_NON_SINGLE_COLUMN_SUBQUERY("42X39"),
    LANG_UNARY_LOGICAL_NON_BOOLEAN("42X40"),
    LANG_INVALID_FROM_LIST_PROPERTY("42X41"),
    LANG_NOT_STORABLE("42821"),
    LANG_NULL_RESULT_SET_META_DATA("42X43"),
    LANG_INVALID_COLUMN_LENGTH("42X44"),
    LANG_INVALID_FUNCTION_ARG_TYPE("42X45"),
    LANG_AMBIGUOUS_FUNCTION_NAME("42X46"),
    LANG_AMBIGUOUS_PROCEDURE_NAME("42X47"),
    LANG_INVALID_PRECISION("42X48"),
    LANG_INVALID_INTEGER_LITERAL("42X49"),
    LANG_NO_METHOD_FOUND("42X50"),
    LANG_TYPE_DOESNT_EXIST2("42X51"),
    LANG_PRIMITIVE_RECEIVER("42X52"),
    LANG_LIKE_BAD_TYPE("42X53"),
    LANG_PARAMETER_RECEIVER("42X54"),
    LANG_TABLE_NAME_MISMATCH("42X55"),
    LANG_VIEW_DEFINITION_R_C_L_MISMATCH("42X56"),
    LANG_INVALID_V_T_I_COLUMN_COUNT("42X57"),
    LANG_UNION_UNMATCHED_COLUMNS("42X58"),
    LANG_ROW_VALUE_CONSTRUCTOR_UNMATCHED_COLUMNS("42X59"),
    LANG_INVALID_INSERT_MODE("42X60"),
    LANG_NOT_UNION_COMPATIBLE("42X61"),
    LANG_NO_USER_DDL_IN_SYSTEM_SCHEMA("42X62"),
    LANG_NO_ROWS_FROM_USING("42X63"),
    LANG_INVALID_STATISTICS_SPEC("42X64"),
    LANG_INDEX_NOT_FOUND("42X65"),
    LANG_DUPLICATE_COLUMN_NAME_CREATE_INDEX("42X66"),
    //42X67
    LANG_NO_FIELD_FOUND("42X68"),
    LANG_PRIMITIVE_REFERENCING_EXPRESSION("42X69"),
    LANG_TABLE_DEFINITION_R_C_L_MISMATCH("42X70"),
    LANG_INVALID_COLUMN_TYPE_CREATE_TABLE("42X71"),
    LANG_NO_STATIC_FIELD_FOUND("42X72"),
    LANG_AMBIGUOUS_METHOD_INVOCATION("42X73"),
    LANG_INVALID_CALL_STATEMENT("42X74"),
    LANG_NO_CONSTRUCTOR_FOUND("42X75"),
    LANG_ADDING_PRIMARY_KEY_ON_EXPLICIT_NULLABLE_COLUMN("42X76"),
    LANG_COLUMN_OUT_OF_RANGE("42X77"),
    LANG_ORDER_BY_COLUMN_NOT_FOUND("42X78"),
    LANG_DUPLICATE_COLUMN_FOR_ORDER_BY("42X79"),
    LANG_QUALIFIED_COLUMN_NAME_NOT_ALLOWED("42877"),
    LANG_UNION_ORDER_BY("42878"),
    LANG_DISTINCT_ORDER_BY("42879"),
    LANG_DISTINCT_ORDER_BY_EXPRESSION("4287A"),
    LANG_EMPTY_VALUES_CLAUSE("42X80"),
    LANG_EMPTY_COLUMN_LIST("42X81"),
    LANG_USING_CARDINALITY_VIOLATION("42X82"),
    LANG_ADDING_COLUMN_WITH_NULL_AND_NOT_NULL_CONSTRAINT("42X83"),
    LANG_CANT_DROP_BACKING_INDEX("42X84"),
    LANG_CONSTRAINT_SCHEMA_MISMATCH("42X85"),
    LANG_DROP_NON_EXISTENT_CONSTRAINT("42X86"),
    LANG_ALL_RESULT_EXPRESSIONS_PARAMS("42X87"),
    LANG_CONDITIONAL_NON_BOOLEAN("42X88"),
    LANG_NOT_TYPE_COMPATIBLE("42X89"),
    LANG_TOO_MANY_PRIMARY_KEY_CONSTRAINTS("42X90"),
    LANG_DUPLICATE_CONSTRAINT_NAME_CREATE("42X91"),
    LANG_DUPLICATE_CONSTRAINT_COLUMN_NAME("42X92"),
    LANG_INVALID_CREATE_CONSTRAINT_COLUMN_LIST("42X93"),
    LANG_OBJECT_NOT_FOUND("42X94"),
    LANG_DB_CLASS_PATH_HAS_MISSING_JAR("42X96"),
    LANG_NO_PARAMS_IN_VIEWS("42X98"),
    LANG_NO_PARAMS_IN_TABLES("42X99"),
    LANG_UNASSIGNABLE_GENERATION_CLAUSE("42XA0"),
    LANG_AGGREGATE_IN_GENERATION_CLAUSE("42XA1"),
    LANG_NON_DETERMINISTIC_GENERATION_CLAUSE("42XA2"),
    LANG_CANT_OVERRIDE_GENERATION_CLAUSE("42XA3"),
    LANG_CANT_REFERENCE_GENERATED_COLUMN("42XA4"),
    LANG_ROUTINE_CANT_PERMIT_SQL("42XA5"),
    LANG_BAD_FK_ON_GENERATED_COLUMN("42XA6"),
    LANG_GEN_COL_DEFAULT("42XA7"),
    LANG_GEN_COL_BAD_RENAME("42XA8"),
    LANG_NEEDS_DATATYPE("42XA9"),
    LANG_GEN_COL_BEFORE_TRIG("42XAA"),
    LANG_NOT_NULL_NEEDS_DATATYPE("42XAB"),
    LANG_SEQ_INCREMENT_ZERO("42XAC"),
    LANG_SEQ_ARG_OUT_OF_DATATYPE_RANGE("42XAE"),
    LANG_SEQ_MIN_EXCEEDS_MAX("42XAF"),
    LANG_SEQ_INVALID_START("42XAG"),
    LANG_NEXT_VALUE_FOR_ILLEGAL("42XAH"),
    LANG_SEQUENCE_REFERENCED_TWICE("42XAI"),
    LANG_DUPLICATE_CS_CLAUSE("42XAJ"),
    LANG_INVALID_USER_AGGREGATE_DEFINITION2("42Y00"),
    LANG_INVALID_CHECK_CONSTRAINT("42Y01"),
    // LANG_NO_ALTER_TABLE_COMPRESS_ON_TARGET_TABLE( "42Y02"),
    LANG_NO_SUCH_METHOD_ALIAS("42Y03.S.0"),
    LANG_NO_SUCH_PROCEDURE("42Y03.S.1"),
    LANG_NO_SUCH_FUNCTION("42Y03.S.2"),
    LANG_INVALID_FULL_STATIC_METHOD_NAME("42Y04"),
    LANG_NO_SUCH_FOREIGN_KEY("42Y05"),
    //LANG_METHOD_ALIAS_NOT_FOUND( "42Y06"),
    LANG_SCHEMA_DOES_NOT_EXIST("42Y07"),
    LANG_NO_FK_ON_SYSTEM_SCHEMA("42Y08"),
    LANG_VOID_METHOD_CALL("42Y09"),
    LANG_TABLE_CONSTRUCTOR_ALL_PARAM_COLUMN("42Y10"),
    LANG_MISSING_JOIN_SPECIFICATION("42Y11"),
    LANG_NON_BOOLEAN_JOIN_CLAUSE("42Y12"),
    LANG_DUPLICATE_COLUMN_NAME_CREATE_VIEW("42Y13"),
    // LANG_DROP_TABLE_ON_NON_TABLE( "42Y15"), -- replaced by 42Y62
    LANG_NO_METHOD_MATCHING_ALIAS("42Y16"),
    // LANG_DROP_SYSTEM_TABLE_ATTEMPTED( "42Y17"), -- replaced by 42X62
    LANG_INVALID_CAST("42846"),
    //	LANG_AMBIGUOUS_GROUPING_COLUMN( "42Y19"), -- unused post 883.
    //	LANG_UNMATCHED_GROUPING_COLUMN(	//	"42Y20"), -- not used
    LANG_USER_AGGREGATE_BAD_TYPE("42Y22"),
    LANG_BAD_J_D_B_C_TYPE_INFO("42Y23"),
    LANG_VIEW_NOT_UPDATEABLE("42Y24"),
    LANG_UPDATE_SYSTEM_TABLE_ATTEMPTED("42Y25"),
    LANG_AGGREGATE_IN_GROUPBY_LIST("42Y26"),
    LANG_NO_PARAMS_IN_TRIGGER_ACTION("42Y27"),
    // LANG_NO_TRIGGER_ON_SYSTEM_TABLE( "42Y28"), -- replaced by 42X62
    LANG_INVALID_NON_GROUPED_SELECT_LIST("42Y29"),
    LANG_INVALID_GROUPED_SELECT_LIST("42Y30"),

    LANG_TOO_MANY_ELEMENTS("54004"),
    LANG_BAD_AGGREGATOR_CLASS2("42Y32"),
    LANG_USER_AGGREGATE_CONTAINS_AGGREGATE("42Y33"),
    LANG_AMBIGUOUS_COLUMN_NAME_IN_TABLE("42Y34"),
    LANG_INVALID_COL_REF_NON_GROUPED_SELECT_LIST("42Y35"),
    LANG_INVALID_COL_REF_GROUPED_SELECT_LIST("42Y36"),
    LANG_TYPE_DOESNT_EXIST3("42Y37"),
    LANG_INVALID_BULK_INSERT_REPLACE("42Y38"),
    LANG_UNRELIABLE_QUERY_FRAGMENT("42Y39"),
    LANG_DUPLICATE_COLUMN_IN_TRIGGER_UPDATE("42Y40"),
    LANG_TRIGGER_SPS_CANNOT_BE_EXECED("42Y41"),
    LANG_INVALID_DECIMAL_SCALE("42Y42"),
    LANG_INVALID_DECIMAL_PRECISION_SCALE("42Y43"),
    LANG_INVALID_FROM_TABLE_PROPERTY("42Y44"),
    LANG_CANNOT_BIND_TRIGGER_V_T_I("42Y45"),
    LANG_INVALID_FORCED_INDEX1("42Y46"),
    //	LANG_INVALID_FORCED_INDEX2( "42Y47"),
    LANG_INVALID_FORCED_INDEX2("42Y48"),
    LANG_DUPLICATE_PROPERTY("42Y49"),
    LANG_BOTH_FORCE_INDEX_AND_CONSTRAINT_SPECIFIED("42Y50"),
    //	LANG_INVALID_FORCED_INDEX4( "42Y51"),
    LANG_OBJECT_DOES_NOT_EXIST("42Y55"),
    LANG_INVALID_JOIN_STRATEGY("42Y56"),
    LANG_INVALID_NUMBER_FORMAT_FOR_OVERRIDE("42Y58"),
    LANG_INVALID_HASH_INITIAL_CAPACITY("42Y59"),
    LANG_INVALID_HASH_LOAD_FACTOR("42Y60"),
    LANG_INVALID_HASH_MAX_CAPACITY("42Y61"),
    LANG_INVALID_OPERATION_ON_VIEW("42Y62"),
    LANG_HASH_NO_EQUIJOIN_FOUND("42Y63"),
    LANG_INVALID_BULK_FETCH_VALUE("42Y64"),
    LANG_INVALID_BULK_FETCH_WITH_JOIN_TYPE("42Y65"),
    LANG_INVALID_BULK_FETCH_UPDATEABLE("42Y66"),
    LANG_CANNOT_DROP_SYSTEM_SCHEMAS("42Y67"),
    LANG_NO_BEST_PLAN_FOUND("42Y69"),
    LANG_ILLEGAL_FORCED_JOIN_ORDER("42Y70"),
    LANG_CANNOT_DROP_SYSTEM_ALIASES("42Y71"),
    LANG_CANNOT_DROP_TRIGGER_S_P_S("42Y82"),
    LANG_USER_AGGREGATE_BAD_TYPE_NULL("42Y83"),
    LANG_INVALID_DEFAULT_DEFINITION("42Y84"),
    LANG_INVALID_USE_OF_DEFAULT("42Y85"),
    LANG_STMT_NOT_UPDATABLE("42Y90"),
    LANG_NO_SPS_USING_IN_TRIGGER("42Y91"),
    LANG_TRIGGER_BAD_REF_MISMATCH("42Y92"),
    LANG_TRIGGER_BAD_REF_CLAUSE_DUPS("42Y93"),
    LANG_BINARY_LOGICAL_NON_BOOLEAN("42Y94"),
    LANG_BINARY_OPERATOR_NOT_SUPPORTED("42Y95"),
    LANG_UNKNOWN("42Y96.U"),
    LANG_INVALID_ESCAPE("42Y97"),
    LANG_JAVACC_SYNTAX("42Y98.U"),
    LANG_JAVACC_LEXICAL_ERROR("42Y99.U"),
    LANG_JAVA_METHOD_CALL_OR_FIELD_REF("42Z00.U"),
    LANG_UNTYPED("42Z01.U"),
    // TEMPORARY COMPILATION RESTRICTIONS
    LANG_USER_AGGREGATE_MULTIPLE_DISTINCTS("42Z02"),
    LANG_NO_AGGREGATES_IN_ON_CLAUSE("42Z07"),
    LANG_NO_BULK_INSERT_REPLACE_WITH_TRIGGER("42Z08"),

    // MORE GENERIC LANGUAGE STUFF
    LANG_COLUMN_DEFAULT("42Z09.U"),
    LANG_UDT_BUILTIN_CONFLICT("42Z10"),
    LANG_STREAM("42Z11.U"),
    LANG_STREAM_INVALID_ACCESS("42Z12.U"),

    // LANG_UPDATABLE_VTI_BAD_GETMETADATA						( "42Z14"),

    // for alter table modify column ...
    LANG_MODIFY_COLUMN_CHANGE_TYPE("42Z15"),
    LANG_MODIFY_COLUMN_INVALID_TYPE("42Z16"),
    LANG_MODIFY_COLUMN_INVALID_LENGTH("42Z17"),
    LANG_MODIFY_COLUMN_FKEY_CONSTRAINT("42Z18"),
    LANG_MODIFY_COLUMN_REFERENCED("42Z19"),
    LANG_MODIFY_COLUMN_EXISTING_CONSTRAINT("42Z20"),
    LANG_MODIFY_COLUMN_EXISTING_PRIMARY_KEY("42Z20.S.1"),

    LANG_AI_INVALID_INCREMENT("42Z21"),
    LANG_AI_INVALID_TYPE("42Z22"),
    LANG_AI_CANNOT_MODIFY_AI("42Z23"),
    LANG_AI_OVERFLOW("42Z24"),
    LANG_AI_COUNTER_ERROR("42Z25"),
    LANG_AI_CANNOT_NULL_AI("42Z26"),
    LANG_AI_CANNOT_ADD_AI_TO_NULLABLE("42Z27"),
    // LANG_BUILT_IN_ALIAS_NAME						( "42Z28"),
    // RUNTIMESTATISTICS
    LANG_TIME_SPENT_THIS("42Z30.U"),
    LANG_TIME_SPENT_THIS_AND_BELOW("42Z31.U"),
    LANG_TOTAL_TIME_BREAKDOWN("42Z32.U"),
    LANG_CONSTRUCTOR_TIME("42Z33.U"),
    LANG_OPEN_TIME("42Z34.U"),
    LANG_NEXT_TIME("42Z35.U"),
    LANG_CLOSE_TIME("42Z36.U"),
    LANG_NONE("42Z37.U"),
    LANG_POSITION_NOT_AVAIL("42Z38.U"),
    LANG_UNEXPECTED_EXC_GETTING_POSITIONER("42Z39.U"),
    LANG_POSITIONER("42Z40.U"),
    LANG_ORDERED_NULL_SEMANTICS("42Z41.U"),
    LANG_COLUMN_ID("42Z42.U"),
    LANG_OPERATOR("42Z43.U"),
    LANG_ORDERED_NULLS("42Z44.U"),
    LANG_UNKNOWN_RETURN_VALUE("42Z45.U"),
    LANG_NEGATE_COMPARISON_RESULT("42Z46.U"),
    LANG_GQPT_NOT_SUPPORTED("42Z47.U"),
    LANG_COLUMN_ID_ARRAY("42Z48.U"),

    LANG_GRANT_REVOKE_WITH_LEGACY_ACCESS("42Z60"),

    // 42Z70 - 42Z7Z: For Derby-specific XML compilation errors
    //(not defined by SQL/XML standard).
    LANG_ATTEMPT_TO_BIND_XML("42Z70"),
    LANG_ATTEMPT_TO_SELECT_XML("42Z71"),
    LANG_XML_KEYWORD_MISSING("42Z72"),
    LANG_INVALID_XMLSERIALIZE_TYPE("42Z73"),
    LANG_UNSUPPORTED_XML_FEATURE("42Z74"),
    LANG_INVALID_XML_QUERY_EXPRESSION("42Z75"),
    LANG_MULTIPLE_XML_CONTEXT_ITEMS("42Z76"),
    LANG_INVALID_CONTEXT_ITEM_TYPE("42Z77"),
    LANG_XMLPARSE_UNKNOWN_PARAM_TYPE("42Z79"),

    LANG_SERIALIZABLE("42Z80.U"),
    LANG_READ_COMMITTED("42Z81.U"),
    LANG_EXCLUSIVE("42Z82.U"),
    LANG_INSTANTANEOUS_SHARE("42Z83.U"),
    LANG_SHARE("42Z84.U"),
    LANG_TABLE("42Z85.U"),
    LANG_ROW("42Z86.U"),
    LANG_SHARE_TABLE("42Z87.U"),
    LANG_SHARE_ROW("42Z88.U"),

    // MORE GENERIC LANGUAGE STUFF
    // LANG_UPDATABLE_VTI_BAD_GETRESULTSETCONCURRENCY( "42Z89"),
    LANG_UPDATABLE_VTI_NON_UPDATABLE_RS("42Z90"),
    LANG_SUBQUERY("42Z91"),
    LANG_REPEATABLE_READ("42Z92"),
    LANG_MULTIPLE_CONSTRAINTS_WITH_SAME_COLUMNS("42Z93"),
    // LANG_ALTER_SYSTEM_TABLE_ATTEMPTED( "42Z94"), -- replaced by 42X62
    // LANG_ALTER_TABLE_ON_NON_TABLE( "42Z95"), -- replaced by 42Y62
    LANG_RENAME_COLUMN_WILL_BREAK_CHECK_CONSTRAINT("42Z97"),
    // beetle 2758.  For now just raise an error for literals > 64K
    LANG_INVALID_LITERAL_LENGTH("42Z99"),
    LANG_READ_UNCOMMITTED("42Z9A"),
    LANG_VTI_BLOB_CLOB_UNSUPPORTED("42Z9B"),
    LANG_UNSUPPORTED_TRIGGER_STMT("42Z9D"),
    LANG_UNSUPPORTED_TRIGGER_PROC("42Z9D.S.1"),
    LANG_DROP_CONSTRAINT_TYPE("42Z9E"),
    LANG_QUERY_TOO_COMPLEX("42ZA0"),
    LANG_INVALID_SQL_IN_BATCH("42ZA1"),
    LANG_LIKE_COLLATION_MISMATCH("42ZA2"),
    LANG_CAN_NOT_CREATE_TABLE("42ZA3"),

    LANG_NO_DJRS("42ZB1"),
    LANG_MUST_BE_DJRS("42ZB2"),
    LANG_XML_NOT_ALLOWED_DJRS("42ZB3"),
    LANG_NOT_TABLE_FUNCTION("42ZB4"),
    LANG_NO_COSTING_CONSTRUCTOR("42ZB5"),
    LANG_TABLE_FUNCTION_NOT_ALLOWED("42ZB6"),

    LANG_NO_SUCH_WINDOW("42ZC0"),
    LANG_WINDOW_LIMIT_EXCEEDED("42ZC1"),
    LANG_WINDOW_FUNCTION_CONTEXT_ERROR("42ZC2"),

    LANG_INVALID_SPARK_AND_CONTROL("42ZD1"),

    LANG_ILLEGAL_TIME_TRAVEL("42ZD2"),

    //following 3 matches the DB2 sql states
    LANG_DECLARED_GLOBAL_TEMP_TABLE_ONLY_IN_SESSION_SCHEMA("428EK"),
    LANG_NOT_ALLOWED_FOR_DECLARED_GLOBAL_TEMP_TABLE("42995"),
    LANG_LONG_DATA_TYPE_NOT_ALLOWED("42962"),

    LANG_MULTIPLE_AUTOINCREMENT_COLUMNS("428C1"),
    LANG_ALTER_TABLE_AUTOINCREMENT_COLUMN_NOT_ALLOWED("42601.S.372"),
    LANG_TOO_MANY_INDEX_KEY_COLS("54008"),
    LANG_TRIGGER_RECURSION_EXCEEDED("54038"),
    LANG_TOO_MANY_PARAMETERS_FOR_STORED_PROC("54023"),

    //following 1 does not match the DB2 sql state, it is a Derby specific behavior which is not compatible with DB2
    LANG_OPERATION_NOT_ALLOWED_ON_SESSION_SCHEMA_TABLES("XCL51.S"),

    // com.splicemachine.db.client.sql.execute.rts
    RTS_ATTACHED_TO("43X00.U"),
    RTS_BEGIN_SQ_NUMBER("43X01.U"),
    RTS_ANY_RS("43X02.U"),
    RTS_NUM_OPENS("43X03.U"),
    RTS_ROWS_SEEN("43X04.U"),
    RTS_SOURCE_RS("43X05.U"),
    RTS_END_SQ_NUMBER("43X06.U"),
    RTS_OPT_EST_RC("43X07.U"),
    RTS_OPT_EST_COST("43X08.U"),
    RTS_SECONDS("43X09.U"),
    RTS_TOTAL("43X10.U"),
    RTS_NODE("43X11.U"),
    RTS_NOT_IMPL("43X12.U"),
    RTS_DELETE_RS_USING("43X13.U"),
    RTS_TABLE_LOCKING("43X14.U"),
    RTS_ROW_LOCKING("43X15.U"),
    RTS_DEFERRED("43X16.U"),
    RTS_ROWS_DELETED("43X17.U"),
    RTS_INDEXES_UPDATED("43X18.U"),
    RTS_DELETE("43X19.U"),
    RTS_DSARS("43X20.U"),
    RTS_ROWS_INPUT("43X21.U"),
    RTS_DISTINCT_SCALAR_AGG("43X22.U"),
    RTS_DISTINCT_SCAN_RS_USING("43X23.U"),
    RTS_CONSTRAINT("43X24.U"),
    RTS_INDEX("43X25.U"),
    RTS_DISTINCT_SCAN_RS("43X26.U"),
    RTS_LOCKING("43X27.U"),
    RTS_SCAN_INFO("43X28.U"),
    RTS_DISTINCT_COL("43X29.U"),
    RTS_DISTINCT_COLS("43X30.U"),
    RTS_HASH_TABLE_SIZE("43X31.U"),
    RTS_ROWS_FILTERED("43X32.U"),
    RTS_NEXT_TIME("43X33.U"),
    RTS_START_POSITION("43X34.U"),
    RTS_STOP_POSITION("43X35.U"),
    RTS_SCAN_QUALS("43X36.U"),
    RTS_NEXT_QUALS("43X37.U"),
    RTS_ON_USING("43X38.U"),
    RTS_DISTINCT_SCAN("43X39.U"),
    RTS_SORT_INFO("43X40.U"),
    RTS_GROUPED_AGG_RS("43X41.U"),
    RTS_HAS_DISTINCT_AGG("43X42.U"),
    RTS_IN_SORTED_ORDER("43X43.U"),
    RTS_GROUPED_AGG("43X44.U"),
    RTS_HASH_EXISTS_JOIN("43X45.U"),
    RTS_HASH_EXISTS_JOIN_RS("43X46.U"),
    RTS_HASH_JOIN("43X47.U"),
    RTS_HASH_JOIN_RS("43X48.U"),
    RTS_HASH_LEFT_OJ("43X49.U"),
    RTS_HASH_LEFT_OJ_RS("43X50.U"),
    RTS_HASH_SCAN_RS_USING("43X51.U"),
    RTS_HASH_SCAN_RS("43X52.U"),
    RTS_HASH_KEY("43X53.U"),
    RTS_HASH_KEYS("43X54.U"),
    RTS_HASH_SCAN("43X55.U"),
    RTS_ATTACHED_SQS("43X56.U"),
    RTS_HASH_TABLE_RS("43X57.U"),
    RTS_HASH_TABLE("43X58.U"),
    RTS_ALL("43X59.U"),
    RTS_IRTBR_RS("43X60.U"),
    RTS_COLS_ACCESSED_FROM_HEAP("43X61.U"),
    RTS_FOR_TAB_NAME("43X62.U"),
    RTS_IRTBR("43X63.U"),
    RTS_INSERT_MODE_BULK("43X64.U"),
    RTS_INSERT_MODE_NOT_BULK("43X65.U"),
    RTS_INSERT_MODE_NORMAL("43X66.U"),
    RTS_INSERT_USING("43X67.U"),
    RTS_ROWS_INSERTED("43X68.U"),
    RTS_INSERT("43X69.U"),
    RTS_JOIN("43X70.U"),
    RTS_LKIS_RS("43X71.U"),
    RTS_LOCKING_OPTIMIZER("43X72.U"),
    RTS_TABLE_SCAN("43X73.U"),
    RTS_INDEX_SCAN("43X74.U"),
    RTS_ON("43X75.U"),
    RTS_MATERIALIZED_RS("43X76.U"),
    RTS_TEMP_CONGLOM_CREATE_TIME("43X77.U"),
    RTS_TEMP_CONGLOM_FETCH_TIME("43X78.U"),
    RTS_ROWS_SEEN_LEFT("43X79.U"),
    RTS_ROWS_SEEN_RIGHT("43X80.U"),
    RTS_ROWS_RETURNED("43X81.U"),
    RTS_LEFT_RS("43X82.U"),
    RTS_RIGHT_RS("43X83.U"),
    RTS_NESTED_LOOP_EXISTS_JOIN("43X84.U"),
    RTS_NESTED_LOOP_EXISTS_JOIN_RS("43X85.U"),
    RTS_NESTED_LOOP_JOIN("43X86.U"),
    RTS_NESTED_LOOP_JOIN_RS("43X87.U"),
    RTS_EMPTY_RIGHT_ROWS("43X88.U"),
    RTS_NESTED_LOOP_LEFT_OJ("43X89.U"),
    RTS_NESTED_LOOP_LEFT_OJ_RS("43X90.U"),
    RTS_NORMALIZE_RS("43X91.U"),
    RTS_ONCE_RS("43X92.U"),
    RTS_PR_RS("43X93.U"),
    RTS_RESTRICTION("43X94.U"),
    RTS_PROJECTION("43X95.U"),
    RTS_RESTRICTION_TIME("43X96.U"),
    RTS_PROJECTION_TIME("43X97.U"),
    RTS_PR("43X98.U"),
    RTS_ROW_RS("43X99.U"),
    RTS_RC("43X9A.U"),
    RTS_RC_RS("43X9B.U"),
    RTS_WINDOW_RS("43X9C.U"),
    RTS_MERGE_SORT_EXISTS_JOIN("43X9D.U"),
    RTS_MERGE_SORT_EXISTS_JOIN_RS("43X9E.U"),
    RTS_MERGE_SORT_JOIN("43X9F.U"),
    RTS_MERGE_SORT_JOIN_RS("43X9G.U"),
    RTS_MERGE_SORT_LEFT_OJ("43X9H.U"),
    RTS_MERGE_SORT_LEFT_OJ_RS("43X9I.U"),

    RTS_SCALAR_AGG_RS("43Y00.U"),
    RTS_INDEX_KEY_OPT("43Y01.U"),
    RTS_SCALAR_AGG("43Y02.U"),
    RTS_SCROLL_INSENSITIVE_RS("43Y03.U"),
    RTS_READS_FROM_HASH("43Y04.U"),
    RTS_WRITES_TO_HASH("43Y05.U"),
    RTS_SORT_RS("43Y06.U"),
    RTS_ELIMINATE_DUPS("43Y07.U"),
    RTS_SORT("43Y08.U"),
    RTS_IS_RS_USING("43Y09.U"),
    RTS_TS_RS_FOR("43Y10.U"),
    RTS_ACTUAL_TABLE("43Y11.U"),
    RTS_FETCH_SIZE("43Y12.U"),
    RTS_QUALS("43Y13.U"),
    RTS_UNION_RS("43Y14.U"),
    RTS_UNION("43Y15.U"),
    RTS_UPDATE_RS_USING("43Y16.U"),
    RTS_ROWS_UPDATED("43Y17.U"),
    RTS_UPDATE("43Y18.U"),
    RTS_VTI_RS("43Y19.U"),
    RTS_VTI("43Y20.U"),
    RTS_MATERIALIZED_SUBQS("43Y21.U"),
    RTS_STATEMENT_NAME("43Y22.U"),
    RTS_STATEMENT_TEXT("43Y23.U"),
    RTS_PARSE_TIME("43Y24.U"),
    RTS_BIND_TIME("43Y25.U"),
    RTS_OPTIMIZE_TIME("43Y26.U"),
    RTS_GENERATE_TIME("43Y27.U"),
    RTS_COMPILE_TIME("43Y28.U"),
    RTS_EXECUTE_TIME("43Y29.U"),
    RTS_BEGIN_COMP_TS("43Y30.U"),
    RTS_END_COMP_TS("43Y31.U"),
    RTS_BEGIN_EXE_TS("43Y32.U"),
    RTS_END_EXE_TS("43Y33.U"),
    RTS_STMT_EXE_PLAN_TXT("43Y44.U"),
    RTS_RUN_TIME("43Y45.U"),
    RTS_INSERT_VTI_RESULT_SET("43Y46.U"),
    RTS_DELETE_VTI_RESULT_SET("43Y47.U"),
    RTS_INSERT_VTI("43Y49.U"),
    RTS_DELETE_VTI("43Y50.U"),
    RTS_DELETE_CASCADE("43Y51.U"),
    RTS_DELETE_CASCADE_RS_USING("43Y52.U"),
    RTS_REFACTION_DEPENDENT("43Y53.U"),
    RTS_BEGIN_DEPENDENT_NUMBER("43Y54.U"),
    RTS_END_DEPENDENT_NUMBER("43Y55.U"),
    RTS_USER_SUPPLIED_OPTIMIZER_OVERRIDES_FOR_TABLE("43Y56.U"),
    RTS_USER_SUPPLIED_OPTIMIZER_OVERRIDES_FOR_JOIN("43Y57.U"),
    RTS_INTERSECT_RS("43Y58.U"),
    RTS_INTERSECT("43Y59.U"),
    RTS_EXCEPT_RS("43Y60.U"),
    RTS_EXCEPT("43Y61.U"),

    // com.splicemachine.db.catalog.types
    TI_SQL_TYPE_NAME("44X00.U"),
    TI_NEXT_ERROR("44X05.U"),

    // INTERNAL EXCEPTIONS
    LANG_UNABLE_TO_GENERATE("42Z50"),
    LANG_UNAVAILABLE_ACTIVATION_NEED("42Z53"),
    LANG_PARSE_ONLY("42Z54.U"),
    LANG_STOP_AFTER_PARSING("42Z55.U"),
    LANG_STOP_AFTER_BINDING("42Z56.U"),
    LANG_STOP_AFTER_OPTIMIZING("42Z57.U"),
    LANG_STOP_AFTER_GENERATING("42Z58.U"),

    // PARSER EXCEPTIONS
    LANG_UNBINDABLE_REWRITE("X0A00.S"),

    // EXECUTION EXCEPTIONS
    LANG_CANT_LOCK_TABLE("X0X02.S"),
    LANG_TABLE_NOT_FOUND_DURING_EXECUTION("X0X05.S"),
    LANG_CANT_DROP_JAR_ON_DB_CLASS_PATH_DURING_EXECUTION("X0X07.S"),
    LANG_USING_CARDINALITY_VIOLATION_DURING_EXECUTION("X0X10.S"),
    LANG_NO_ROWS_FROM_USING_DURING_EXECUTION("X0X11.S"),
    LANG_JAR_FILE_DOES_NOT_EXIST("X0X13.S"),
    LANG_FILE_DOES_NOT_EXIST("X0X14.S"),
    LANG_NO_CORRESPONDING_S_Q_L_TYPE("X0X57.S"),
    LANG_CURSOR_ALREADY_EXISTS("X0X60.S"),
    LANG_INDEX_COLUMN_NOT_EQUAL("X0X61.S"),
    LANG_INCONSISTENT_ROW_LOCATION("X0X62.S"),
    LANG_IO_EXCEPTION("X0X63.S"),
    LANG_COLUMN_NOT_ORDERABLE_DURING_EXECUTION("X0X67.S"),
    LANG_OBJECT_NOT_FOUND_DURING_EXECUTION("X0X81.S"),
    LANG_NON_KEYED_INDEX("X0X85.S"),
    LANG_ZERO_INVALID_FOR_R_S_ABSOLUTE("X0X86.S"),
    LANG_NO_CURRENT_ROW_FOR_RELATIVE("X0X87.S"),
    LANG_CANT_INVALIDATE_OPEN_RESULT_SET("X0X95.S"),
    LANG_CANT_CHANGE_ISOLATION_HOLD_CURSOR("X0X03.S"),
    //following three for auto-generated keys feature in JDBC3.0
    INVALID_COLUMN_ARRAY_LENGTH("X0X0D.S"),
    LANG_INVALID_AUTOGEN_COLUMN_POSITION("X0X0E.S"),
    LANG_INVALID_AUTOGEN_COLUMN_NAME("X0X0F.S"),

    LANG_INDEX_NOT_FOUND_DURING_EXECUTION("X0X99.S"),

    // X0Y01 used to be DUPLICATE_KEY_CONSTRAINT
    LANG_DROP_VIEW_ON_NON_VIEW("X0Y16.S"),
    // LANG_DROP_SYSTEM_TABLE_ATTEMPTED_DURING_EXECUTION( "X0Y17.S"),
    LANG_PROVIDER_HAS_DEPENDENT_VIEW("X0Y23.S"),
    LANG_PROVIDER_HAS_DEPENDENT_S_P_S("X0Y24.S"),
    LANG_PROVIDER_HAS_DEPENDENT_OBJECT("X0Y25.S"),
    LANG_INDEX_AND_TABLE_IN_DIFFERENT_SCHEMAS("X0Y26.S"),
    LANG_CREATE_SYSTEM_INDEX_ATTEMPTED("X0Y28.S"),
    LANG_PROVIDER_HAS_DEPENDENT_TABLE("X0Y29.S"),
    LANG_PROVIDER_HAS_DEPENDENT_ALIAS("X0Y30.S"),
    LANG_OBJECT_ALREADY_EXISTS_IN_OBJECT("X0Y32.S"),
    LANG_CREATE_INDEX_NO_TABLE("X0Y38.S"),
    LANG_INVALID_FK_NO_PK("X0Y41.S"),
    LANG_INVALID_FK_COL_TYPES_DO_NOT_MATCH("X0Y42.S"),
    LANG_INVALID_FK_DIFFERENT_COL_COUNT("X0Y43.S"),
    LANG_INVALID_FK_NO_REF_KEY("X0Y44.S"),
    LANG_ADD_FK_CONSTRAINT_VIOLATION("X0Y45.S"),
    LANG_INVALID_FK_NO_REF_TAB("X0Y46.S"),
    LANG_SCHEMA_NOT_EMPTY("X0Y54.S"),
    LANG_INDEX_ROW_COUNT_MISMATCH("X0Y55.S"),
    LANG_INVALID_OPERATION_ON_SYSTEM_TABLE("X0Y56.S"),
    LANG_ADDING_NON_NULL_COLUMN_TO_NON_EMPTY_TABLE("X0Y57.S"),
    LANG_ADD_PRIMARY_KEY_FAILED1("X0Y58.S"),
    LANG_ADD_CHECK_CONSTRAINT_FAILED("X0Y59.S"),
    LANG_NULL_DATA_IN_PRIMARY_KEY_OR_UNIQUE_CONSTRAINT("X0Y63.S"),
    LANG_NULL_DATA_IN_PRIMARY_KEY("X0Y63.S.1"),
    LANG_NO_COMMIT_IN_NESTED_CONNECTION("X0Y66.S"),
    LANG_NO_ROLLBACK_IN_NESTED_CONNECTION("X0Y67.S"),
    LANG_OBJECT_ALREADY_EXISTS("X0Y68.S"),
    LANG_NO_DDL_IN_TRIGGER("X0Y69.S"),
    LANG_NO_DML_IN_TRIGGER("X0Y70.S"),
    LANG_NO_XACT_IN_TRIGGER("X0Y71.S"),
    LANG_NO_BULK_INSERT_REPLACE_WITH_TRIGGER_DURING_EXECUTION("X0Y72.S"),
    LANG_NO_SET_TRAN_ISO_IN_GLOBAL_CONNECTION("X0Y77.S"),
    LANG_INVALID_CALL_TO_EXECUTE_QUERY("X0Y78.S"),
    MULTIPLE_RESULTS_ON_EXECUTE_QUERY("X0Y78.S.1"),
    USE_EXECUTE_UPDATE_WITH_NO_RESULTS("X0Y78.S.2"),
    LANG_INVALID_CALL_TO_EXECUTE_UPDATE("X0Y79.S"),
    LANG_NULL_DATA_IN_NON_NULL_COLUMN("X0Y80.S"),
    LANG_IGNORE_MISSING_INDEX_ROW_DURING_DELETE("X0Y83.S"),
    LANG_TOO_MUCH_CONTENTION_ON_SEQUENCE("X0Y84.T"),
    LANG_UNKNOWN_SEQUENCE_PREALLOCATOR("X0Y85.S"),
    LANG_CANT_FLUSH_PREALLOCATOR("X0Y86.S"),


    // TEMPORARY EXECUTION RESTRICTIONS

    // Non-SQLSTATE errors
    LANG_DOES_NOT_RETURN_ROWS("XCL01.S"),
    LANG_ACTIVATION_CLOSED("XCL05.S"),
    LANG_CURSOR_CLOSED("XCL07.S"),
    LANG_NO_CURRENT_ROW("XCL08.S"),
    LANG_WRONG_ACTIVATION("XCL09.S"),
    LANG_OBSOLETE_PARAMETERS("XCL10.S"),
    LANG_DATA_TYPE_SET_MISMATCH("XCL12.S"),
    LANG_INVALID_PARAM_POSITION("XCL13.S"),
    LANG_INVALID_COLUMN_POSITION("XCL14.S"),
    LANG_INVALID_COMPARE_TO("XCL15.S"),
    LANG_RESULT_SET_NOT_OPEN("XCL16.S"),
    LANG_STREAM_RETRIEVED_ALREADY("XCL18.S"),
    LANG_MISSING_ROW("XCL19.S"),
    LANG_CANT_UPGRADE_CATALOGS("XCL20.S"),
    LANG_DDL_IN_BIND("XCL21.S"),
    LANG_NOT_OUT_PARAM("XCL22.S"),
    LANG_INVALID_S_Q_L_TYPE("XCL23.S"),
    LANG_PARAMETER_MUST_BE_OUTPUT("XCL24.S"),
    LANG_INVALID_OUT_PARAM_MAP("XCL25.S"),
    LANG_NOT_OUTPUT_PARAMETER("XCL26.S"),
    LANG_RETURN_OUTPUT_PARAM_CANNOT_BE_SET("XCL27.S"),
    LANG_STREAMING_COLUMN_I_O_EXCEPTION("XCL30.S"),
    LANG_STATEMENT_CLOSED_NO_REASON("XCL31.S"),
    LANG_STATEMENT_NEEDS_RECOMPILE("XCL32.S"),


    //delete rule restriction violation errors
    LANG_CANT_BE_DEPENDENT_ESELF("XCL33.S"),
    LANG_CANT_BE_DEPENDENT_ECYCLE("XCL34.S"),
    LANG_CANT_BE_DEPENDENT_MPATH("XCL35.S"),
    LANG_DELETE_RULE_MUSTBE_ESELF("XCL36.S"),
    LANG_DELETE_RULE_MUSTBE_ECASCADE("XCL37.S"),
    LANG_DELETE_RULE_MUSTBE_MPATH("XCL38.S"),
    LANG_DELETE_RULE_CANT_BE_CASCADE_ESELF("XCL39.S"),
    LANG_DELETE_RULE_CANT_BE_CASCADE_ECYCLE("XCL40.S"),
    LANG_DELETE_RULE_CANT_BE_CASCADE_MPATH("XCL41.S"),

    // referential action types
    LANG_DELETE_RULE_CASCADE("XCL42.S"),
    LANG_DELETE_RULE_SETNULL("XCL43.S"),
    LANG_DELETE_RULE_RESTRICT("XCL44.S"),
    LANG_DELETE_RULE_NOACTION("XCL45.S"),
    LANG_DELETE_RULE_SETDEFAULT("XCL46.S"),

    LANG_STATEMENT_UPGRADE_REQUIRED("XCL47.S"),

    //truncate table
    LANG_NO_TRUNCATE_ON_FK_REFERENCE_TABLE("XCL48.S"),
    LANG_NO_TRUNCATE_ON_ENABLED_DELETE_TRIGGERS("XCL49.S"),

    // Initial release of Apache Derby did not support upgrade
    LANG_CANT_UPGRADE_DATABASE("XCL50.S"),

    LANG_STATEMENT_CANCELLED_OR_TIMED_OUT("XCL52.S"),

    /*
	** Language errors that match DB2
	*/


    INVALID_SCHEMA_SYS("42939"),

    /*
    ** Modelled on INVALID_SCHEMA_SYS, although not from DB2
    */
    INVALID_ROLE_SYS("4293A"),


    /*
        SQL standard 0A - feature not supported
    */
    UNSUPPORTED_PREFIX("0A"),

    NOT_IMPLEMENTED("0A000.S"),
    JDBC_METHOD_NOT_IMPLEMENTED("0A000.S.1"),
    JDBC_METHOD_NOT_SUPPORTED_BY_SERVER("0A000.S.2"),
    UNSUPPORTED_HOLDABILITY_PROPERTY("0A000.S.3"),
    CANCEL_NOT_SUPPORTED_BY_SERVER("0A000.S.4"),
    SECMECH_NOT_SUPPORTED("0A000.S.5"),
    DRDA_COMMAND_NOT_IMPLEMENTED("0A000.C.6"),
    DATA_TYPE_NOT_SUPPORTED("0A000.S.7"),


    /*
    ** Authorization and Authentication
    */
    AUTHORIZATION_SPEC_PREFIX("28"),

    AUTH_SET_CONNECTION_READ_ONLY_IN_ACTIVE_XACT("25501"),
    AUTH_WRITE_WITH_READ_ONLY_CONNECTION("25502"),
    AUTH_DDL_WITH_READ_ONLY_CONNECTION("25503"),
    AUTH_CANNOT_SET_READ_WRITE("25505"),
    AUTH_INVALID_USER_NAME("28502"),
    AUTH_ERROR_KERBEROS_CLIENT("28503"),
    AUTH_ERROR_KEYTAB_LOCALIZATION("28504"),

    /*
    ** Dependency manager
    */
    DEP_UNABLE_TO_RESTORE("XD003.S"),
    DEP_UNABLE_TO_STORE("XD004.S"),

    /*
    ** Connectivity
    */
    //following have statement severity.
    NO_CURRENT_ROW("24000"),
    // NULL_TYPE_PARAMETER_MISMATCH( "37000"),
    NO_INPUT_PARAMETERS("07009"),
    NEED_TO_REGISTER_PARAM("07004"),
    COLUMN_NOT_FOUND("S0022"),
    //NO_COMMIT_WHEN_AUTO( "XJ007.S"),
    NO_SAVEPOINT_ROLLBACK_OR_RELEASE_WHEN_AUTO("XJ008.S"),
    REQUIRES_CALLABLE_STATEMENT("XJ009.S"),
    NO_SAVEPOINT_WHEN_AUTO("XJ010.S"),
    NULL_NAME_FOR_SAVEPOINT("XJ011.S"),
    ALREADY_CLOSED("XJ012.S"),
    NO_ID_FOR_NAMED_SAVEPOINT("XJ013.S"),
    NO_NAME_FOR_UNNAMED_SAVEPOINT("XJ014.S"),
    NOT_FOR_PREPARED_STATEMENT("XJ016.S"),
    NO_SAVEPOINT_IN_TRIGGER("XJ017.S"),
    NULL_COLUMN_NAME("XJ018.S"),
    TYPE_MISMATCH("XJ020.S"),
    UNSUPPORTED_TYPE("XJ021.S"),
    SET_STREAM_FAILURE("XJ022.S"),
    SET_STREAM_INEXACT_LENGTH_DATA("XJ023.S"),
    NEGATIVE_STREAM_LENGTH("XJ025.S"),
    NO_AUTO_COMMIT_ON("XJ030.S"),
    BAD_PROPERTY_VALUE("XJ042.S"),
    BAD_SCALE_VALUE("XJ044.S"),
    UNIMPLEMENTED_ISOLATION_LEVEL("XJ045.S"),
    RESULTSET_RETURN_NOT_ALLOWED("XJ04B.S"),
    OUTPUT_PARAMS_NOT_ALLOWED("XJ04C.S"),
    CANNOT_AUTOCOMMIT_XA("XJ056.S"),
    CANNOT_COMMIT_XA("XJ057.S"),
    CANNOT_ROLLBACK_XA("XJ058.S"),
    CANNOT_CLOSE_ACTIVE_XA_CONNECTION("XJ059.S"),
    CANNOT_HOLD_CURSOR_XA("XJ05C.S"),
    NOT_ON_FORWARD_ONLY_CURSOR("XJ061.S"),
    INVALID_FETCH_SIZE("XJ062.S"),
    INVALID_MAX_ROWS_VALUE("XJ063.S"),
    INVALID_FETCH_DIRECTION("XJ064.S"),
    INVALID_ST_FETCH_SIZE("XJ065.S"),
    INVALID_MAXFIELD_SIZE("XJ066.S"),
    NULL_SQL_TEXT("XJ067.S"),
    MIDDLE_OF_BATCH("XJ068.S"),
    NO_SETXXX_FOR_EXEC_USING("XJ069.S"),
    BLOB_BAD_POSITION("XJ070.S"),
    BLOB_NONPOSITIVE_LENGTH("XJ071.S"),
    BLOB_NULL_PATTERN_OR_SEARCH_STR("XJ072.S"),
    BLOB_ACCESSED_AFTER_COMMIT("XJ073.S"),
    INVALID_QUERYTIMEOUT_VALUE("XJ074.S"),
    BLOB_POSITION_TOO_LARGE("XJ076.S"),
    BLOB_UNABLE_TO_READ_PATTERN("XJ077.S"),
    BLOB_INVALID_OFFSET("XJ078.S"),
    BLOB_LENGTH_TOO_LONG("XJ079.S"),
    LANG_NUM_PARAMS_INCORRECT("XJ080.S"),
    INVALID_API_PARAMETER("XJ081.S"),
    LOB_AS_METHOD_ARGUMENT_OR_RECEIVER("XJ082.U"),
    UPDATABLE_RESULTSET_API_DISALLOWED("XJ083.U"),
    COLUMN_NOT_FROM_BASE_TABLE("XJ084.U"),
    STREAM_EOF("XJ085.S"),
    CURSOR_NOT_POSITIONED_ON_INSERT_ROW("XJ086.S"),
    POS_AND_LENGTH_GREATER_THAN_LOB("XJ087.S"),


    WASNULL_INVALID("XJ088.S"),
    CALENDAR_IS_NULL("XJ090.S"),
    PARAM_NOT_OUT_OR_INOUT("XJ091.S"),
    BLOB_TOO_LARGE_FOR_CLIENT("XJ093.S"),
    ERROR_PRIVILEGED_ACTION("XJ095.S"),
    MISSING_RESOURCE_BUNDLE("XJ096.S"),
    SAVEPOINT_NOT_CREATED_BY_CONNECTION("XJ097.S"),
    BAD_AUTO_GEN_KEY_VALUE("XJ098.S"),
    READER_UNDER_RUN("XJ099.S"),
    REGOUTPARAM_SCALE_DOESNT_MATCH_SETTER("XJ100.S"),
    TABLE_NAME_CANNOT_BE_NULL("XJ103.S"),
    SHARED_KEY_LENGTH_ERROR("XJ104.S"),
    DES_KEY_HAS_WRONG_LENGTH("XJ105.S"),
    CRYPTO_NO_SUCH_PADDING("XJ106.S"),
    CRYPTO_BAD_PADDING("XJ107.S"),
    CRYPTO_ILLEGAL_BLOCK_SIZE("XJ108.S"),
    PRIMARY_TABLE_NAME_IS_NULL("XJ110.S"),
    FOREIGN_TABLE_NAME_IS_NULL("XJ111.S"),
    SECURITY_EXCEPTION_ENCOUNTERED("XJ112.S"),
    UNABLE_TO_OPEN_FILE("XJ113.S"),
    CURSOR_INVALID_CURSOR_NAME("XJ114.S"),
    UNABLE_TO_OPEN_RESULTSET_WITH_REQUESTED_HOLDABILTY("XJ115.S"),
    TOO_MANY_COMMANDS_FOR_BATCH("XJ116.S"),
    CANNOT_BATCH_QUERIES("XJ117.S"),
    QUERY_BATCH_ON_NON_QUERY_STATEMENT("XJ118.S"),
    CURSOR_INVALID_OPERATION_AT_CURRENT_POSITION("XJ121.S"),
    CURSOR_NO_UPDATE_CALLS_ON_CURRENT_ROW("XJ122.S"),
    CURSOR_NOT_ON_CURRENT_OR_INSERT_ROW("XJ123.S"),
    CURSOR_COLUMN_NOT_UPDATABLE("XJ124.S"),
    CURSOR_MUST_BE_SCROLLABLE("XJ125.S"),
    CURSOR_INVALID_FOR_SENSITIVE_DYNAMIC("XJ126.S"),
    //wrapper related
    UNABLE_TO_UNWRAP("XJ128.S"),

    EXCEEDED_MAX_SECTIONS("XJ200.S"),
    CURSOR_INVALID_NAME("XJ202.S"),
    CURSOR_DUPLICATE_NAME("XJ203.S"),
    UNABLE_TO_OPEN_RS_WITH_REQUESTED_HOLDABILITY("XJ204.S"),
    NO_TOKENS_IN_SQL_TEXT("XJ206.S"),
    CANT_USE_EXEC_QUERY_FOR_UPDATE("XJ207.S"),
    BATCH_NON_ATOMIC_FAILURE("XJ208.S"),
    STORED_PROC_NOT_INSTALLED("XJ209.S"),
    STORED_PROC_LOAD_MODULE_NOT_FOUND("XJ210.S"),
    BATCH_CHAIN_BREAKING_EXCEPTION("XJ211.S"),
    INVALID_ATTRIBUTE_SYNTAX("XJ212.S"),
    TRACELEVEL_FORMAT_INVALID("XJ213.C"),
    IO_ERROR_UPON_LOB_FREE("XJ214.S"),
    LOB_OBJECT_INVALID("XJ215.S"),
    LOB_OBJECT_LENGTH_UNKNOWN_YET("XJ216.S"),
    LOB_LOCATOR_INVALID("XJ217.S"),

    //XN - Network-level messages
    NET_CONNECTION_RESET_NOT_ALLOWED_IN_UNIT_OF_WORK("XN001.S"),
    NET_SECKTKN_NOT_RETURNED("XN002.U"),
    NET_QUERY_PROCESSING_TERMINATED("XN008.S"),
    NET_ERROR_GETTING_BLOB_LENGTH("XN009.S"),
    NET_NULL_PROCEDURE_NAME("XN010.S"),
    NET_PROCEDURE_NAME_LENGTH_OUT_OF_RANGE("XN011.S"),
    NET_WRONG_XA_VERSION("XN012.S"),
    NET_INVALID_SCROLL_ORIENTATION("XN013.S"),
    NET_EXCEPTION_ON_READ("XN014.S"),
    NET_INPUTSTREAM_LENGTH_TOO_SMALL("XN015.S"),
    NET_EXCEPTION_ON_STREAMLEN_VERIFICATION("XN016.S"),
    NET_PREMATURE_EOS("XN017.S"),
    NET_READER_LENGTH_TOO_SMALL("XN018.S"),
    NET_XARETVAL_ERROR("XN019.S"),
    NET_MARSHALLING_UDT_ERROR("XN020.S"),
    NET_UDT_COERCION_ERROR("XN021.S"),

    // XML - Derby-specific XML errors not covered by
    // SQL standard.
    LANG_MISSING_XML_CLASSES("XML00"),
    LANG_UNEXPECTED_XML_EXCEPTION("XML01"),

    // Used by server for scrollable updatable insensitive result sets
    // to transmit updated state to client. Internal, not seen by user.
    // Has no message in messages.properties as it is never printed.
    ROW_UPDATED("rwupd"),
    // Used by server to signal delete holes to the client. Internal, not
    // seen by user. Has no message in messages.properties as it is never
    // printed.
    ROW_DELETED("02502"),

    //following are session severity.
    DATABASE_NOT_FOUND("XJ004.C"),
    MALFORMED_URL("XJ028.C"),
    BOOT_DATABASE_FAILED("XJ040.C"),
    CREATE_DATABASE_FAILED("XJ041.C"),
    CONFLICTING_BOOT_ATTRIBUTES("XJ048.C"),
    CONFLICTING_CREATE_ATTRIBUTES("XJ049.C"),
    CONFLICTING_RESTORE_ATTRIBUTES("XJ081.C"),
    INVALID_ATTRIBUTE("XJ05B.C"),

    // Connection exceptions - SQL State class 08

    // 08004 SQL State means the server rejected the connection request
    LOGIN_FAILED("08004"),
    NET_CONNECT_AUTH_FAILED("08004.C.1"),
    NET_DATABASE_NOT_FOUND("08004.C.2"),
    AUTH_DATABASE_CONNECTION_REFUSED("08004.C.3"),
    //DERBY-1828: AUTH_DATABASE_CONNECTION_REFUSED used to be "04501.C"),
    AUTH_SHUTDOWN_NOT_DB_OWNER("08004.C.4"),
    AUTH_ENCRYPT_NOT_DB_OWNER("08004.C.5"),
    AUTH_HARD_UPGRADE_NOT_DB_OWNER("08004.C.6"),
    //DERBY-1828: AUTH_x_NOT_DB_OWNER used to be "2850H/I/J.C"),
    CANNOT_CONNECT_TO_DB_IN_REPLICA_MODE("08004.C.7"),
    AUTH_REPLICATION_NOT_DB_OWNER("08004.C.8"),
    //DERBY-2109: new state/msg(considered sql state 28101.C not appropriate)
    AUTH_SHUTDOWN_MISSING_PERMISSION("08004.C.9"),
    //DERBY-2109: new state/msg
    AUTH_DATABASE_CREATE_EXCEPTION("08004.C.10"),
    //DERBY-2109: new state/msg
    AUTH_DATABASE_CREATE_MISSING_PERMISSION("08004.C.11"),
    NET_CONNECT_SECMEC_INCOMPATIBLE_SCHEME("08004.C.12"),
    AUTH_EMPTY_CREDENTIALS("08004.C.13"),

    // There can be multiple causes for 08003, which according
    // to SQL2003 spec means "connection does not exist"
    // We use a suffix to distinguish them.  Because of the suffix
    // you *must* add a severity code
    NO_CURRENT_CONNECTION("08003"),
    NOGETCONN_ON_CLOSED_POOLED_CONNECTION("08003.C.1"),
    LOB_METHOD_ON_CLOSED_CONNECTION("08003.C.2"),
    PHYSICAL_CONNECTION_ALREADY_CLOSED("08003.C.3"),


    // 08006 means connection exception - connection failure
    DRDA_CONNECTION_TERMINATED("08006.C"),
    CONNECTION_FAILED_ON_RESET("08006.C.1"),

    // Use this version of SOCKET_EXCEPTION any time *except* when trying to
    // establish a connection, as the SQLState is different.  When trying
    // to establish a connection, use CONNECT_SOCKET_EXCEPTION.
    SOCKET_EXCEPTION("08006.C.2"){
        @Override
        public boolean accepts(Throwable t){
            return super.accepts(t) || t instanceof SocketException;
        }
    },
    COMMUNICATION_ERROR("08006.C.3"){
        @Override
        public boolean accepts(Throwable t){
            return super.accepts(t) || t instanceof IOException;
        }
    },
    CONNECTION_FAILED_ON_DEFERRED_RESET("08006.C.4"),
    NET_INSUFFICIENT_DATA("08006.C.5"),
    NET_LOB_DATA_TOO_LARGE_FOR_JVM("08006.C.6"),

    CORE_JDBC_DRIVER_UNREGISTERED("08006.C.8"), // JDBCDriver is not registered with the JDBC driver manager

    // 08001 is specifically about the SQL client not being able to establish
    // a connection with the server.  Should only be used for errors that
    // occur upon attempting to open a connection.
    // NOTE that if the server *rejects* the connection, that's a different
    // SQLState- 08004'
    CONNECT_REQUIRED_PROPERTY_NOT_SET("08001.C.1"),
    CONNECT_UNABLE_TO_CONNECT_TO_SERVER("08001.C.2"),
    // Use this version of socket exception occurs when trying to establish
    // a connection to the server, as the SQL State 08001 indicates failure
    // to establish a connection.  If you aren't trying to connect, just
    // use SOCKET_EXCEPTION
    CONNECT_SOCKET_EXCEPTION("08001.C.3"){
        @Override
        public boolean accepts(Throwable t){
            return super.accepts(t) || t instanceof ConnectException;
        }
    },

    CONNECT_UNABLE_TO_OPEN_SOCKET_STREAM("08001.C.4"),
    CONNECT_USERID_LENGTH_OUT_OF_RANGE("08001.C.5"),
    CONNECT_PASSWORD_LENGTH_OUT_OF_RANGE("08001.C.6"),
    CONNECT_USERID_ISNULL("08001.C.7"),
    CONNECT_PASSWORD_ISNULL("08001.C.8"),
    NET_DBNAME_TOO_LONG("08001.C.9"),
    NET_SECTKN_TOO_LONG("08001.C.10"),
    NET_USERID_TOO_LONG("08001.C.11"),
    NET_PASSWORD_TOO_LONG("08001.C.12"),
    NET_EXTNAM_TOO_LONG("08001.C.13"),
    NET_SRVNAM_TOO_LONG("08001.C.14"),

    // database severity
    SHUTDOWN_DATABASE("08006.D"),
    DROP_DATABASE("08006.D.1"),

    //the following 2 exceptions are internal and never get seen by the user.
    CLOSE_REQUEST("close.C.1"), // no message in messages.properties as it is never printed

    //this one had no sqlstate associated with it.
    NORMAL_CLOSE("XXXXX.C.6"),

    //following are system severity.
    CLOUDSCAPE_SYSTEM_SHUTDOWN("XJ015.M"),

    //following are warning severity.
    DATABASE_EXISTS("01J01"),
    NO_SCROLL_SENSITIVE_CURSORS("01J02"),
    LANG_TYPE_NOT_SERIALIZABLE("01J04"),
    UPGRADE_SPSRECOMPILEFAILED("01J05"),
    QUERY_NOT_QUALIFIED_FOR_UPDATABLE_RESULTSET("01J06"),
    HOLDABLE_RESULT_SET_NOT_AVAILABLE("01J07"),
    INVALID_RESULTSET_TYPE("01J08"),
    SCROLL_SENSITIVE_NOT_SUPPORTED("01J10"),
    UNABLE_TO_OBTAIN_MESSAGE_TEXT_FROM_SERVER("01J12"),
    NUMBER_OF_ROWS_TOO_LARGE_FOR_INT("01J13"),
    SQL_AUTHORIZATION_WITH_NO_AUTHENTICATION("01J14"),
    PASSWORD_EXPIRES_SOON("01J15"),
    DBO_PASSWORD_EXPIRES_SOON("01J16"),

    CURSOR_OPERATION_CONFLICT("01001"),


    //following are no applicable severity
    JAVA_EXCEPTION("XJ001.U"),
    NO_UPGRADE("XJ050.U"),

    /*
     ** Messages whose SQL states are prescribed by DRDA
     */
    DRDA_NO_AUTOCOMMIT_UNDER_XA("2D521.S.1"),
    DRDA_INVALID_XA_STATE_ON_COMMIT_OR_ROLLBACK("2D521.S.2"),
    DRDA_CURSOR_NOT_OPEN("24501.S"),

    // 58009 means connection is terminated by a DRDA-protocol error.  This can be caused by any number
    // of reasons, so this SQL State has a lot of instances. Exceptions that are
    // not protocol related, e.g. SocketException, IOException etc should use
    // SQLState 8006. DERBY-3077.
    //
    NET_SQLCDTA_INVALID_FOR_RDBCOLID("58009.C.7"),
    NET_SQLCDTA_INVALID_FOR_PKGID("58009.C.8"),
    NET_PGNAMCSN_INVALID_AT_SQLAM("58009.C.9"),
    NET_VCM_VCS_LENGTHS_INVALID("58009.C.10"),
    NET_ENCODING_NOT_SUPPORTED("58009.C.11"),
    NET_NOT_EXPECTED_CODEPOINT("58009.C.12"),
    NET_DDM_COLLECTION_TOO_SMALL("58009.C.13"),
    NET_COLLECTION_STACK_NOT_EMPTY("58009.C.14"),
    NET_DSS_NOT_ZERO("58009.C.15"),
    NET_DSS_CHAINED_WITH_SAME_ID("58009.C.16"),
    NET_PREMATURE_EOS_DISCONNECT("58009.C.17"),
    NET_INVALID_FDOCA_ID("58009.C.18"),
    NET_SECTKN_NOT_RETURNED("58009.C.19"),
    NET_NVCM_NVCS_BOTH_NON_NULL("58009.C.20"),
    NET_SQLCDTA_INVALID_FOR_RDBNAM("58009.C.21"),

    DRDA_MGRLVLRM("58010.C"),
    DRDA_DDM_COMMAND_NOT_SUPPORTED("58014.C"),
    DRDA_DDM_OBJECT_NOT_SUPPORTED("58015.C"),
    DRDA_DDM_PARAM_NOT_SUPPORTED("58016.C"),
    DRDA_DDM_PARAMVAL_NOT_SUPPORTED("58017.C"),
    DRDA_NO_AVAIL_CODEPAGE_CONVERSION("57017.C"),

    /*
    ** com.splicemachine.db.database.UserUtility
        */
    UU_UNKNOWN_PERMISSION("XCZ00.S"),
    UU_UNKNOWN_USER("XCZ01.S"),
    UU_INVALID_PARAMETER("XCZ02.S"),

    /*
    ** SQL Java DDL 46xxx
    ** SQLJ jar file support
    */
    SQLJ_INVALID_JAR("46001"),
    SQLJ_SIGNATURE_INVALID("46J01"),
    SQLJ_SIGNATURE_PARAMETER_COUNT("46J02"),

    /*
    ** Import/Export
    */
    CONNECTION_NULL("XIE01.S"),
    DATA_AFTER_STOP_DELIMITER("XIE03.S"),
    DATA_FILE_NOT_FOUND("XIE04.S"){
        @Override
        public StandardException newException(Throwable rootCause){
            if(rootCause instanceof NoSuchFileException){
                NoSuchFileException nsfe=(NoSuchFileException)rootCause;
                return StandardException.newException(getSqlState(),nsfe.getFile());
            }else if(rootCause instanceof FileNotFoundException){
                FileNotFoundException fnfe=(FileNotFoundException)rootCause;
                return StandardException.newException(getSqlState(),fnfe.getMessage());
            }else{
                return super.newException(rootCause);
            }
        }

        @Override
        public boolean accepts(Throwable t){
            return t instanceof NoSuchFileException ||
                    t instanceof FileNotFoundException ||
                    super.accepts(t);
        }
    },
    DATA_FILE_NULL("XIE05.S"),
    ENTITY_NAME_MISSING("XIE06.S"),
    FIELD_IS_RECORD_SEPERATOR_SUBSET("XIE07.S"),
    INVALID_COLUMN_NAME("XIE08.S"),
    INVALID_COLUMN_NUMBER("XIE09.S"),
    UNSUPPORTED_COLUMN_TYPE("XIE0B.S"),
    ILLEGAL_DELIMITER_CHAR("XIE0C.S"),
    RECORD_SEPERATOR_MISSING("XIE0D.S"),
    UNEXPECTED_END_OF_FILE("XIE0E.S"),
    DELIMITERS_SAME("XIE0F.S"),
    ERROR_WRITING_DATA("XIE0I.S"),
    DELIMITERS_ARE_NOT_MUTUALLY_EXCLUSIVE("XIE0J.S"),
    PERIOD_AS_CHAR_DELIMITER_NOT_ALLOWED("XIE0K.S"),
    TABLE_NOT_FOUND("XIE0M.S"),
    IMPORTFILE_HAS_INVALID_HEXSTRING("XIE0N.S"),
    LOB_DATA_FILE_NOT_FOUND("XIE0P.S"),
    LOB_DATA_FILE_NULL("XIE0Q.S"),
    UNEXPECTED_IMPORT_ERROR("XIE0R.S"),
    UNEXPECTED_IMPORT_CSV_ERROR("XIE11.S"),
    DATA_FILE_EXISTS("XIE0S.S"),
    LOB_DATA_FILE_EXISTS("XIE0T.S"),


    /*
    ** Security XK...
    */
    POLICY_NOT_RELOADED("XK000.S"),
    NO_SUCH_USER("XK001.S"),

    /*
    ** Replication XRExx
    */
    LOGMODULE_DOES_NOT_SUPPORT_REPLICATION("XRE00"),
    REPLICATION_LOG_CORRUPTED("XRE01"),
    REPLICATION_PRIMARY_REPLICA_VERSION_MISMATCH("XRE02"),
    REPLICATION_UNEXPECTED_EXCEPTION("XRE03"),
    REPLICATION_CONNECTION_EXCEPTION("XRE04.C.1"),
    REPLICATION_CONNECTION_LOST("XRE04.C.2"),
    REPLICATION_LOG_OUT_OF_SYNCH("XRE05.C"),
    REPLICATION_PRIMARY_TIMED_OUT("XRE06"),
    REPLICATION_NOT_IN_PRIMARY_MODE("XRE07"),
    REPLICATION_REPLICA_STARTED_OK("XRE08"),
    CANNOT_START_REPLICA_ALREADY_BOOTED("XRE09.C"),
    REPLICATION_CONFLICTING_ATTRIBUTES("XRE10"),
    REPLICATION_DB_NOT_BOOTED("XRE11.C"),
    REPLICATION_UNEXPECTED_MESSAGEID("XRE12"),
    REPLICATION_FAILOVER_SUCCESSFUL("XRE20.D"),
    REPLICATION_FAILOVER_UNSUCCESSFUL("XRE21.C"),
    REPLICATION_PRIMARY_ALREADY_BOOTED("XRE22.C"),
    REPLICATION_UNLOGGED_OPERATIONS_IN_PROGRESS("XRE23"),
    REPLICATION_NOT_IN_REPLICA_MODE("XRE40"),
    REPLICA_OPERATION_DENIED_WHILE_CONNECTED("XRE41.C"),
    REPLICATION_REPLICA_SHUTDOWN_OK("XRE42.C"),
    REPLICATION_STOPREPLICA_NOT_INITIATED("XRE43"),

    /*
     * Splice Specific Error Messages
     */
    SPLICE_WRITE_RETRIES_EXHAUSTED("SE003"){
        @Override
        public boolean accepts(Throwable t){
            return super.accepts(t) || t instanceof WriteFailedException;
        }

        @Override
        public StandardException newException(Throwable rootCause){
            if(!(rootCause instanceof WriteFailedException))
                return super.newException(rootCause);

            WriteFailedException wfe=(WriteFailedException)rootCause;

            return StandardException.newException(getSqlState(),wfe.getDestinationTableName(),wfe.getNumAttempts());
        }
    },
    SPLICE_REGION_OFFLINE("SE004"){
        @Override
        public boolean accepts(Throwable t){
            return t instanceof NotServingPartitionException ||
                    t instanceof WrongPartitionException ||
                    t instanceof FailedServerException ||
                    super.accepts(t);
        }

        @Override
        public StandardException newException(Throwable rootCause){
            if(!(rootCause instanceof NotServingPartitionException))
                return super.newException(rootCause);
            String message=rootCause.getMessage();

            Matcher matcher=Pattern.compile(" (.*),").matcher(message);
            if(!matcher.find()){
                //try and get it for a slightly different pattern
                //if that doesn't work, fall back on the default
                matcher=Pattern.compile("(.*),").matcher(message);
                if(!matcher.find())
                    return super.newException(rootCause);
            }

            String regionName=matcher.group(1);
            regionName=regionName.substring(0,regionName.length()-1);

            return StandardException.newException(getSqlState(),regionName);
        }
    },SPLICE_REGION_TOO_BUSY("SE005"){
        @Override
        public boolean accepts(Throwable t){
            return super.accepts(t) || t instanceof PipelineTooBusy;
        }

        @Override
        public StandardException newException(Throwable rootCause){
            return StandardException.newException(getSqlState());
        }
    },
    SPLICE_OPERATION_UNSUPPORTED("SE002"),
    SPLICE_UNEXPECTED_EXCEPTION("SE001"){
        @Override
        public StandardException newException(Throwable rootCause){
            return StandardException.newException(getSqlState(),rootCause,"unexpected exception");
        }
    },
    SPLICE_TIMEOUT_EXCEPTION("SE007"){
        @Override
        public boolean accepts(Throwable t){
            return super.accepts(t) || t instanceof SocketTimeoutException
                    || t instanceof CallTimeoutException;
        }

        @Override
        public StandardException newException(Throwable rootCause){
            return StandardException.newException(getSqlState(),rootCause.getMessage());
        }
    },
    SPLICE_CANCELLATION_EXCEPTION("57014"){
        @Override
        public boolean accepts(Throwable t){
            return super.accepts(t)
                    || t instanceof CancellationException
                    || t instanceof OperationCancelledException;
        }

        @Override
        public StandardException newException(Throwable rootCause){
            return StandardException.newException(getSqlState());
        }
    },
    LANG_IMPORT_TOO_MANY_BAD_RECORDS("SE009"),
    LANG_NO_WRITE_PERMISSION("SE010"),
    LANG_NO_READ_PERMISSION("SE011"),
    LANG_NOT_A_DIRECTORY("SE012"),
    DDL_ACTIVE_TRANSACTIONS("SE013"),
    WRITE_WRITE_CONFLICT("SE014"){
        @Override
        public boolean accepts(Throwable t){
            return super.accepts(t) || t instanceof WriteConflict;
        }

        @Override
        public StandardException newException(Throwable rootCause){
            if(!(rootCause instanceof WriteConflict))
                return super.newException(rootCause);
            WriteConflict conflict=(WriteConflict)rootCause;
            long txn1=conflict.getFirstTransaction();
            long txn2=conflict.getSecondTransaction();
            return StandardException.newException(getSqlState(),txn1,txn2);
        }
    },
    CANNOT_COMMIT("SE015"){
        @Override
        public boolean accepts(Throwable t){
            return super.accepts(t) || t instanceof CannotCommitException;
        }

        @Override
        public StandardException newException(Throwable rootCause){
            if(!(rootCause instanceof CannotCommitException))
                return super.newException(rootCause);
            CannotCommitException cce=(CannotCommitException)rootCause;
            return StandardException.newException(getSqlState(),cce.getTxnId());
        }
    },
    DDL_TIMEOUT("SE017"),
    UPSERT_NO_PRIMARY_KEYS("SE018"),
    IMPORT_MISSING_NOT_NULL_KEY("SE019"),
    LANG_COLUMN_STATISTICS_NOT_POSSIBLE("SE020"),
    LANG_DISABLE_STATS_FOR_KEYED_COLUMN("SE021"),
    LANG_INVALID_DAY("SE022"),
    LANG_STATS_EXTRAPOLATION_NOT_SUPPORTED("SE026"),
    LANG_INVALID_FAKE_STATS("SE027"),
    INCORRECT_COLUMN_COUNT_IN_IMPORT("XIE0A"),
    CANNOT_WRITE_AT_LOCATION("EXT22"),
    TIMESTAMP_SERVER_CONNECTION("TSS01") {
        @Override
        public boolean accepts(Throwable t) {
            return super.accepts(t) || t instanceof TimestampIOException;
        }
    };

    private final String sqlState;

    ErrorState(String sqlState){
        this.sqlState=sqlState;
    }

    public static ErrorState stateFor(Throwable t){
        if(LANG_DUPLICATE_KEY_CONSTRAINT.accepts(t))
            return LANG_DUPLICATE_KEY_CONSTRAINT;
        //TODO -sf- ordering issues
        for(ErrorState state : values()){
            if(state==COMMUNICATION_ERROR)
                continue;
            if(state.accepts(t))
                return state;
        }

        //something unexpected happened, that's probably not good.
        return SPLICE_UNEXPECTED_EXCEPTION;
    }

    public static ErrorState stateFor(String sqlState){
        for(ErrorState errorState : values()){
            if(errorState.sqlState.equals(sqlState))
                return errorState;
        }
        throw new IllegalArgumentException("Unable to determine error state for '"+sqlState+"'");
    }

    public String getSqlState(){
        return sqlState;
    }

    public StandardException newException(Throwable rootCause){
        return StandardException.newException(getSqlState(),rootCause);
    }

    public StandardException newException(Object... message){
        return StandardException.newException(getSqlState(),message);
    }

    public boolean accepts(Throwable t){
        if(!(t instanceof StandardException)) return false;

        StandardException se=(StandardException)t;
        return se.getSqlState().equals(sqlState);
    }

    // Group 1 contains one or more digits anchored to beginning of line to first non-digit char. This is the sql state ID.
    // Throw away any non-digits up to and including the first space. eg; "(20001).S.180.4 "
    // Group 2 contains the rest of the line. This is the error message.
    private static final Pattern badRecordPattern=Pattern.compile("^([^ ]+)* (.*)");

    public static StandardException fromBadRecord(String badRecord){
        ErrorState state=ErrorState.UNEXPECTED_IMPORT_CSV_ERROR;
        String errorMsg=badRecord;
        Matcher badRecordMatcher=badRecordPattern.matcher(badRecord);
        if(badRecordMatcher.find()){
            String errorState=badRecordMatcher.group(1);
            errorMsg=badRecordMatcher.group(2);
            if(errorState!=null)
                state=ErrorState.stateFor(errorState);
        }

        return state.newException(errorMsg);
    }
}
