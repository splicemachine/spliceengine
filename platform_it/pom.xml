<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2012 - 2020 Splice Machine, Inc.
  ~
  ~ This file is part of Splice Machine.
  ~ Splice Machine is free software: you can redistribute it and/or modify it under the terms of the
  ~ GNU Affero General Public License as published by the Free Software Foundation, either
  ~ version 3, or (at your option) any later version.
  ~ Splice Machine is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
  ~ without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
  ~ See the GNU Affero General Public License for more details.
  ~ You should have received a copy of the GNU Affero General Public License along with Splice Machine.
  ~ If not, see <http://www.gnu.org/licenses/>.
  -->
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <artifactId>platform_it</artifactId>
    <description>Integration Tests for SQL engine based on HBase</description>
    <parent>
        <artifactId>spliceengine-parent</artifactId>
        <groupId>com.splicemachine</groupId>
        <version>3.1.0.1977-SNAPSHOT</version>
    </parent>
    <properties>
        <!--Skip server startup-->
        <server.skip.start>skipServerStart</server.skip.start>
        <!--Ant task to run shell scripts-->
        <shell.command>/bin/bash</shell.command>
        <start.script>${project.basedir}/src/test/bin/start-splice-its</start.script>
        <stop.script>${project.basedir}/src/test/bin/stop-splice-its</stop.script>
        <ee_out/>
        <skipTests>${maven.skip.tests}</skipTests>
        <skip.dep.copy>${skipSparkPrepare}</skip.dep.copy>
        <argLine>-Xms64m -Xmx4g ${jacocoAgent}</argLine>
        <tmpDir>${project.build.directory}/tmp</tmpDir>
    </properties>
    <dependencies>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>hbase_sql</artifactId>
            <version>${project.version}</version>
            <classifier>${envClassifier}</classifier>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>hbase_sql</artifactId>
            <version>${project.version}</version>
            <classifier>${envClassifier}-tests</classifier>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>hbase_storage</artifactId>
            <version>${project.version}</version>
            <classifier>${envClassifier}</classifier>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>splice_machine</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>pipeline_api</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>splice_si_api</artifactId>
            <version>${project.version}</version>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>${project.groupId}</groupId>
            <artifactId>hbase_storage</artifactId>
            <version>${project.version}</version>
            <classifier>${envClassifier}-tests</classifier>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.splicemachine</groupId>
            <artifactId>splice_spark</artifactId>
            <version>${project.version}</version>
            <classifier>${envClassifier}</classifier>
        </dependency>
        <dependency>
            <groupId>com.splicemachine</groupId>
            <artifactId>splice_spark</artifactId>
            <version>${project.version}</version>
            <classifier>${envClassifier}-tests</classifier>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>com.splicemachine</groupId>
            <artifactId>splice_spark2</artifactId>
            <version>${project.version}</version>
            <classifier>${envClassifier}</classifier>
        </dependency>
        <dependency>
            <groupId>com.splicemachine</groupId>
            <artifactId>splice_spark2</artifactId>
            <version>${project.version}</version>
            <classifier>${envClassifier}-tests</classifier>
            <type>test-jar</type>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-minikdc</artifactId>
            <version>${hadoop.version}</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>commons-dbutils</groupId>
            <artifactId>commons-dbutils</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.hbase</groupId>
            <artifactId>hbase-testing-util</artifactId>
            <version>${hbase.version}</version>
            <scope>runtime</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.mortbay.jetty</groupId>
                    <artifactId>jsp-2.1</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.mortbay.jetty</groupId>
                    <artifactId>jsp-api-2.1</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>tomcat</groupId>
                    <artifactId>jasper-compiler</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>tomcat</groupId>
                    <artifactId>jasper-runtime</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.hadoop</groupId>
                    <artifactId>hadoop-core</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.mortbay.jetty</groupId>
                    <artifactId>servlet-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.sun.jersey</groupId>
                    <artifactId>jersey-server</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.sun.jersey</groupId>
                    <artifactId>jersey-core</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <!-- org.apache.hive.jdbc.HiveDriver -->
            <groupId>org.apache.hive</groupId>
            <artifactId>hive-jdbc</artifactId>
            <version>${hive.version}</version>
            <scope>test</scope>
            <exclusions>
                <exclusion>
                    <groupId>com.fasterxml.jackson.core</groupId>
                    <artifactId>jackson-databind</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.curator</groupId>
                    <artifactId>curator-framework</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.parquet</groupId>
                    <artifactId>parquet-hadoop-bundle</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.logging.log4j</groupId>
                    <artifactId>log4j-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.logging.log4j</groupId>
                    <artifactId>log4j-core</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.logging.log4j</groupId>
                    <artifactId>log4j-1.2-api</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.logging.log4j</groupId>
                    <artifactId>log4j-slf4j-impl</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>org.apache.hbase</groupId>
            <artifactId>hbase-mapreduce</artifactId>
            <version>${hbase.version}</version>
            <scope>runtime</scope>
        </dependency>
        <!-- Kafka dependencies -->
        <dependency>
            <groupId>org.apache.kafka</groupId>
            <artifactId>kafka_${scala.binary.version}</artifactId>
            <version>${kafka.version}</version>
            <scope>runtime</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.glassfish.jersey.containers</groupId>
                    <artifactId>jersey-container-servlet</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>net.jpountz.lz4</groupId>
                    <artifactId>lz4</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.fasterxml.jackson.core</groupId>
                    <artifactId>jackson-databind</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>  <!-- needed by Kafka 2.0 but not 2.2 -->
            <groupId>org.slf4j</groupId>
            <artifactId>slf4j-api</artifactId>
            <version>1.7.15</version>
            <scope>runtime</scope>
        </dependency>
        <!-- Yarn dependencies -->
        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-yarn-server-tests</artifactId>
            <version>${hadoop.version}</version>
            <classifier>tests</classifier>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-yarn-client</artifactId>
            <version>${hadoop.version}</version>
            <scope>runtime</scope>
        </dependency>
        <!-- Spark dependencies -->
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-yarn_${scala.binary.version}</artifactId>
            <version>${spark.version}</version>
            <scope>runtime</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-sql_${scala.binary.version}</artifactId>
            <version>${spark.version}</version>
            <scope>runtime</scope>
            <exclusions>
                <exclusion>
                    <groupId>com.twitter</groupId>
                    <artifactId>parquet-hadoop</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.twitter</groupId>
                    <artifactId>parquet-column</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.twitter</groupId>
                    <artifactId>parquet-avro</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <groupId>com.sun.jersey</groupId>
            <artifactId>jersey-bundle</artifactId>
            <version>1.17.1</version>
        </dependency>
        <dependency>
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-hive_${scala.binary.version}</artifactId>
            <version>${spark.version}</version>
            <scope>runtime</scope>
            <exclusions>
                <exclusion>
                    <groupId>org.apache.httpcomponents</groupId>
                    <artifactId>httpclient</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>org.apache.httpcomponents</groupId>
                    <artifactId>httpcore</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.twitter</groupId>
                    <artifactId>parquet-hadoop</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.twitter</groupId>
                    <artifactId>parquet-column</artifactId>
                </exclusion>
                <exclusion>
                    <groupId>com.twitter</groupId>
                    <artifactId>parquet-avro</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        <dependency>
            <!-- com.splicemachine.spark.splicemachine.SparkStreamingIT -->
            <groupId>org.apache.spark</groupId>
            <artifactId>spark-streaming_${scala.binary.version}</artifactId>
            <version>${spark.version}</version>
            <scope>test</scope>
        </dependency>
        <!-- Scala dependencies -->
        <dependency>
            <groupId>org.scalatest</groupId>
            <artifactId>scalatest_${scala.binary.version}</artifactId>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.apache.directory.server</groupId>
            <artifactId>apacheds-core-api</artifactId>
            <version>2.0.0-M15</version>
        </dependency>
        <dependency>
            <groupId>org.apache.directory.server</groupId>
            <artifactId>apacheds-protocol-shared</artifactId>
            <version>2.0.0-M15</version>
        </dependency>
        <dependency>
            <groupId>org.apache.directory.server</groupId>
            <artifactId>apacheds-protocol-ldap</artifactId>
            <version>2.0.0-M15</version>
            <exclusions>
                <exclusion>
                    <groupId>bouncycastle</groupId>
                    <artifactId>bcprov-jdk15</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
    </dependencies>
    <build>
        <extensions>
            <extension>
                <groupId>kr.motd.maven</groupId>
                <artifactId>os-maven-plugin</artifactId>
                <version>1.5.0.Final</version>
            </extension>
        </extensions>
        <plugins>
           <plugin>
               <groupId>org.apache.maven.plugins</groupId>
               <artifactId>maven-jar-plugin</artifactId>
               <executions>
                   <execution>
                       <goals>
                           <goal>test-jar</goal>
                       </goals>
                   </execution>
               </executions>
           </plugin>
            <plugin>
                <groupId>org.apache.felix</groupId>
                <artifactId>maven-bundle-plugin</artifactId>
                <version>4.0.0</version>
                <inherited>true</inherited>
                <extensions>true</extensions>
            </plugin>
            <plugin>
                <artifactId>maven-deploy-plugin</artifactId>
                <configuration>
                    <skip>true</skip>
                </configuration>
            </plugin>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>3.1.1</version>
                <executions>
                    <execution>
                        <id>copy</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <skip>${skip.dep.copy}</skip>
                            <includeScope>runtime</includeScope>
                        </configuration>
                    </execution>
                    <execution>
                        <id>copy-procs</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy</goal>
                        </goals>
                        <configuration>
                            <artifactItems>
                                <artifactItem>
                                    <groupId>org.splicetest.txn</groupId>
                                    <artifactId>txn-it-procs</artifactId>
                                    <version>${project.version}</version>
                                    <type>jar</type>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${project.build.directory}/txn-it</outputDirectory>
                                    <destFileName>txn-it.jar</destFileName>
                                </artifactItem>
                                <artifactItem>
                                    <groupId>org.splicetest.sqlj</groupId>
                                    <artifactId>sqlj-it-procs</artifactId>
                                    <version>${project.version}</version>
                                    <type>jar</type>
                                    <overWrite>true</overWrite>
                                    <outputDirectory>${project.build.directory}/sql-it</outputDirectory>
                                    <destFileName>sql-it.jar</destFileName>
                                </artifactItem>
                            </artifactItems>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-failsafe-plugin</artifactId>
                <configuration>
                    <additionalClasspathElements>
                        <additionalClasspathElement>${project.basedir}/target/hbase-site.xml</additionalClasspathElement>
                    </additionalClasspathElements>
                </configuration>
                <executions>
                    <!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = Integration tests: SERIAL -->
                    <execution>
                        <id>integration-tests-serial</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <groups>com.splicemachine.test.SerialTest</groups>
                            <excludedGroups>
                                ${excluded.categories},
                                ${excluded.longerthan}
                            </excludedGroups>
                            <argLine>-Xmx2g -Xms64m</argLine>
                            <redirectTestOutputToFile>true</redirectTestOutputToFile>
                            <dependenciesToScan>
                                <dependency>com.splicemachine:splice_machine</dependency>
                                <dependency>com.splicemachine:hbase_sql</dependency>
                            </dependenciesToScan>
                            <includes>
                                <include>**/*IT.java</include>
                            </includes>
                            <excludes>
                                <exclude>com/splicemachine/derby/impl/sql/execute/operations/window/test/framework/**
                                </exclude>
                            </excludes>
                            <runOrder>alphabetical</runOrder>
                            <systemPropertyVariables>
                                <splice.schemaCleanup>none</splice.schemaCleanup>
                            </systemPropertyVariables>
                        </configuration>
                    </execution>
                    <!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = Integration tests: PARALLEL -->
                    <execution>
                        <id>integration-tests-parallel</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <excludedGroups>
                                com.splicemachine.test.SerialTest,
                                com.splicemachine.test.RestoreTest,
                                ${excluded.categories},
                                ${excluded.longerthan}
                            </excludedGroups>
                            <parallel>classes</parallel>
                            <threadCount>1</threadCount>
                            <!-- -sf- single-threaded for now -->
                            <perCoreThreadCount>false</perCoreThreadCount>
                            <argLine>-Xmx2g -Xms64m</argLine>
                            <redirectTestOutputToFile>true</redirectTestOutputToFile>
                            <dependenciesToScan>
                                <dependency>com.splicemachine:splice_machine</dependency>
                                <dependency>com.splicemachine:hbase_sql</dependency>
                            </dependenciesToScan>
                            <includes>
                                <include>**/*IT.java</include>
                            </includes>
                            <runOrder>alphabetical</runOrder>
                            <systemPropertyVariables>
                                <splice.schemaCleanup>async</splice.schemaCleanup>
                            </systemPropertyVariables>
                        </configuration>
                    </execution>
                    <!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = Integration tests: NSDS -->
                    <execution>
                        <id>integration-tests-nsds</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <dependenciesToScan>
                                <dependency>com.splicemachine:splice_spark</dependency>
                            </dependenciesToScan>
                            <argLine>-Xmx2g -Xms64m -Djava.library.path=${project.build.directory}/../../assembly/${envClassifier}/native/${os.detected.classifier}:/usr/local/lib/ ${hbase.rootdir}</argLine>
                            <redirectTestOutputToFile>true</redirectTestOutputToFile>
                            <includes>
                                <include>com/splicemachine/spark/splicemachine/**/*IT.java</include>
                            </includes>
                        </configuration>
                    </execution>
                    <execution>
                        <id>integration-tests-ensds</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <dependenciesToScan>
                                <dependency>com.splicemachine:splice_spark2</dependency>
                            </dependenciesToScan>
                            <argLine>-Xmx2g -Xms64m -Djava.library.path=${project.build.directory}/../../assembly/${envClassifier}/native/${os.detected.classifier}:/usr/local/lib/ ${hbase.rootdir}</argLine>
                            <redirectTestOutputToFile>true</redirectTestOutputToFile>
                            <includes>
                                <include>com/splicemachine/spark2/splicemachine/**/*IT.java</include>
                            </includes>
                        </configuration>
                    </execution>
                    <!-- = = = = = = = = = = = = = = = = = = = = = = = = = = = Integration tests: BACKUP -->
                    <execution>
                        <id>integration-tests-backup</id>
                        <goals>
                            <goal>integration-test</goal>
                            <goal>verify</goal>
                        </goals>
                        <configuration>
                            <groups>com.splicemachine.test.RestoreTest</groups>
                            <argLine>-Xmx2g -Xms64m</argLine>
                            <redirectTestOutputToFile>true</redirectTestOutputToFile>
                            <includes>
                                <include>**/*RestoreIT.java</include>
                            </includes>
                            <excludes>
                                <!-- Skip all unit tests -->
                                <exclude>**/*Test.java</exclude>
                            </excludes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            <plugin>
                <artifactId>maven-antrun-plugin</artifactId>
                <executions>
                    <execution>
                        <id>############### start-splice-its ###############</id>
                        <phase>pre-integration-test</phase>
                        <configuration>
                            <skip>${skipTests}</skip>
                            <target name="StartSpliceServer" unless="${server.skip.start}">
                                <taskdef resource="net/sf/antcontrib/antcontrib.properties"
                                         classpathref="maven.plugin.classpath"/>
                                <mkdir dir="${tmpDir}"/>
                                <if>
                                    <istrue value="${failTasksRandomly}"/>
                                    <!-- run with chaos monkey (default) -->
                                    <then>
                                        <exec executable="${shell.command}" dir="${basedir}" spawn="false">
                                            <arg value="${start.script}"/>
                                            <arg value="-c"/>
                                            <arg value="-p ${envClassifier}${ee_out}${jacoco_out}"/>
                                        </exec>
                                    </then>
                                    <else>
                                        <!-- chaos monkey overridden: -DfailTasksRandomly=false -->
                                        <exec executable="${shell.command}" dir="${basedir}" spawn="false">
                                            <arg value="${start.script}"/>
                                            <arg value="-p ${envClassifier}${ee_out}${jacoco_out}"/>
                                        </exec>
                                    </else>
                                </if>
                                <property name="classpath.test" refid="maven.test.classpath"/>
                                <!--suppress MavenModelInspection -->
                                <java classname="com.splicemachine.test.SpliceTestPlatformWait"
                                      classpath="${classpath.test}" spawn="false">
                                    <arg value="localhost"/>
                                    <arg value="1527"/>
                                </java>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>############### stop-splice-its ###############</id>
                        <phase>post-integration-test</phase>
                        <configuration>
                            <skip>${skipTests}</skip>
                            <target name="StopSpliceServer" unless="${server.skip.start}">
                                <exec executable="${shell.command}" dir="${basedir}" spawn="false">
                                    <arg value="${stop.script}"/>
                                </exec>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                    <execution>
                        <id>clean stop-splice-its</id>
                        <phase>pre-clean</phase>
                        <configuration>
                            <skip>${skipTests}</skip>
                            <target name="StopSpliceServer" unless="${server.skip.start}">
                                <exec executable="${shell.command}" dir="${basedir}" spawn="false">
                                    <arg value="${stop.script}"/>
                                </exec>
                            </target>
                        </configuration>
                        <goals>
                            <goal>run</goal>
                        </goals>
                    </execution>
                </executions>
                <dependencies>
                    <dependency>
                        <groupId>ant-contrib</groupId>
                        <artifactId>ant-contrib</artifactId>
                        <version>1.0b3</version>
                        <exclusions>
                            <exclusion>
                                <groupId>ant</groupId>
                                <artifactId>ant</artifactId>
                            </exclusion>
                        </exclusions>
                    </dependency>
                    <dependency>
                        <groupId>org.apache.ant</groupId>
                        <artifactId>ant-nodeps</artifactId>
                        <version>1.8.1</version>
                    </dependency>
                </dependencies>
            </plugin>
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>build-helper-maven-plugin</artifactId>
                <version>1.9.1</version>
                <executions>
                    <execution>
                        <id>add-platform-source</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>spark${spark.version}/src/main/java</source>
                            </sources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>add-platform-test-source</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-test-source</goal>
                        </goals>
                        <configuration>
                            <sources>
                                <source>spark${spark.version}/src/test/java</source>
                            </sources>
                        </configuration>
                    </execution>
                    <execution>
                        <id>add-platform-test-resource</id>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>add-test-resource</goal>
                        </goals>
                        <configuration>
                            <resources>
                                <resource>
                                    <directory>spark${spark.version}/src/test/resources</directory>
                                </resource>
                            </resources>
                        </configuration>
                    </execution>

                </executions>
            </plugin>
        </plugins>
        <resources>
            <resource>
                <directory>src/main/resources</directory>
            </resource>
        </resources>
    </build>
    <profiles>
        <!-- Test Environment execution profiles-->
        <profile>
            <!-- Kafka-->
            <id>spliceKafka</id>
            <activation>
                <property>
                    <name>kafka</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-clean-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>clean</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <excludeDefaultDirectories>true</excludeDefaultDirectories>
                            <filesets>
                                <fileset>
                                    <directory>${project.build.directory}/hbase</directory>
                                    <includes>
                                        <include>**/*</include>
                                    </includes>
                                </fileset>
                                <fileset>
                                    <directory>${project.build.directory}/zookeeper</directory>
                                    <includes>
                                        <include>**/*</include>
                                    </includes>
                                </fileset>
                            </filesets>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <classpathScope>test</classpathScope>
                            <executable>java</executable>
                            <arguments>
                                <argument>-classpath</argument>
                                <classpath/>
                                <argument>-Djava.awt.headless=true</argument>
                                <argument>
                                    -Dlog4j.configuration=file:${basedir}/src/main/resources/info-log4j.properties
                                </argument>
                                <argument>-Djava.net.preferIPv4Stack=true</argument>
                                <argument>-Dzookeeper.sasl.client=false</argument>
                                <argument>-Djava.io.tmpdir=${tmpDir}</argument>
                                <argument>-Xmx1g</argument>
                                <argument>-Xms64m</argument>
                                <argument>-XX:MinHeapFreeRatio=10</argument>
                                <argument>-XX:MaxHeapFreeRatio=50</argument>
                                <argument>-XX:+CMSClassUnloadingEnabled</argument>
                                <argument>com.splicemachine.kafka.TestKafkaCluster</argument>
                                <argument>localhost:2181</argument>
                            </arguments>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <!-- ZooKeeper-->
            <id>spliceZoo</id>
            <activation>
                <property>
                    <name>zoo</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-clean-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>clean</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <excludeDefaultDirectories>true</excludeDefaultDirectories>
                            <filesets>
                                <fileset>
                                    <directory>${project.build.directory}/hbase</directory>
                                    <includes>
                                        <include>**/*</include>
                                    </includes>
                                </fileset>
                                <fileset>
                                    <directory>${project.build.directory}/zookeeper</directory>
                                    <includes>
                                        <include>**/*</include>
                                    </includes>
                                </fileset>
                            </filesets>
                        </configuration>
                    </plugin>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <classpathScope>test</classpathScope>
                            <executable>java</executable>
                            <arguments>
                                <argument>-classpath</argument>
                                <classpath/>
                                <argument>-Djava.awt.headless=true</argument>
                                <argument>
                                    -Dlog4j.configuration=file:${basedir}/src/main/resources/info-log4j.properties
                                </argument>
                                <argument>-Djava.net.preferIPv4Stack=true</argument>
                                <argument>-Dzookeeper.sasl.client=false</argument>
                                <argument>-Xmx1g</argument>
                                <argument>-Xms64m</argument>
                                <argument>-XX:MinHeapFreeRatio=10</argument>
                                <argument>-XX:MaxHeapFreeRatio=50</argument>
                                <argument>-XX:+CMSClassUnloadingEnabled</argument>
                                <!-- Uncomment this to enable debugging of zookeeper on standalone via port 4002
                                <argument>-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=4002</argument>
                                  -->
                                <argument>org.apache.zookeeper.server.ZooKeeperServerMain</argument>
                                <argument>2181</argument>
                                <argument>${project.build.directory}/zookeeper</argument>
                                <argument>10000</argument>
                            </arguments>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>spliceHdfs</id>
            <activation>
                <property>
                    <name>spliceHdfs</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>java</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <!-- exec:java required so that these 2 dependency properties are available (they aren't with exec:exec -->
                            <classpathScope>test</classpathScope>
                            <!--<includeProjectDependencies>false</includeProjectDependencies>-->
                            <!--<includePluginDependencies>true</includePluginDependencies>-->
                            <mainClass>com.splicemachine.test.SpliceTestDfsPlatform</mainClass>
                            <arguments>
                                <argument>2</argument>
                                <argument>${project.build.directory}</argument>
                            </arguments>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>spliceKDC</id>
            <activation>
                <property>
                    <name>spliceKDC</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>java</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <!-- exec:java required so that these 2 dependency properties are available (they aren't with exec:exec -->
                            <classpathScope>test</classpathScope>
                            <!--<includeProjectDependencies>false</includeProjectDependencies>-->
                            <!--<includePluginDependencies>true</includePluginDependencies>-->
                            <mainClass>com.splicemachine.test.SpliceTestKDCPlatform</mainClass>
                            <arguments>
                                <!-- Root of the serve classpath. Yarn config file (yarn-site.xml) will be written here. -->
                                <argument>${project.build.directory}</argument>
                            </arguments>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>spliceFast</id>
            <activation>
                <property>
                    <name>spliceFast</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <classpathScope>test</classpathScope>
                            <executable>java</executable>
                            <arguments>
                                <argument>-classpath</argument>
                                <classpath/>
                                <argument>${jacocoAgent}</argument>
                                <argument>-Xdebug</argument>
                                <argument>-Dhadoop.metrics.init.mode=STANDBY</argument>
                                <argument>-Djava.security.krb5.conf=${project.build.directory}/krb5.conf</argument>
                                <argument>-Dlog4j.configuration=${log4j.config.uri}</argument>
                                <argument>-XX:MinHeapFreeRatio=10</argument>
                                <argument>-XX:MaxHeapFreeRatio=30</argument>
                                <argument>-Djava.net.preferIPv4Stack=true</argument>
                                <argument>-Djava.awt.headless=true</argument>
                                <argument>-Dzookeeper.sasl.client=false</argument>
                                <argument>-Dcom.sun.management.jmxremote.ssl=false</argument>
                                <argument>-Dcom.sun.management.jmxremote.authenticate=false</argument>
                                <argument>-Dcom.sun.management.jmxremote.port=10102</argument>
                                <argument>-Djava.io.tmpdir=${tmpDir}</argument>
                                <argument>-Dsplice.authentication=NATIVE</argument>
                                <argument>-Dcom.splicemachine.enableLegacyAsserts=true</argument>
                                <argument>
                                    -Djava.library.path=${project.build.directory}/../../assembly/${envClassifier}/native/${os.detected.classifier}:/usr/local/lib/
                                </argument>
                                <argument>-Xmx3g</argument>
                                <argument>-Xms64m</argument>
                                <!-- Spark Sys props -->
                                <argument>-Dsplice.spark.app.name=SpliceMachine</argument>
                                <argument>-Dsplice.spark.eventLog.enabled=true</argument>
                                <argument>
                                    -Dsplice.spark.eventLog.dir=${project.build.directory}/SpliceTestYarnPlatform/
                                </argument>
                                <argument>${spark.warehouse}</argument>
                                <!--                                <argument>-Dsplice.spark.broadcast.factory=org.apache.spark.broadcast.HttpBroadcastFactory</argument> -->
                                <argument>-Dsplice.spark.driver.host=localhost</argument>
                                <argument>-Dsplice.spark.driver.cores=1</argument>
                                <argument>
                                    -Dsplice.spark.driver.extraClassPath=${project.build.directory}/classes:${project.build.directory}/dependency/*
                                </argument>
                                <argument>-Dsplice.spark.driver.maxResultSize=1g</argument>
                                <argument>-Dsplice.spark.driver.memory=1g</argument>
                                <argument>-Dsplice.spark.enabled=true</argument>
                                <argument>-Dsplice.spark.executor.cores=3</argument>
                                <argument>${spark.defaultfs}</argument>
                                <argument>
                                    -Dsplice.spark.executor.extraClassPath=${project.build.directory}:${project.build.directory}/classes:${project.build.directory}/dependency/*
                                </argument>
                                <argument>
                                    -Dspark.executor.extraLibraryPath=${project.build.directory}/../../assembly/${envClassifier}/native/${os.detected.classifier}
                                </argument>
                                <argument>
                                    -Dspark.yarn.jars=local:${project.build.directory}/dependency/*
                                </argument>
                                <argument>
                                    -Djava.library.path=${project.build.directory}/../../assembly/${envClassifier}/native/${os.detected.classifier}:/usr/local/lib/
                                </argument>
                                <argument>-Dsplice.spark.executor.instances=1</argument>
                                <argument>-Dsplice.spark.executor.memory=2000M</argument>
                                <argument>-Dsplice.spark.io.compression.lz4.blockSize=32k</argument>
                                <argument>-Dspark.broadcast.compress=true</argument>
                                <argument>-Dsplice.spark.kryo.referenceTracking=false</argument>
                                <argument>
                                    -Dsplice.spark.kryo.registrator=com.splicemachine.derby.impl.SpliceSparkKryoRegistrator
                                </argument>
                                <argument>-Dsplice.spark.kryoserializer.buffer.max=512m</argument>
                                <argument>-Dsplice.spark.kryoserializer.buffer=4m</argument>
                                <argument>-Dsplice.spark.locality.wait=60s</argument>
                                <argument>-Dsplice.spark.logConf=true</argument>
                                <argument>-Dsplice.spark.master=yarn</argument>
                                <argument>-Dsplice.spark.submit.deployMode=client</argument>
                                <argument>
                                    -Dsplice.spark.scheduler.allocation.file=${project.basedir}/src/main/resources/fairscheduler.xml
                                </argument>
                                <argument>-Dsplice.spark.scheduler.mode=FAIR</argument>
                                <argument>-Dsplice.spark.blacklist.enabled=false</argument>
                                <argument>-Dsplice.spark.serializer=com.splicemachine.serializer.SpliceKryoSerializer
                                </argument>
                                <argument>-Dsplice.spark.shuffle.compress=false</argument>
                                <argument>-Dsplice.spark.driver.extraJavaOptions=
                                    -Djava.security.krb5.conf=${project.build.directory}/krb5.conf
                                    ${hbase.rootdir}
                                    -Dhdp.version=2.6.3
                                    -enableassertions
                                    -Xms64m -XX:MinHeapFreeRatio=10 -XX:MaxHeapFreeRatio=50
                                </argument>
                                <argument>-Dsplice.spark.yarn.am.extraJavaOptions=
                                    -Dhdp.version=2.6.3
                                    -Djava.security.krb5.conf=${project.build.directory}/krb5.conf
                                    -Xms64m -XX:MinHeapFreeRatio=10 -XX:MaxHeapFreeRatio=50
                                </argument>
                                <argument>-Dsplice.spark.executor.extraJavaOptions=
                                    ${hbase.rootdir}
                                    -Dlog4j.configuration=${log4j.config.uri}
                                    -Dhdp.version=2.6.3
                                    -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=4020
                                    -Djava.security.krb5.conf=${project.build.directory}/krb5.conf
                                    -enableassertions
                                    -Xms64m -XX:MinHeapFreeRatio=10 -XX:MaxHeapFreeRatio=40
                                    ${jacocoAgent}
                                </argument>
                                <argument>-Dsplice.spark.yarn.user=${user.name}</argument>
                                <argument>
                                    -Dsplice.olapServer.classpath=${project.build.directory}:${project.build.directory}/dependency/javax.servlet-api-3.1.0.jar:${project.build.directory}/classes
                                </argument>
                                <argument>-Dsplice.olapServer.extraJavaOptions=
                                    -Djava.library.path=${project.build.directory}/../../assembly/${envClassifier}/native/${os.detected.classifier}:/usr/local/lib/
                                    ${hbase.rootdir}
                                    -Dlog4j.configuration=${log4j.config.uri}
                                    -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=4025
                                    -enableassertions
                                    -Djava.net.preferIPv4Stack=true
                                    -Djava.security.krb5.conf=${project.build.directory}/krb5.conf
                                    -Xms64m -XX:MinHeapFreeRatio=10 -XX:MaxHeapFreeRatio=30
                                </argument>
                                <argument>${spark.keytab}</argument>
                                <argument>${spark.principal}</argument>
                                <argument>-Dsplice.spark.shuffle.file.buffer=128k</argument>
                                <argument>-Dsplice.spark.shuffle.memoryFraction=0.7</argument>
                                <argument>-Dsplice.spark.shuffle.service.enabled=true</argument>
                                <argument>-Dsplice.spark.yarn.am.waitTime=10s</argument>
                                <argument>-XX:+UseG1GC</argument>
                                <argument>-enableassertions</argument>
                                <argument>-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=4000</argument>
                                <!-- Setting the updateSystemProcs option to true causes all of the system stored procedures to be re-created on server startup. -->
                                <argument>-Dderby.language.updateSystemProcs=false</argument>
                                <!-- Setting the logStatementText option to true enables logging of all statements. -->
                                <argument>-Dderby.infolog.append=true</argument>
                                <argument>com.splicemachine.test.SpliceTestPlatform</argument>
                                <argument>file://${project.build.directory}/</argument>
                                <argument>60000</argument>
                                <argument>60010</argument>
                                <argument>60020</argument>
                                <argument>60030</argument>
                                <argument>1527</argument>
                                <argument>${failTasksRandomly}</argument>
                                <argument>${olap.log4j.config.uri}</argument>
                                <argument>${secure}</argument>
                            </arguments>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>spliceClusterMember</id>
            <activation>
                <property>
                    <name>spliceClusterMember</name>
                </property>
            </activation>
            <properties>
                <memberNumber>1</memberNumber>
            </properties>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <classpathScope>test</classpathScope>
                            <executable>java</executable>
                            <arguments>
                                <argument>-classpath</argument>
                                <classpath/>
                                <argument>${jacocoAgent}</argument>
                                <argument>-Dhadoop.metrics.init.mode=STANDBY</argument>
                                <argument>-XX:MinHeapFreeRatio=10</argument>
                                <argument>-XX:MaxHeapFreeRatio=30</argument>
                                <argument>-Djava.awt.headless=true</argument>
                                <argument>-Djava.security.krb5.conf=${project.build.directory}/krb5.conf</argument>
                                <argument>-Dlog4j.configuration=${log4j.config.uri}</argument>
                                <argument>-Djava.net.preferIPv4Stack=true</argument>
                                <argument>
                                    -Djava.library.path=${project.build.directory}/../../assembly/${envClassifier}/native/${os.detected.classifier}:/usr/local/lib/
                                </argument>
                                <argument>-Xmx3g</argument>
                                <argument>-Dcom.splicemachine.enableLegacyAsserts=true</argument>
                                <argument>-enableassertions</argument>
                                <argument>-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=4001</argument>
                                <argument>-XX:+UseG1GC</argument>
                                <argument>-Dcom.sun.management.jmxremote.ssl=false</argument>
                                <argument>-Dcom.sun.management.jmxremote.authenticate=false</argument>
                                <argument>-Dcom.sun.management.jmxremote.port=10103</argument>
                                <argument>-Djava.io.tmpdir=${tmpDir}</argument>
                                <argument>com.splicemachine.test.SpliceTestClusterParticipant</argument>
                                <argument>${project.build.directory}</argument>
                                <argument>${memberNumber}</argument>
                                <argument>${secure}</argument>
                            </arguments>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>

        <profile>
            <id>hdp3.1.0</id>
            <properties>
                <extraDependency>splice_ranger_service</extraDependency>
                <extraDependency2>splice_ranger_admin</extraDependency2>
                <extraDependency3>splice_atlas</extraDependency3>
            </properties>
        </profile>
        <profile>
            <id>cdh6.3.0</id>
            <properties>
                <extraDependency>splice_sentry</extraDependency>
                <extraDependency2>splice_ee</extraDependency2>
                <extraDependency3>splice_ee</extraDependency3>
            </properties>
        </profile>
        <profile>
            <id>dbaas</id>
            <properties>
                <extraDependency>splice_ee</extraDependency>
                <extraDependency2>splice_ee</extraDependency2>
                <extraDependency3>splice_ee</extraDependency3>
            </properties>
        </profile>
        <profile>
            <id>dbaas3.0</id>
            <properties>
                <extraDependency>splice_sentry</extraDependency>
                <extraDependency2>splice_ee</extraDependency2>
                <extraDependency3>splice_ee</extraDependency3>
            </properties>
        </profile>
        <profile>
            <id>ee</id>
            <activation>
                <property>
                    <name>ee</name>
                    <value>enterprise</value>
                </property>
            </activation>
            <properties>
                <ee_out>,ee</ee_out>
            </properties>
            <dependencies>
                <dependency>
                    <groupId>com.splicemachine</groupId>
                    <artifactId>splice_ee</artifactId>
                    <version>${project.version}</version>
                    <classifier>${envClassifier}</classifier>
                    <scope>runtime</scope>
                </dependency>
                <dependency>
                    <groupId>com.splicemachine</groupId>
                    <artifactId>splice_backup</artifactId>
                    <version>${project.version}</version>
                    <classifier>${envClassifier}</classifier>
                    <scope>runtime</scope>
                </dependency>
                <dependency>
                    <groupId>com.splicemachine</groupId>
                    <artifactId>splice_auth</artifactId>
                    <version>${project.version}</version>
                    <scope>runtime</scope>
                </dependency>
                <dependency>
                    <groupId>com.splicemachine</groupId>
                    <artifactId>splice_colperms</artifactId>
                    <version>${project.version}</version>
                    <scope>runtime</scope>
                </dependency>
                <dependency>
                    <groupId>com.splicemachine</groupId>
                    <artifactId>splice_encryption</artifactId>
                    <version>${project.version}</version>
                    <scope>runtime</scope>
                </dependency>
                <dependency>
                    <groupId>com.splicemachine</groupId>
                    <artifactId>enterprise_it</artifactId>
                    <version>${project.version}</version>
                    <type>test-jar</type>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>com.splicemachine</groupId>
                    <artifactId>splice_backup</artifactId>
                    <version>${project.version}</version>
                    <classifier>${envClassifier}-tests</classifier>
                    <type>test-jar</type>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>com.splicemachine</groupId>
                    <artifactId>${extraDependency}</artifactId>
                    <version>${project.version}</version>
                    <classifier>${envClassifier}</classifier>
                    <scope>runtime</scope>
                </dependency>
                <dependency>
                    <groupId>com.splicemachine</groupId>
                    <artifactId>${extraDependency}</artifactId>
                    <version>${project.version}</version>
                    <classifier>${envClassifier}-tests</classifier>
                    <type>test-jar</type>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>com.splicemachine</groupId>
                    <artifactId>${extraDependency2}</artifactId>
                    <version>${project.version}</version>
                    <classifier>${envClassifier}</classifier>
                    <scope>runtime</scope>
                </dependency>
                <dependency>
                    <groupId>com.splicemachine</groupId>
                    <artifactId>${extraDependency2}</artifactId>
                    <version>${project.version}</version>
                    <classifier>${envClassifier}-tests</classifier>
                    <type>test-jar</type>
                    <scope>test</scope>
                </dependency>
                <dependency>
                    <groupId>com.splicemachine</groupId>
                    <artifactId>${extraDependency3}</artifactId>
                    <version>${project.version}</version>
                    <classifier>${envClassifier}</classifier>
                    <scope>runtime</scope>
                </dependency>
                <dependency>
                    <groupId>com.splicemachine</groupId>
                    <artifactId>${extraDependency3}</artifactId>
                    <version>${project.version}</version>
                    <classifier>${envClassifier}-tests</classifier>
                    <type>test-jar</type>
                    <scope>test</scope>
                </dependency>
            </dependencies>
            <build>
                <plugins>
                    <plugin>
                        <artifactId>maven-failsafe-plugin</artifactId>
                        <configuration>
                            <dependenciesToScan combine.children="append">
                                <dependency>com.splicemachine:splice_backup</dependency>
                                <dependency>com.splicemachine:enterprise_it</dependency>
                                <dependency>com.splicemachine:${extraDependency}</dependency>
                                <dependency>com.splicemachine:${extraDependency2}</dependency>
                                <dependency>com.splicemachine:${extraDependency3}</dependency>
                            </dependenciesToScan>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>sparkHistory</id>
            <activation>
                <property>
                    <name>sparkHistory</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <classpathScope>test</classpathScope>
                            <executable>java</executable>
                            <arguments>
                                <!-- <argument>-verbose:gc</argument> -->
                                <argument>-classpath</argument>
                                <classpath/>
                                <argument>-Xdebug</argument>
                                <argument>-Dlog4j.configuration=${log4j.config.uri}</argument>
                                <argument>-Djava.net.preferIPv4Stack=true</argument>
                                <argument>-Djava.awt.headless=true</argument>
                                <argument>-Dzookeeper.sasl.client=false</argument>
                                <argument>-Dspark.ui.retainedJobs=3000</argument>
                                <argument>-Dspark.ui.retainedStages=3000</argument>
                                <argument>-Dcom.sun.management.jmxremote.ssl=false</argument>
                                <argument>-Dcom.sun.management.jmxremote.authenticate=false</argument>
                                <argument>
                                    -Djava.library.path=${project.build.directory}/../../assembly/${envClassifier}/native/${os.detected.classifier}:/usr/local/lib/
                                </argument>
                                <argument>org.apache.spark.deploy.history.HistoryServer</argument>
                                <argument>${project.build.directory}/SpliceTestYarnPlatform/</argument>
                            </arguments>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>jmeter</id>
            <activation>
                <activeByDefault>false</activeByDefault>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>com.lazerycode.jmeter</groupId>
                        <artifactId>jmeter-maven-plugin</artifactId>
                        <version>1.10.1</version>
                        <executions>
                            <execution>
                                <id>jmeter-tests</id>
                                <phase>verify</phase>
                                <goals>
                                    <goal>jmeter</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <testResultsTimestamp>false</testResultsTimestamp>
                            <overrideRootLogLevel>DEBUG</overrideRootLogLevel>
                            <suppressJMeterOutput>false</suppressJMeterOutput>
                            <ignoreResultFailures>true</ignoreResultFailures>
                            <testFilesIncluded>
                                <!-- jMeterTestFile>tpch-micro-suite.jmx</jMeterTestFile -->
                                <jMeterTestFile>tpch1.jmx</jMeterTestFile>
                            </testFilesIncluded>
                            <propertiesUser>
                                <clusterRegionserver>localhost</clusterRegionserver>
                            </propertiesUser>
                            <jMeterProcessJVMSettings>
                                <xms>128</xms>
                                <xmx>4096</xmx>
                                <!--
                                <arguments>
                                    <argument>-Xprof</argument>
                                    <argument>-Xfuture</argument>
                                </arguments>
                                -->
                            </jMeterProcessJVMSettings>
                        </configuration>
                        <dependencies>
                            <dependency>
                                <groupId>com.splicemachine</groupId>
                                <artifactId>db-client</artifactId>
                                <version>${project.version}</version>
                            </dependency>
                            <dependency>
                                <groupId>kg.apc</groupId>
                                <artifactId>jmeter-plugins</artifactId>
                                <version>1.0.0</version>
                                <exclusions>
                                    <exclusion>
                                        <groupId>kg.apc</groupId>
                                        <artifactId>perfmon</artifactId>
                                    </exclusion>
                                    <exclusion>
                                        <groupId>org.apache.jmeter</groupId>
                                        <artifactId>jorphan</artifactId>
                                    </exclusion>
                                    <exclusion>
                                        <groupId>org.apache.hbase</groupId>
                                        <artifactId>hbase</artifactId>
                                    </exclusion>
                                </exclusions>
                            </dependency>
                            <dependency>
                                <groupId>net.sourceforge.saxon</groupId>
                                <artifactId>saxon</artifactId>
                                <version>9.1.0.8</version>
                            </dependency>
                        </dependencies>
                    </plugin>
                    <plugin>
                        <groupId>org.apache.maven.plugins</groupId>
                        <artifactId>maven-surefire-plugin</artifactId>
                        <configuration>
                            <additionalClasspathElements>
                                <additionalClasspathElement>
                                    ${project.build.directory}/../../assembly/${envClassifier}/native/${os.detected.classifier}
                                </additionalClasspathElement>
                            </additionalClasspathElements>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
        <profile>
            <id>spliceFastSSL</id>
            <activation>
                <property>
                    <name>spliceFastSSL</name>
                </property>
            </activation>
            <build>
                <plugins>
                    <plugin>
                        <groupId>org.codehaus.mojo</groupId>
                        <artifactId>exec-maven-plugin</artifactId>
                        <executions>
                            <execution>
                                <goals>
                                    <goal>exec</goal>
                                </goals>
                            </execution>
                        </executions>
                        <configuration>
                            <classpathScope>test</classpathScope>
                            <executable>java</executable>
                            <arguments>
                                <!-- <argument>-verbose:gc</argument> -->
                                <argument>-classpath</argument>
                                <classpath/>
                                <argument>-Xdebug</argument>
                                <!-- <argument>-XX:+UnlockCommercialFeatures</argument>
                                <argument>-XX:+FlightRecorder</argument> -->
                                <argument>${jacocoAgent}</argument>
                                <argument>-Dlog4j.configuration=${log4j.config.uri}</argument>
                                <argument>-Djava.net.preferIPv4Stack=true</argument>
                                <argument>-Djava.awt.headless=true</argument>
                                <argument>-Dzookeeper.sasl.client=false</argument>
                                <argument>-Dcom.sun.management.jmxremote.ssl=false</argument>
                                <argument>-Dcom.sun.management.jmxremote.authenticate=false</argument>
                                <argument>-Dcom.sun.management.jmxremote.port=10102</argument>
                                <argument>-Djava.io.tmpdir=${tmpDir}</argument>
                                <argument>-Dsplice.authentication=NATIVE</argument>
                                <argument>-Dcom.splicemachine.enableLegacyAsserts=true</argument>
                                <argument>
                                    -Djava.library.path=${project.build.directory}/../../assembly/${envClassifier}/native/${os.detected.classifier}:/usr/local/lib/
                                </argument>
                                <argument>-Xmx2g</argument>
                                <argument>-Xms64m</argument>
                                <!-- Spark Sys props -->
                                <argument>-Dsplice.spark.app.name=SpliceMachine</argument>
                                <argument>-Dsplice.spark.sql.warehouse.dir=${project.build.directory}/spark-warehouse
                                </argument>
                                <!--                                <argument>-Dsplice.spark.broadcast.factory=org.apache.spark.broadcast.HttpBroadcastFactory</argument> -->
                                <argument>-Dsplice.spark.driver.host=localhost</argument>
                                <argument>-Dsplice.spark.driver.cores=1</argument>
                                <argument>
                                    -Dsplice.spark.driver.extraClassPath=${project.build.directory}/classes:${project.build.directory}/dependency/*
                                </argument>
                                <argument>-Dsplice.spark.driver.maxResultSize=1g</argument>
                                <argument>-Dsplice.spark.driver.memory=1g</argument>
                                <argument>-Dsplice.spark.enabled=true</argument>
                                <!--<argument>-Dsplice.spark.eventLog.dir=hdfs:///user/spark/applicationHistory</argument>-->
                                <!--<argument>-Dsplice.spark.eventLog.enabled=true</argument>-->
                                <argument>-Dsplice.spark.executor.cores=3</argument>
                                <argument>
                                    -Dsplice.spark.executor.extraClassPath=${project.build.directory}/classes:${project.build.directory}/dependency/*
                                </argument>
                                <argument>
                                    -Dspark.executor.extraLibraryPath=${project.build.directory}/../../assembly/${envClassifier}/native/${os.detected.classifier}
                                </argument>
                                <argument>
                                    -Dspark.yarn.jars=local:${project.build.directory}/dependency/*
                                </argument>
                                <argument>
                                    -Djava.library.path=${project.build.directory}/../../assembly/${envClassifier}/native/${os.detected.classifier}:/usr/local/lib/
                                </argument>
                                <argument>-Dsplice.spark.executor.instances=1</argument>
                                <argument>-Dsplice.spark.executor.memory=2g</argument>
                                <argument>-Dsplice.spark.io.compression.lz4.blockSize=32k</argument>
                                <argument>-Dspark.broadcast.compress=true</argument>
                                <argument>-Dsplice.spark.kryo.referenceTracking=false</argument>
                                <argument>
                                    -Dsplice.spark.kryo.registrator=com.splicemachine.derby.impl.SpliceSparkKryoRegistrator
                                </argument>
                                <argument>-Dsplice.spark.kryoserializer.buffer.max=512m</argument>
                                <argument>-Dsplice.spark.kryoserializer.buffer=4m</argument>
                                <argument>-Dsplice.spark.locality.wait=60s</argument>
                                <argument>-Dsplice.spark.logConf=true</argument>
                                <argument>-Dsplice.spark.master=yarn</argument>
                                <argument>-Dsplice.spark.submit.deployMode=client</argument>
                                <argument>
                                    -Dsplice.spark.scheduler.allocation.file=${project.basedir}/src/main/resources/fairscheduler.xml
                                </argument>
                                <argument>-Dsplice.spark.scheduler.mode=FAIR</argument>
                                <argument>-Dsplice.spark.serializer=com.splicemachine.serializer.SpliceKryoSerializer
                                </argument>
                                <argument>-Dsplice.spark.shuffle.compress=false</argument>
                                <argument>-Dsplice.spark.executor.extraJavaOptions=
                                    ${hbase.rootdir}
                                    -Dlog4j.configuration=${log4j.config.uri}
                                    -Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=4020
                                    -enableassertions
                                    ${jacocoAgent}
                                </argument>
                                <argument>-Dsplice.spark.shuffle.file.buffer=128k</argument>
                                <argument>-Dsplice.spark.shuffle.memoryFraction=0.7</argument>
                                <argument>-Dsplice.spark.shuffle.service.enabled=true</argument>
                                <argument>-Dsplice.spark.storage.memoryFraction=0.1</argument>
                                <argument>-Dsplice.spark.yarn.am.waitTime=10s</argument>
                                <!-- CMS Garbage Collection -->
                                <argument>-Xmn128m</argument>
                                <argument>-XX:MinHeapFreeRatio=10</argument>
                                <argument>-XX:MaxHeapFreeRatio=50</argument>
                                <argument>-XX:+UseConcMarkSweepGC</argument>
                                <argument>-XX:+UseParNewGC</argument>
                                <argument>-XX:NewSize=128m</argument>
                                <argument>-XX:MaxNewSize=128m</argument>
                                <argument>-XX:CMSInitiatingOccupancyFraction=70</argument>
                                <argument>-XX:+UseCMSInitiatingOccupancyOnly</argument>
                                <argument>-XX:MaxGCPauseMillis=100</argument>
                                <argument>-XX:+CMSClassUnloadingEnabled</argument>
                                <argument>-XX:MaxDirectMemorySize=1g</argument>
                                <argument>-enableassertions</argument>
                                <argument>-Xrunjdwp:transport=dt_socket,server=y,suspend=n,address=4000</argument>
                                <!-- Setting the updateSystemProcs option to true causes all of the system stored procedures to be re-created on server startup. -->
                                <argument>-Dderby.language.updateSystemProcs=false</argument>
                                <!-- Setting the logStatementText option to true enables logging of all statements. -->
                                <argument>-Dderby.language.logStatementText=false</argument>
                                <argument>-Dderby.infolog.append=true</argument>
                                <argument>-Dderby.drda.sslMode=${SERVER_SSLMODE}</argument>
                                <argument>-Djavax.net.ssl.keyStore=${SERVER_SSL_KEYSTORE}</argument>
                                <argument>-Djavax.net.ssl.keyStorePassword=${SERVER_SSL_KEYSTOREPASSWD}</argument>
                                <argument>-Djavax.net.ssl.trustStore=${SERVER_SSL_TRUSTSTORE}</argument>
                                <argument>-Djavax.net.ssl.trustStorePassword=${SERVER_SSL_TRUSTSTOREPASSWD}</argument>
                                <argument>com.splicemachine.test.SpliceTestPlatform</argument>
                                <argument>file://${project.build.directory}/hbase</argument>
                                <argument>60000</argument>
                                <argument>60010</argument>
                                <argument>60020</argument>
                                <argument>60030</argument>
                                <argument>1527</argument>
                                <argument>${failTasksRandomly}</argument>
                                <argument>${olap.log4j.config.uri}</argument>
                            </arguments>
                        </configuration>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
